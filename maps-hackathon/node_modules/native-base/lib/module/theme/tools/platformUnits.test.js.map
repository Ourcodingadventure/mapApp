{"version":3,"sources":["platformUnits.test.js"],"names":["describe","it","Platform","OS","newTheme","theme","space","xs","convertedTheme","expect","toEqual"],"mappings":"mKAAA,yCACA,qDACA,8BAEAA,QAAQ,CAAC,0BAAD,CAA6B,UAAM,CACzCC,EAAE,CAAC,yCAAD,CAA4C,UAAM,CAClDC,sBAASC,EAAT,CAAc,KAAd,CACA,GAAMC,CAAAA,QAAQ,0BAAQC,aAAR,CAAd,CACAD,QAAQ,CAACE,KAAT,CAAiB,CAAEC,EAAE,CAAE,KAAN,CAAjB,CACA,GAAMC,CAAAA,cAAc,CAAG,sCAA2BJ,QAA3B,CAAvB,CACAK,MAAM,CAACD,cAAc,CAACF,KAAhB,CAAN,CAA6BI,OAA7B,CAAqC,CAAEH,EAAE,CAAE,CAAN,CAArC,EACD,CANC,CAAF,CAQAN,EAAE,CAAC,0CAAD,CAA6C,UAAM,CACnDC,sBAASC,EAAT,CAAc,KAAd,CACA,GAAMC,CAAAA,QAAQ,0BAAQC,aAAR,CAAd,CACAD,QAAQ,CAACE,KAAT,CAAiB,CAAEC,EAAE,CAAE,MAAN,CAAjB,CACA,GAAMC,CAAAA,cAAc,CAAG,sCAA2BJ,QAA3B,CAAvB,CACAK,MAAM,CAACD,cAAc,CAACF,KAAhB,CAAN,CAA6BI,OAA7B,CAAqC,CAAEH,EAAE,CAAE,EAAN,CAArC,EACD,CANC,CAAF,CAOD,CAhBO,CAAR,CAkBAP,QAAQ,CAAC,uBAAD,CAA0B,UAAM,CACtCC,EAAE,CAAC,qCAAD,CAAwC,UAAM,CAC9CC,sBAASC,EAAT,CAAc,KAAd,CACA,GAAMC,CAAAA,QAAQ,0BAAQC,aAAR,CAAd,CACAD,QAAQ,CAACE,KAAT,CAAiB,CAAEC,EAAE,CAAE,MAAN,CAAjB,CACA,GAAMC,CAAAA,cAAc,CAAG,sCAA2BJ,QAA3B,CAAvB,CACAK,MAAM,CAACD,cAAc,CAACF,KAAhB,CAAN,CAA6BI,OAA7B,CAAqC,CAAEH,EAAE,CAAE,MAAN,CAArC,EACD,CANC,CAAF,CAQAN,EAAE,CAAC,uCAAD,CAA0C,UAAM,CAChDC,sBAASC,EAAT,CAAc,KAAd,CACA,GAAMC,CAAAA,QAAQ,0BAAQC,aAAR,CAAd,CACAD,QAAQ,CAACE,KAAT,CAAiB,CAAEC,EAAE,CAAE,EAAN,CAAjB,CACA,GAAMC,CAAAA,cAAc,CAAG,sCAA2BJ,QAA3B,CAAvB,CACAK,MAAM,CAACD,cAAc,CAACF,KAAhB,CAAN,CAA6BI,OAA7B,CAAqC,CAAEH,EAAE,CAAE,WAAN,CAArC,EACD,CANC,CAAF,CAOD,CAhBO,CAAR","sourcesContent":["import { Platform } from 'react-native';\nimport theme from '../base';\nimport { platformSpecificSpaceUnits } from './utils';\n\ndescribe('platform units on native', () => {\n  it('should convert px to absolute on native', () => {\n    Platform.OS = 'ios';\n    const newTheme = { ...theme };\n    newTheme.space = { xs: '1px' };\n    const convertedTheme = platformSpecificSpaceUnits(newTheme);\n    expect(convertedTheme.space).toEqual({ xs: 1 });\n  });\n\n  it('should convert rem to absolute on native', () => {\n    Platform.OS = 'ios';\n    const newTheme = { ...theme };\n    newTheme.space = { xs: '2rem' };\n    const convertedTheme = platformSpecificSpaceUnits(newTheme);\n    expect(convertedTheme.space).toEqual({ xs: 32 });\n  });\n});\n\ndescribe('platform units on web', () => {\n  it('should not convert px to rem on web', () => {\n    Platform.OS = 'web';\n    const newTheme = { ...theme };\n    newTheme.space = { xs: '23px' };\n    const convertedTheme = platformSpecificSpaceUnits(newTheme);\n    expect(convertedTheme.space).toEqual({ xs: '23px' });\n  });\n\n  it('should convert absolute to rem on web', () => {\n    Platform.OS = 'web';\n    const newTheme = { ...theme };\n    newTheme.space = { xs: 23 };\n    const convertedTheme = platformSpecificSpaceUnits(newTheme);\n    expect(convertedTheme.space).toEqual({ xs: '1.4375rem' });\n  });\n});\n"]}