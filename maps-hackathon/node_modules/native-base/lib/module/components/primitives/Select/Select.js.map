{"version":3,"sources":["Select.tsx"],"names":["unstyledSelecWebtStyles","width","height","appearance","WebkitAppearance","MozAppearance","SelectContext","React","createContext","onValueChange","selectedValue","_selectedItem","_item","Select","ref","wrapperRef","props","selectProps","isDisabled","nativeID","disabled","tempFix","_ref","useRef","useState","isOpen","setIsOpen","focusProps","isFocusVisible","hoverProps","isHovered","children","dropdownIcon","dropdownCloseIcon","dropdownOpenIcon","placeholder","accessibilityLabel","defaultValue","size","resolvedProps","value","onChange","newValue","setValue","itemsList","Children","map","child","label","selectedItemArray","filter","item","selectedItem","length","variant","customDropdownIconProps","_actionSheetContent","newProps","stylingProps","border","borderProps","remainingProps","margin","layout","flexbox","position","background","layoutProps","nonLayoutProps","rightIcon","commonInput","handleClose","borderRadius","Platform","OS","e","target"],"mappings":"8oBAAA,qDAEA,yCACA,yDACA,mDACA,+BACA,+CACA,qCACA,2DACA,6DACA,qCACA,yDACA,kDACA,oCAEA,kDACA,2E,iHAEA,GAAMA,CAAAA,uBAAuB,CAAG,CAC9BC,KAAK,CAAE,MADuB,CAE9BC,MAAM,CAAE,MAFsB,CAG9BC,UAAU,CAAE,MAHkB,CAI9BC,gBAAgB,CAAE,MAJY,CAK9BC,aAAa,CAAE,MALe,CAAhC,CAQO,GAAMC,CAAAA,aAAa,CAAGC,eAAMC,aAAN,CAAoB,CAC/CC,aAAa,CAAG,UAAM,CAAE,CADuB,CAE/CC,aAAa,CAAE,IAFgC,CAG/CC,aAAa,CAAE,EAHgC,CAI/CC,KAAK,CAAE,EAJwC,CAApB,CAAtB,C,oCAOP,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,OAAyCC,GAAzC,CAAsD,IAAnDC,CAAAA,UAAmD,OAAnDA,UAAmD,CAApCC,KAAoC,6DACnE,GAAMC,CAAAA,WAAW,CAAG,gCAAe,CACjCC,UAAU,CAAEF,KAAK,CAACE,UADe,CAEjCC,QAAQ,CAAEH,KAAK,CAACG,QAFiB,CAAf,CAApB,CAKA,GAAMD,CAAAA,UAAU,CAAGD,WAAW,CAACG,QAA/B,CACA,GAAMC,CAAAA,OAAO,CAAG,2BAAhB,CACA,GAAMC,CAAAA,IAAI,CAAGf,eAAMgB,MAAN,CAAa,IAAb,CAAb,CARmE,oBAUvChB,eAAMiB,QAAN,CAAwB,KAAxB,CAVuC,iEAU5DC,MAV4D,qBAUpDC,SAVoD,uCAY5B,yBAZ4B,CAY3DC,UAZ2D,eAY3DA,UAZ2D,CAY/CC,cAZ+C,eAY/CA,cAZ+C,eAajC,2BAAS,CAAEV,UAAU,CAAVA,UAAF,CAAT,CAAyBI,IAAzB,CAbiC,CAa3DO,UAb2D,WAa3DA,UAb2D,CAa/CC,SAb+C,WAa/CA,SAb+C,yBA6B/D,sCAAmB,OAAnB,CAA4Bd,KAA5B,CAAmC,CACrCE,UAAU,CAAVA,UADqC,CAErCY,SAAS,CAATA,SAFqC,CAGrCF,cAAc,CAAdA,cAHqC,CAAnC,CA7B+D,CAgBjEnB,aAhBiE,qBAgBjEA,aAhBiE,CAiBjEC,aAjBiE,qBAiBjEA,aAjBiE,CAkBjEqB,QAlBiE,qBAkBjEA,QAlBiE,CAmBjEC,YAnBiE,qBAmBjEA,YAnBiE,CAoBjEC,iBApBiE,qBAoBjEA,iBApBiE,CAqBjEC,gBArBiE,qBAqBjEA,gBArBiE,CAsBjEC,WAtBiE,qBAsBjEA,WAtBiE,CAuBjEC,kBAvBiE,qBAuBjEA,kBAvBiE,CAwBjEC,YAxBiE,qBAwBjEA,YAxBiE,CAyBjEzB,KAzBiE,qBAyBjEA,KAzBiE,CA0BjED,aA1BiE,qBA0BjEA,aA1BiE,CA2BjE2B,IA3BiE,qBA2BjEA,IA3BiE,CA4B9DC,aA5B8D,0QAmCzC,gCAAqB,CAC7CC,KAAK,CAAE9B,aADsC,CAE7C2B,YAAY,CAAZA,YAF6C,CAG7CI,QAAQ,CAAE,kBAACC,QAAD,CAAc,CACtBjC,aAAa,EAAIA,aAAa,CAACiC,QAAD,CAA9B,CACAhB,SAAS,CAAC,KAAD,CAAT,CACD,CAN4C,CAArB,CAnCyC,6EAmC5Dc,KAnC4D,2BAmCrDG,QAnCqD,2BA4CnE,GAAMC,CAAAA,SAAkD,CAAGrC,eAAMsC,QAAN,CAAeC,GAAf,CACzDf,QADyD,CAEzD,SAACgB,KAAD,CAAgB,CACd,MAAO,CACLC,KAAK,CAAED,KAAK,CAAC/B,KAAN,CAAYgC,KADd,CAELR,KAAK,CAAEO,KAAK,CAAC/B,KAAN,CAAYwB,KAFd,CAAP,CAID,CAPwD,CAA3D,CAUA,GAAMS,CAAAA,iBAAiB,CAAGL,SAAS,CAACM,MAAV,CACxB,SAACC,IAAD,QAAeA,CAAAA,IAAI,CAACX,KAAL,GAAeA,KAA9B,EADwB,CAA1B,CAGA,GAAMY,CAAAA,YAAY,CAChBH,iBAAiB,EAAIA,iBAAiB,CAACI,MAAvC,CAAgDJ,iBAAiB,CAAC,CAAD,CAAjE,CAAuE,IADzE,CAzDmE,yBAiE/D,sCAAmB,QAAnB,CAA6BjC,KAA7B,CAjE+D,CA6DjEsC,OA7DiE,sBA6DjEA,OA7DiE,CA8DjEC,uBA9DiE,sBA8DjEA,uBA9DiE,CA+DjEC,mBA/DiE,sBA+DjEA,mBA/DiE,CAgE9DC,QAhE8D,8IAkE7B,4BAAgBA,QAAhB,iCACjCC,qBAAaC,MADoB,EAlE6B,mEAkE5DC,WAlE4D,sBAkE/CC,cAlE+C,4CAqE7B,4BAAgBA,cAAhB,2CACjCH,qBAAaI,MADoB,kCAEjCJ,qBAAaK,MAFoB,kCAGjCL,qBAAaM,OAHoB,kCAIjCN,qBAAaO,QAJoB,kCAKjCP,qBAAaQ,UALoB,GAMpC,UANoC,GArE6B,oEAqE5DC,WArE4D,sBAqE/CC,cArE+C,sBA+EnE,GAAI,iDAAsBpD,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CAED,GAAMqD,CAAAA,SAAS,CACb5C,MAAM,EAAIS,gBAAV,CACEA,gBADF,CAEI,CAACT,MAAD,EAAWQ,iBAAX,CACFA,iBADE,CAEAD,YAAY,CACdA,YADc,CAGd,6BAAC,sBAAD,0BAAqBuB,uBAArB,gFARJ,CAWA,GAAMe,CAAAA,WAAW,CACf,6BAAC,YAAD,wBACE,cAAa,IADf,CAEE,yBAAyB,CAAC,IAF5B,CAGE,KAAK,CAAElB,YAAF,cAAEA,YAAY,CAAEJ,KAHvB,CAIE,WAAW,CAAEb,WAJf,CAKE,QAAQ,CAAE,KALZ,CAME,SAAS,CAAE,KANb,CAOE,IAAI,CAAEG,IAPR,CAQE,OAAO,CAAEgB,OARX,CASE,iBAAiB,CAAEe,SATrB,EAUMD,cAVN,CAWMR,WAXN,EAYE,UAAU,CAAE1C,UAZd,+EADF,CAiBA,GAAMqD,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAM7C,CAAAA,SAAS,CAAC,KAAD,CAAf,EAApB,CAEA,MACE,8BAAC,YAAD,wBACE,WAAW,CAAE,CADf,CAEE,WAAW,CAAC,aAFd,EAGMyC,WAHN,EAIE,YAAY,CAAE5B,aAAa,CAACiC,YAJ9B,CAKE,GAAG,CAAEzD,UALP,+EAOG0D,sBAASC,EAAT,GAAgB,KAAhB,CACC,0DACE,6BAAC,YAAD,EAAK,CAAC,CAAC,MAAP,CAAc,CAAC,CAAC,MAAhB,CAAuB,QAAQ,CAAC,UAAhC,CAA2C,OAAO,CAAC,GAAnD,CAAuD,MAAM,CAAE,CAA/D,+EACE,+DACMzD,WADN,EAEE,QAAQ,CAAEC,UAFZ,EAGMS,UAHN,CAIME,UAJN,EAKE,GAAG,CAAE,qBAAU,CAACf,GAAD,CAAMQ,IAAN,CAAV,CALP,CAOE,KAAK,CAAEtB,uBAPT,CAQE,QAAQ,CAAE,kBAAC2E,CAAD,CAAO,CACfhC,QAAQ,CAACgC,CAAC,CAACC,MAAF,CAASpC,KAAV,CAAR,CACD,CAVH,CAWE,KAAK,CAAEY,YAAY,GAAK,IAAjB,CAAwB/B,OAAxB,CAAkCmB,KAX3C,CAYE,aAAYL,WAZd,gFAcE,uCAAQ,QAAQ,KAAhB,CAAiB,KAAK,CAAEd,OAAxB,+EACGc,WADH,CAdF,CAiBGJ,QAjBH,CADF,CADF,CAsBGuC,WAtBH,CADD,CA0BC,0DACE,6BAAC,sBAAD,EACE,OAAO,CAAE,yBAAM5C,CAAAA,SAAS,CAAC,IAAD,CAAf,EADX,CAEE,QAAQ,CAAER,UAFZ,CAGE,kBAAkB,CAAEkB,kBAHtB,CAIE,iBAAiB,CAAC,QAJpB,CAKE,GAAG,CAAE,qBAAU,CAACtB,GAAD,CAAMQ,IAAN,CAAV,CALP,+EAOE,6BAAC,iBAAD,EAAM,aAAa,CAAC,MAApB,+EAA4BgD,WAA5B,CAPF,CADF,CAUE,6BAAC,wBAAD,EAAa,MAAM,CAAE7C,MAArB,CAA6B,OAAO,CAAE8C,WAAtC,+EACE,6BAAC,wBAAD,CAAa,OAAb,0BAAyBf,mBAAzB,iFACE,6BAAC,sBAAD,EAAY,KAAK,CAAC,MAAlB,+EACE,6BAAC,aAAD,CAAe,QAAf,EACE,KAAK,CAAE,CACL/C,aAAa,CAAEkC,QADV,CAELjC,aAAa,CAAE8B,KAFV,CAGL7B,aAAa,CAAEA,aAAF,OAAEA,aAAF,CAAmB,EAH3B,CAILC,KAAK,CAAEA,KAAF,OAAEA,KAAF,CAAW,EAJX,CADT,+EAQGmB,QARH,CADF,CADF,CADF,CAVF,CAjCJ,CADF,CAgED,CAjLD,C,aAmLe,gBAAK,sBAAWlB,MAAX,CAAL,C","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport type { ISelectProps } from './types';\nimport { Platform, View, Pressable } from 'react-native';\nimport { Actionsheet } from '../../composites/Actionsheet';\nimport Box from '../Box';\nimport { Input } from '../Input';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useControllableState } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport { useFormControl } from '../../composites/FormControl';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { ChevronDownIcon } from '../Icon/Icons';\nimport type { IButtonProps } from '../Button/types';\nimport { ScrollView } from '../../basic/ScrollView';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst unstyledSelecWebtStyles = {\n  width: '100%',\n  height: '100%',\n  appearance: 'none',\n  WebkitAppearance: 'none',\n  MozAppearance: 'none',\n};\n\nexport const SelectContext = React.createContext({\n  onValueChange: (() => {}) as any,\n  selectedValue: null as any,\n  _selectedItem: {} as IButtonProps,\n  _item: {} as IButtonProps,\n});\n\nconst Select = ({ wrapperRef, ...props }: ISelectProps, ref: any) => {\n  const selectProps = useFormControl({\n    isDisabled: props.isDisabled,\n    nativeID: props.nativeID,\n  });\n\n  const isDisabled = selectProps.disabled;\n  const tempFix = '__NativebasePlaceholder__';\n  const _ref = React.useRef(null);\n\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  const { focusProps, isFocusVisible } = useFocusRing();\n  const { hoverProps, isHovered } = useHover({ isDisabled }, _ref);\n\n  const {\n    onValueChange,\n    selectedValue,\n    children,\n    dropdownIcon,\n    dropdownCloseIcon,\n    dropdownOpenIcon,\n    placeholder,\n    accessibilityLabel,\n    defaultValue,\n    _item,\n    _selectedItem,\n    size,\n    ...resolvedProps\n  } = usePropsResolution('Input', props, {\n    isDisabled,\n    isHovered,\n    isFocusVisible,\n  });\n\n  const [value, setValue] = useControllableState({\n    value: selectedValue,\n    defaultValue,\n    onChange: (newValue) => {\n      onValueChange && onValueChange(newValue);\n      setIsOpen(false);\n    },\n  });\n\n  const itemsList: Array<{ label: string; value: string }> = React.Children.map(\n    children,\n    (child: any) => {\n      return {\n        label: child.props.label,\n        value: child.props.value,\n      };\n    }\n  );\n\n  const selectedItemArray = itemsList.filter(\n    (item: any) => item.value === value\n  );\n  const selectedItem =\n    selectedItemArray && selectedItemArray.length ? selectedItemArray[0] : null;\n\n  const {\n    variant,\n    customDropdownIconProps,\n    _actionSheetContent,\n    ...newProps\n  } = usePropsResolution('Select', props);\n  const [borderProps, remainingProps] = extractInObject(newProps, [\n    ...stylingProps.border,\n  ]);\n  const [layoutProps, nonLayoutProps] = extractInObject(remainingProps, [\n    ...stylingProps.margin,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    ...stylingProps.background,\n    'children',\n  ]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  const rightIcon =\n    isOpen && dropdownOpenIcon ? (\n      dropdownOpenIcon\n    ) : !isOpen && dropdownCloseIcon ? (\n      dropdownCloseIcon\n    ) : dropdownIcon ? (\n      dropdownIcon\n    ) : (\n      <ChevronDownIcon {...customDropdownIconProps} />\n    );\n\n  const commonInput = (\n    <Input\n      aria-hidden={true}\n      importantForAccessibility=\"no\"\n      value={selectedItem?.label}\n      placeholder={placeholder}\n      editable={false}\n      focusable={false}\n      size={size}\n      variant={variant}\n      InputRightElement={rightIcon}\n      {...nonLayoutProps}\n      {...borderProps}\n      isDisabled={isDisabled}\n    />\n  );\n\n  const handleClose = () => setIsOpen(false);\n\n  return (\n    <Box\n      borderWidth={1}\n      borderColor=\"transparent\"\n      {...layoutProps}\n      borderRadius={resolvedProps.borderRadius}\n      ref={wrapperRef}\n    >\n      {Platform.OS === 'web' ? (\n        <>\n          <Box w=\"100%\" h=\"100%\" position=\"absolute\" opacity=\"0\" zIndex={1}>\n            <select\n              {...selectProps}\n              disabled={isDisabled}\n              {...focusProps}\n              {...hoverProps}\n              ref={mergeRefs([ref, _ref])}\n              //@ts-ignore\n              style={unstyledSelecWebtStyles}\n              onChange={(e) => {\n                setValue(e.target.value);\n              }}\n              value={selectedItem === null ? tempFix : value}\n              aria-label={placeholder}\n            >\n              <option disabled value={tempFix}>\n                {placeholder}\n              </option>\n              {children}\n            </select>\n          </Box>\n          {commonInput}\n        </>\n      ) : (\n        <>\n          <Pressable\n            onPress={() => setIsOpen(true)}\n            disabled={isDisabled}\n            accessibilityLabel={accessibilityLabel}\n            accessibilityRole=\"button\"\n            ref={mergeRefs([ref, _ref])}\n          >\n            <View pointerEvents=\"none\">{commonInput}</View>\n          </Pressable>\n          <Actionsheet isOpen={isOpen} onClose={handleClose}>\n            <Actionsheet.Content {..._actionSheetContent}>\n              <ScrollView width=\"100%\">\n                <SelectContext.Provider\n                  value={{\n                    onValueChange: setValue,\n                    selectedValue: value,\n                    _selectedItem: _selectedItem ?? {},\n                    _item: _item ?? {},\n                  }}\n                >\n                  {children}\n                </SelectContext.Provider>\n              </ScrollView>\n            </Actionsheet.Content>\n          </Actionsheet>\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Select));\n"]}