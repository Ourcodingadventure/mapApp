{"version":3,"sources":["InputAdvanced.tsx"],"names":["InputAdvance","ref","InputLeftElement","InputRightElement","leftElement","rightElement","onFocus","onBlur","inputProps","wrapperRef","props","inputThemeProps","isDisabled","disabled","isInvalid","accessibilityInvalid","isReadOnly","accessibilityReadOnly","isRequired","required","React","useState","isFocused","setIsFocused","handleFocus","focusState","callback","_ref","useRef","isHovered","resolvedProps","stylingProps","margin","border","layout","flexbox","position","background","layoutProps","nonLayoutProps","baseInputProps","e"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport InputBase from './InputBase';\nimport Box from '../Box';\nimport type { IInputProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst InputAdvance = (\n  {\n    InputLeftElement,\n    InputRightElement,\n    leftElement,\n    rightElement,\n    onFocus,\n    onBlur,\n    inputProps,\n    wrapperRef,\n    ...props\n  }: IInputProps & {\n    inputProps: any;\n  },\n  ref: any\n) => {\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required,\n  };\n\n  if (InputLeftElement) {\n    leftElement = InputLeftElement;\n  }\n  if (InputRightElement) {\n    rightElement = InputRightElement;\n  }\n\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const resolvedProps = usePropsResolution(\n    'Input',\n    {\n      ...inputThemeProps,\n      ...props,\n    },\n    {\n      isDisabled: inputThemeProps.isDisabled,\n      isHovered,\n      isFocused,\n      isInvalid: inputThemeProps.isInvalid,\n      isReadOnly: inputThemeProps.isReadOnly,\n    }\n  );\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.border,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    ...stylingProps.background,\n  ]);\n\n  // Extracting baseInputProps from remaining props\n  const [, baseInputProps] = extractInObject(nonLayoutProps, ['variant']);\n\n  //TODO: refactor for responsive prop\n  if (\n    useHasResponsiveProps({\n      ...props,\n      InputLeftElement,\n      InputRightElement,\n      onFocus,\n      onBlur,\n      inputProps,\n      wrapperRef,\n    })\n  ) {\n    return null;\n  }\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      overflow=\"hidden\"\n      {...layoutProps}\n      ref={mergeRefs([_ref, wrapperRef])}\n    >\n      {InputLeftElement || leftElement ? InputLeftElement || leftElement : null}\n      <InputBase\n        inputProps={inputProps}\n        bg=\"transparent\"\n        {...baseInputProps}\n        flex={1}\n        disableFocusHandling\n        ref={ref}\n        variant=\"unstyled\"\n        onFocus={(e) => {\n          handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n        }}\n        onBlur={(e) => {\n          handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n        }}\n      />\n      {InputRightElement || rightElement\n        ? InputRightElement || rightElement\n        : null}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(InputAdvance));\n"]}