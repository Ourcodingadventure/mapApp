var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.useIsPressed=exports.useFocus=exports.useHover=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _react=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _utils=require("../../../utils");var _useHasResponsiveProps=require("../../../hooks/useHasResponsiveProps");var _styled=require("../../../utils/styled");var _useThemeProps=require("../../../hooks/useThemeProps");var _focus=require("@react-native-aria/focus");var _this=this,_jsxFileName="/Users/suraj/Sites/projects/NativeBase/src/components/primitives/Pressable/Pressable.tsx";var useHover=function useHover(){var _React$useState=_react.default.useState(false),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),isHovered=_React$useState2[0],setHovered=_React$useState2[1];return{hoverProps:{onHoverIn:function onHoverIn(){return setHovered(true);},onHoverOut:function onHoverOut(){return setHovered(false);}},isHovered:isHovered};};exports.useHover=useHover;var useFocus=function useFocus(){var _React$useState3=_react.default.useState(false),_React$useState4=(0,_slicedToArray2.default)(_React$useState3,2),isFocused=_React$useState4[0],setFocused=_React$useState4[1];return{focusProps:{onFocus:function onFocus(){return setFocused(true);},onBlur:function onBlur(){return setFocused(false);}},isFocused:isFocused};};exports.useFocus=useFocus;var useIsPressed=function useIsPressed(){var _React$useState5=_react.default.useState(false),_React$useState6=(0,_slicedToArray2.default)(_React$useState5,2),isPressed=_React$useState6[0],setIsPressed=_React$useState6[1];return{pressableProps:{onPressIn:function onPressIn(){return setIsPressed(true);},onPressOut:function onPressOut(){return setIsPressed(false);}},isPressed:isPressed};};exports.useIsPressed=useIsPressed;var StyledPressable=(0,_styled.makeStyledComponent)(_reactNative.Pressable);var Pressable=function Pressable(_ref,ref){var children=_ref.children,props=(0,_objectWithoutProperties2.default)(_ref,["children"]);var _useHover=useHover(),hoverProps=_useHover.hoverProps,isHovered=_useHover.isHovered;var _useIsPressed=useIsPressed(),pressableProps=_useIsPressed.pressableProps,isPressed=_useIsPressed.isPressed;var _useFocus=useFocus(),focusProps=_useFocus.focusProps,isFocused=_useFocus.isFocused;var _useFocusRing=(0,_focus.useFocusRing)(),isFocusVisible=_useFocusRing.isFocusVisible,focusRingProps=_useFocusRing.focusProps;var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Pressable',props,{isPressed:isPressed,isFocused:isFocused,isHovered:isHovered,isFocusVisible:isFocusVisible}),onPressIn=_usePropsResolution.onPressIn,onPressOut=_usePropsResolution.onPressOut,onHoverIn=_usePropsResolution.onHoverIn,onHoverOut=_usePropsResolution.onHoverOut,onFocus=_usePropsResolution.onFocus,onBlur=_usePropsResolution.onBlur,resolvedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,["onPressIn","onPressOut","onHoverIn","onHoverOut","onFocus","onBlur"]);if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(StyledPressable,(0,_extends2.default)({ref:ref,onPressIn:(0,_utils.composeEventHandlers)(onPressIn,pressableProps.onPressIn),onPressOut:(0,_utils.composeEventHandlers)(onPressOut,pressableProps.onPressOut),onHoverIn:(0,_utils.composeEventHandlers)(onHoverIn,hoverProps.onHoverIn),onHoverOut:(0,_utils.composeEventHandlers)(onHoverOut,hoverProps.onHoverOut),onFocus:(0,_utils.composeEventHandlers)((0,_utils.composeEventHandlers)(onFocus,focusProps.onFocus),focusRingProps.onFocus),onBlur:(0,_utils.composeEventHandlers)((0,_utils.composeEventHandlers)(onBlur,focusProps.onBlur),focusRingProps.onBlur)},resolvedProps,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:75,columnNumber:5}}),typeof children!=='function'?children:children({isPressed:isPressed,isHovered:isHovered,isFocused:isFocused}));};var _default=(0,_react.memo)((0,_react.forwardRef)(Pressable));exports.default=_default;
//# sourceMappingURL=Pressable.js.map