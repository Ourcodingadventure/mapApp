{"version":3,"sources":["index.tsx"],"names":["StyledImage","RNImage","Image","props","ref","source","src","fallbackElement","alt","fallbackSource","ignoreFallback","_alt","resolvedProps","finalSource","getSource","current","uri","renderedSource","setSource","alternate","setAlternate","fallbackSourceFlag","setfallbackSourceFlag","React","useEffect","onImageLoadError","event","onError","console","warn","nativeEvent","error","isValidElement"],"mappings":"ohBAAA,qDACA,yCACA,qDACA,2DAEA,2EACA,6C,+GAEA,GAAMA,CAAAA,WAAW,CAAG,gCAAoBC,kBAApB,CAApB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAqBC,GAArB,CAAkC,yBAU1C,sCAAmB,OAAnB,CAA4BD,KAA5B,CAV0C,CAE5CE,MAF4C,qBAE5CA,MAF4C,CAG5CC,GAH4C,qBAG5CA,GAH4C,CAI5CC,eAJ4C,qBAI5CA,eAJ4C,CAK5CC,GAL4C,qBAK5CA,GAL4C,CAM5CC,cAN4C,qBAM5CA,cAN4C,CAO5CC,cAP4C,qBAO5CA,cAP4C,CAQ5CC,IAR4C,qBAQ5CA,IAR4C,CASzCC,aATyC,8IAY9C,GAAMC,CAAAA,WAAgB,CAAG,kBAAO,IAAP,CAAzB,CACA,GAAMC,CAAAA,SAAS,CAAG,uBAAY,UAAM,CAClC,GAAIT,MAAJ,CAAY,CACVQ,WAAW,CAACE,OAAZ,CAAsBV,MAAtB,CACD,CAFD,IAEO,IAAIC,GAAJ,CAAS,CACdO,WAAW,CAACE,OAAZ,CAAsB,CAAEC,GAAG,CAAEV,GAAP,CAAtB,CACD,CACD,MAAOO,CAAAA,WAAW,CAACE,OAAnB,CACD,CAPiB,CAOf,CAACV,MAAD,CAASC,GAAT,CAPe,CAAlB,CAb8C,cAsBV,oBAASQ,SAAS,EAAlB,CAtBU,qDAsBvCG,cAtBuC,eAsBvBC,SAtBuB,8BAuBZ,oBAAS,KAAT,CAvBY,sDAuBvCC,SAvBuC,eAuB5BC,YAvB4B,8BAwBM,oBAAS,IAAT,CAxBN,sDAwBvCC,kBAxBuC,eAwBnBC,qBAxBmB,eA0B9CC,eAAMC,SAAN,CAAgB,UAAM,CACpB,MAAO,WAAM,CACXX,WAAW,CAACE,OAAZ,CAAsB,IAAtB,CACD,CAFD,CAGD,CAJD,CAIG,CAACV,MAAD,CAASC,GAAT,CAAcQ,SAAd,CAJH,EAMA,GAAMW,CAAAA,gBAAgB,CAAG,uBACvB,SAACC,KAAD,CAAgB,CACdvB,KAAK,CAACwB,OAAN,EAAiBxB,KAAK,CAACwB,OAAN,CAAcD,KAAd,CAAjB,CACAE,OAAO,CAACC,IAAR,CAAaH,KAAK,CAACI,WAAN,CAAkBC,KAA/B,EACA,GACE,CAACrB,cAAD,EACAD,cADA,EAEAA,cAAc,GAAKQ,cAFnB,EAGAI,kBAJF,CAKE,CACAC,qBAAqB,CAAC,KAAD,CAArB,CACAJ,SAAS,CAACT,cAAD,CAAT,CACD,CARD,IAQO,CACLW,YAAY,CAAC,IAAD,CAAZ,CACD,CACF,CAfsB,CAgBvB,CAACX,cAAD,CAAiBY,kBAAjB,CAAqCX,cAArC,CAAqDP,KAArD,CAA4Dc,cAA5D,CAhBuB,CAAzB,CAmBA,GAAI,iDAAsBd,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,GAAI,CAACK,GAAL,CAAU,CACRoB,OAAO,CAACC,IAAR,CAAa,yCAAb,EACD,CAED,GAAIV,SAAJ,CAAe,CACb,GAAIZ,eAAJ,CAAqB,CACnB,GAAIgB,eAAMS,cAAN,CAAqBzB,eAArB,CAAJ,CAA2C,CACzC,MAAOA,CAAAA,eAAP,CACD,CACF,CAJD,IAIO,OAAO,8BAAC,aAAD,0BAAUI,IAAV,gFAAiBH,GAAjB,CAAP,CACR,CACD,MACE,8BAAC,WAAD,wBACE,MAAM,CAAES,cADV,CAEE,kBAAkB,CAAET,GAFtB,CAGE,GAAG,CAAEA,GAHP,EAIMI,aAJN,EAKE,OAAO,CAAEa,gBALX,CAME,GAAG,CAAErB,GANP,8EADF,CAUD,CA3ED,C,aA6Ee,gBAAK,sBAAWF,KAAX,CAAL,C","sourcesContent":["import React, { useState, memo, forwardRef, useCallback, useRef } from 'react';\nimport { Image as RNImage } from 'react-native';\nimport Text from '../Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IImageProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { makeStyledComponent } from '../../../utils/styled';\n\nconst StyledImage = makeStyledComponent(RNImage);\n\nconst Image = (props: IImageProps, ref: any) => {\n  const {\n    source,\n    src,\n    fallbackElement,\n    alt,\n    fallbackSource,\n    ignoreFallback,\n    _alt,\n    ...resolvedProps\n  } = usePropsResolution('Image', props);\n\n  const finalSource: any = useRef(null);\n  const getSource = useCallback(() => {\n    if (source) {\n      finalSource.current = source;\n    } else if (src) {\n      finalSource.current = { uri: src };\n    }\n    return finalSource.current;\n  }, [source, src]);\n\n  const [renderedSource, setSource] = useState(getSource());\n  const [alternate, setAlternate] = useState(false);\n  const [fallbackSourceFlag, setfallbackSourceFlag] = useState(true);\n\n  React.useEffect(() => {\n    return () => {\n      finalSource.current = null;\n    };\n  }, [source, src, getSource]);\n\n  const onImageLoadError = useCallback(\n    (event: any) => {\n      props.onError && props.onError(event);\n      console.warn(event.nativeEvent.error);\n      if (\n        !ignoreFallback &&\n        fallbackSource &&\n        fallbackSource !== renderedSource &&\n        fallbackSourceFlag\n      ) {\n        setfallbackSourceFlag(false);\n        setSource(fallbackSource);\n      } else {\n        setAlternate(true);\n      }\n    },\n    [fallbackSource, fallbackSourceFlag, ignoreFallback, props, renderedSource]\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  if (!alt) {\n    console.warn('Please pass alt prop to Image component');\n  }\n\n  if (alternate) {\n    if (fallbackElement) {\n      if (React.isValidElement(fallbackElement)) {\n        return fallbackElement;\n      }\n    } else return <Text {..._alt}>{alt}</Text>;\n  }\n  return (\n    <StyledImage\n      source={renderedSource}\n      accessibilityLabel={alt}\n      alt={alt}\n      {...resolvedProps}\n      onError={onImageLoadError}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(Image));\nexport type { IImageProps };\n"]}