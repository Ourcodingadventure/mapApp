{"version":3,"sources":["index.tsx"],"names":["Link","props","ref","_ref","React","useRef","isHovered","isUnderlined","children","_text","href","onPress","isExternal","resolvedProps","linkProps","linkTextProps","textDecorationLine","Platform","OS","Children","map","child"],"mappings":"wbAAA,qDACA,yCAEA,mDACA,qDACA,qCACA,mCACA,qCACA,uCACA,6DACA,2E,8GAEA,GAAMA,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAoBC,GAApB,CAAiC,CAC5C,GAAMC,CAAAA,IAAI,CAAGC,eAAMC,MAAN,CAAa,IAAb,CAAb,CAD4C,cAEtB,2BAAS,EAAT,CAAaF,IAAb,CAFsB,CAEpCG,SAFoC,WAEpCA,SAFoC,yBAWxC,8BAAmB,MAAnB,CAA2BL,KAA3B,CAAkC,CAAEK,SAAS,CAATA,SAAF,CAAlC,CAXwC,CAI1CC,YAJ0C,qBAI1CA,YAJ0C,CAK1CC,QAL0C,qBAK1CA,QAL0C,CAM1CC,KAN0C,qBAM1CA,KAN0C,CAO1CC,IAP0C,qBAO1CA,IAP0C,CAQ1CC,OAR0C,qBAQ1CA,OAR0C,CAS1CC,UAT0C,qBAS1CA,UAT0C,CAUvCC,aAVuC,2IAYtB,sBAAQ,CAAEH,IAAI,CAAJA,IAAF,CAAQC,OAAO,CAAPA,OAAR,CAAiBC,UAAU,CAAVA,UAAjB,CAA6BT,IAAI,CAAJA,IAA7B,CAAR,CAZsB,CAYpCW,SAZoC,UAYpCA,SAZoC,CAc5C,GAAMC,CAAAA,aAAa,wBACjBC,kBAAkB,CAAET,YAAY,CAAG,WAAH,CAAiB,MADhC,EAEdE,KAFc,CAAnB,CAcA,GAAI,iDAAsBR,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,2DAEGgB,sBAASC,EAAT,GAAgB,KAAhB,CACC,6BAAC,YAAD,0BACMJ,SADN,CAEMD,aAFN,EAGE,KAAK,CAAEE,aAHT,CAIE,GAAG,CAAE,qBAAU,CAACb,GAAD,CAAMC,IAAN,CAAV,CAJP,CAKE,aAAa,CAAC,KALhB,8EAOGK,QAPH,CADD,CAWC,6BAAC,oBAAD,0BACMM,SADN,CAEMD,aAFN,EAGE,GAAG,CAAEX,GAHP,CAIE,aAAa,CAAC,KAJhB,8EAMGE,eAAMe,QAAN,CAAeC,GAAf,CAAmBZ,QAAnB,CAA6B,SAACa,KAAD,QAC5B,OAAOA,CAAAA,KAAP,GAAiB,QAAjB,EAA6B,MAAOA,CAAAA,KAAP,GAAiB,QAA9C,CACE,6BAAC,aAAD,0BAAUR,aAAa,CAACJ,KAAxB,CAAmCM,aAAnC,gFACGM,KADH,CADF,CAKEA,KAN0B,EAA7B,CANH,CAbJ,CADF,CAiCD,CAhED,C,aAkEe,gBAAK,sBAAWrB,IAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport type { ILinkProps } from './types';\nimport Box from '../Box';\nimport Text from '../Text';\nimport { usePropsResolution } from '../../../hooks';\nimport { useLink } from './useLink';\nimport { mergeRefs } from '../../../utils';\nimport { Pressable } from '../Pressable';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Link = (props: ILinkProps, ref: any) => {\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  const {\n    isUnderlined,\n    children,\n    _text,\n    href,\n    onPress,\n    isExternal,\n    ...resolvedProps\n  } = usePropsResolution('Link', props, { isHovered });\n  const { linkProps } = useLink({ href, onPress, isExternal, _ref });\n\n  const linkTextProps = {\n    textDecorationLine: isUnderlined ? 'underline' : 'none',\n    ..._text,\n  };\n  // function getHoverProps() {\n  //   let hoverTextProps = {\n  //     ...linkTextProps,\n  //     ..._hover?._text,\n  //   };\n  //   return {\n  //     ...hoverTextProps,\n  //   };\n  // }\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <>\n      {/* On web we render Link in anchor tag */}\n      {Platform.OS === 'web' ? (\n        <Box\n          {...linkProps}\n          {...resolvedProps}\n          _text={linkTextProps}\n          ref={mergeRefs([ref, _ref])}\n          flexDirection=\"row\"\n        >\n          {children}\n        </Box>\n      ) : (\n        <Pressable\n          {...linkProps}\n          {...resolvedProps}\n          ref={ref}\n          flexDirection=\"row\"\n        >\n          {React.Children.map(children, (child) =>\n            typeof child === 'string' || typeof child === 'number' ? (\n              <Text {...resolvedProps._text} {...linkTextProps}>\n                {child}\n              </Text>\n            ) : (\n              child\n            )\n          )}\n        </Pressable>\n      )}\n    </>\n  );\n};\n\nexport default memo(forwardRef(Link));\nexport type { ILinkProps };\n"]}