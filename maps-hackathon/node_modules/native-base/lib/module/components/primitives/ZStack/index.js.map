{"version":3,"sources":["index.tsx"],"names":["ZStack","ref","children","reversed","props","resolvedProps"],"mappings":"wbAAA,qDACA,mDACA,qCACA,2DACA,2E,gHASA,GAAMA,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAiDC,GAAjD,CAA+D,IAA5DC,CAAAA,QAA4D,MAA5DA,QAA4D,CAAlDC,QAAkD,MAAlDA,QAAkD,CAArCC,KAAqC,qEAC5E,GAAMC,CAAAA,aAAa,CAAG,sCAAmB,QAAnB,CAA6BD,KAA7B,CAAtB,CAEA,GAAI,iDAAsBA,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,8BAAC,YAAD,0BAASC,aAAT,EAAwB,GAAG,CAAEJ,GAA7B,8EACG,+BAAoBC,QAApB,CAA8BC,QAA9B,CADH,CADF,CAKD,CAXD,C,aAae,gBAAK,sBAAWH,MAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { default as Box, IBoxProps } from '../Box';\nimport { getAbsoluteChildren } from '../../../utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport interface IZStackProps extends IBoxProps<IZStackProps> {\n  /**\n   * The direction to stack the elements.\n   */\n  reversed?: boolean;\n}\n\nconst ZStack = ({ children, reversed, ...props }: IZStackProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ZStack', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...resolvedProps} ref={ref}>\n      {getAbsoluteChildren(children, reversed)}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(ZStack));\n"]}