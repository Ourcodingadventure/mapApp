{"version":3,"sources":["ScrollView.tsx"],"names":["StyledScrollView","RNScrollView","ScrollView","props","ref","_contentContainerStyle","contentContainerStyle","resolvedProps","resolved_ContentContainerStyle"],"mappings":"2bAAA,qDACA,yCACA,qCAIA,6CAEA,2E,oHAEA,GAAMA,CAAAA,gBAAqB,CAAG,gCAAoBC,uBAApB,CAA9B,CAEO,GAAMC,CAAAA,UAAU,CAAG,sBAAW,SAACC,KAAD,CAA0BC,GAA1B,CAAuC,yBAKtE,8BAAmB,YAAnB,CAAiCD,KAAjC,CAAwC,EAAxC,CALsE,CAExEE,sBAFwE,qBAExEA,sBAFwE,CAGxEC,qBAHwE,qBAGxEA,qBAHwE,CAIrEC,aAJqE,+GAM1E,GAAMC,CAAAA,8BAA8B,CAAG,wCACrCH,sBAAsB,EAAI,EADW,CAAvC,CAIA,GAAI,iDAAsBF,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,8BAAC,gBAAD,0BACMI,aADN,EAEE,qBAAqB,CACnBD,qBAAqB,EAAIE,8BAH7B,CAKE,GAAG,CAAEJ,GALP,8EADF,CASD,CAtByB,CAAnB,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport { ScrollView as RNScrollView } from 'react-native';\nimport {\n  usePropsResolution,\n  useStyledSystemPropsResolver,\n} from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IScrollViewProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledScrollView: any = makeStyledComponent(RNScrollView);\n\nexport const ScrollView = forwardRef((props: IScrollViewProps, ref: any) => {\n  const {\n    _contentContainerStyle,\n    contentContainerStyle,\n    ...resolvedProps\n  } = usePropsResolution('ScrollView', props, {});\n  const resolved_ContentContainerStyle = useStyledSystemPropsResolver(\n    _contentContainerStyle || {}\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <StyledScrollView\n      {...resolvedProps}\n      contentContainerStyle={\n        contentContainerStyle || resolved_ContentContainerStyle\n      }\n      ref={ref}\n    />\n  );\n});\n"]}