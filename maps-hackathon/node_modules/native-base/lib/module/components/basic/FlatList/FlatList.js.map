{"version":3,"sources":["FlatList.tsx"],"names":["StyledFlatList","RNFlatList","FlatList","props","ref","resolvedProps"],"mappings":"yUAAA,qDACA,yCACA,qCACA,6CAEA,2E,gHAEA,GAAMA,CAAAA,cAAmB,CAAG,gCAAoBC,qBAApB,CAA5B,CAEO,GAAMC,CAAAA,QAAQ,CAAG,sBAAW,SAACC,KAAD,CAAwBC,GAAxB,CAAqC,yBACzC,8BAAmB,UAAnB,CAA+BD,KAA/B,CADyC,CAC3DE,aAD2D,+CAGtE,GAAI,iDAAsBF,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAAO,8BAAC,cAAD,0BAAoBE,aAApB,EAAmC,GAAG,CAAED,GAAxC,+EAAP,CACD,CAPuB,CAAjB,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport { FlatList as RNFlatList } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IFlatListProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledFlatList: any = makeStyledComponent(RNFlatList);\n\nexport const FlatList = forwardRef((props: IFlatListProps, ref: any) => {\n  const { ...resolvedProps } = usePropsResolution('FlatList', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StyledFlatList {...resolvedProps} ref={ref} />;\n});\n"]}