{"version":3,"sources":["ModalCloseButton.tsx"],"names":["ModalCloseButton","props","ref","_icon","resolvedProps","React","useContext","ModalContext","handleClose"],"mappings":"wbAAA,qDACA,kCACA,qCACA,8EACA,kDAEA,2E,0HAEA,GAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAsBC,GAAtB,CAAoC,yBACvB,8BAClC,kBADkC,CAElCD,KAFkC,CADuB,CACnDE,KADmD,qBACnDA,KADmD,CACzCC,aADyC,4FAKnCC,eAAMC,UAAN,CAAiBC,qBAAjB,CALmC,CAKnDC,WALmD,mBAKnDA,WALmD,CAO3D,GAAI,iDAAsBP,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,8BAAC,eAAD,wBACE,OAAO,CAAC,OADV,EAEMG,aAFN,EAGE,OAAO,CAAEI,WAHX,CAIE,kBAAkB,CAAC,cAJrB,CAKE,GAAG,CAAEN,GALP,8EAOE,6BAAC,gBAAD,0BAAeC,KAAf,+EAPF,CADF,CAWD,CArBD,C,aAuBe,gBAAK,sBAAWH,gBAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ModalContext } from './Context';\nimport { usePropsResolution } from '../../../hooks';\nimport Button from '../../primitives/Button/Button';\nimport { CloseIcon } from '../../primitives/Icon/Icons';\nimport type { IButtonProps } from '../../primitives/Button';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ModalCloseButton = (props: IButtonProps, ref?: any) => {\n  const { _icon, ...resolvedProps } = usePropsResolution(\n    'ModalCloseButton',\n    props\n  );\n  const { handleClose } = React.useContext(ModalContext);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Button\n      variant=\"ghost\"\n      {...resolvedProps}\n      onPress={handleClose}\n      accessibilityLabel=\"Close dialog\"\n      ref={ref}\n    >\n      <CloseIcon {..._icon} />\n    </Button>\n  );\n};\n\nexport default memo(forwardRef(ModalCloseButton));\n"]}