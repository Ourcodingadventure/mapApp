{"version":3,"sources":["ModalFooter.tsx"],"names":["ModalFooter","props","ref","resolvedProps"],"mappings":"wUAAA,qDACA,iEACA,qCACA,2E,qHAEA,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAmBC,GAAnB,CAAiC,CACnD,GAAMC,CAAAA,aAAa,CAAG,8BAAmB,aAAnB,CAAkCF,KAAlC,CAAtB,CAEA,GAAI,iDAAsBA,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAAO,8BAAC,YAAD,0BAASE,aAAT,EAAwB,GAAG,CAAED,GAA7B,+EAAP,CACD,CAPD,C,aASe,gBAAK,sBAAWF,WAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ModalFooter = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ModalFooter', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(ModalFooter));\n"]}