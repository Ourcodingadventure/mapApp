{"version":3,"sources":["index.tsx"],"names":["Tag","ref","style","props","resolvedProps","React","memo","forwardRef"],"mappings":"mWAAA,oDACA,iEACA,qCAEA,2E,6GAEA,GAAMA,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAAiCC,GAAjC,CAA8C,IAA3CC,CAAAA,KAA2C,MAA3CA,KAA2C,CAAjCC,KAAiC,uDACxD,GAAIC,CAAAA,aAAa,CAAG,yBAAc,KAAd,CAAqBD,KAArB,CAApB,CAEA,GAAI,iDAAsBA,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAAO,8BAAC,YAAD,wBAAK,KAAK,CAAED,KAAZ,EAAuBE,aAAvB,EAAsC,GAAG,CAAEH,GAA3C,+EAAP,CACD,CAPD,C,aASeI,eAAMC,IAAN,CAAWD,eAAME,UAAN,CAAiBP,GAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks';\nimport type { ITagProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Tag = ({ style, ...props }: ITagProps, ref: any) => {\n  let resolvedProps = useThemeProps('Tag', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box style={style} {...resolvedProps} ref={ref} />;\n};\n\nexport default React.memo(React.forwardRef(Tag));\nexport type { ITagProps };\n"]}