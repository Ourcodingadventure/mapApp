{"version":3,"sources":["AppBarRight.tsx"],"names":["AppBarRight","props","color","React","memo"],"mappings":"mPAAA,oDACA,4CACA,qCACA,2E,sHAEA,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAwB,oBACxB,yBAAc,QAAd,CAAwBA,KAAxB,CADwB,CAClCC,KADkC,gBAClCA,KADkC,CAG1C,GAAI,iDAAsBD,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,8BAAC,kBAAD,wBACE,UAAU,CAAC,QADb,CAEE,cAAc,CAAC,UAFjB,CAGE,KAAK,CAAE,CACLC,KAAK,CAALA,KADK,CAHT,EAMMD,KANN,+EADF,CAUD,CAhBD,C,aAkBeE,eAAMC,IAAN,CAAWJ,WAAX,C","sourcesContent":["import React from 'react';\nimport { HStack, IStackProps } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AppBarRight = (props: IStackProps) => {\n  const { color } = useThemeProps('AppBar', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <HStack\n      alignItems=\"center\"\n      justifyContent=\"flex-end\"\n      _text={{\n        color,\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default React.memo(AppBarRight);\n"]}