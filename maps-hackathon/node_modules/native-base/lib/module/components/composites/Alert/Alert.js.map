{"version":3,"sources":["Alert.tsx"],"names":["Alert","ref","children","props","status","variant","_icon","colorScheme","newProps"],"mappings":"wbAAA,qDACA,iEAEA,2DAEA,kCACA,2E,+GAEA,GAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAsCC,GAAtC,CAAoD,IAAjDC,CAAAA,QAAiD,MAAjDA,QAAiD,CAApCC,KAAoC,kFAO5D,sCAAmB,OAAnB,CAA4BA,KAA5B,CAP4D,CAE9DC,MAF8D,qBAE9DA,MAF8D,CAG9DC,OAH8D,qBAG9DA,OAH8D,CAI9DC,KAJ8D,qBAI9DA,KAJ8D,CAK9DC,WAL8D,qBAK9DA,WAL8D,CAM3DC,QAN2D,uGAShE,GAAI,iDAAsBL,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,8BAAC,qBAAD,CAAc,QAAd,EACE,KAAK,CAAE,CACLC,MAAM,CAANA,MADK,CAELC,OAAO,CAAPA,OAFK,CAGLC,KAAK,CAALA,KAHK,CAILC,WAAW,CAAXA,WAJK,CADT,6EAQE,6BAAC,YAAD,0BAASC,QAAT,EAAmB,GAAG,CAAEP,GAAxB,8EACGC,QADH,CARF,CADF,CAcD,CA1BD,C,aA4Be,gBAAK,sBAAWF,KAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\n// import { HStack } from '../../primitives/Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAlertProps } from './types';\nimport { AlertContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Alert = ({ children, ...props }: IAlertProps, ref?: any) => {\n  const {\n    status,\n    variant,\n    _icon,\n    colorScheme,\n    ...newProps\n  } = usePropsResolution('Alert', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <AlertContext.Provider\n      value={{\n        status,\n        variant,\n        _icon,\n        colorScheme,\n      }}\n    >\n      <Box {...newProps} ref={ref}>\n        {children}\n      </Box>\n    </AlertContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(Alert));\n"]}