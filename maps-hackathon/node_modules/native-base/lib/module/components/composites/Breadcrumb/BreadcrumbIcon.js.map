{"version":3,"sources":["BreadcrumbIcon.tsx"],"names":["BreadcrumbIcon","props","ref","React","useContext","BreadcrumbItemContext","isCurrent","children","_current","resolvedProps"],"mappings":"wbAAA,qDACA,2CAEA,kCACA,oF,6HAGA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAA8BC,GAA9B,CAA4C,uBACnBC,eAAMC,UAAN,CAC5CC,8BAD4C,CADmB,CACzDC,SADyD,mBACzDA,SADyD,yBAKlB,4CAC7C,gBAD6C,CAE7CL,KAF6C,CALkB,CAK3DM,QAL2D,qBAK3DA,QAL2D,CAKjDC,QALiD,qBAKjDA,QALiD,CAKpCC,aALoC,oFASjE,MACE,8BAAC,UAAD,wBAAM,GAAG,CAAEP,GAAX,EAAqBI,SAAS,EAAIE,QAAlC,CAAiDC,aAAjD,+EACGF,QADH,CADF,CAKD,CAdD,C,aAgBe,gBAAK,sBAAWP,cAAX,CAAL,C","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Icon } from '../../primitives/Icon';\nimport type { IBreadcrumbItemContext, IBreadcrumbIconProps } from './types';\nimport { BreadcrumbItemContext } from './Context';\nimport { usePropsResolution } from '../../../hooks/useThemeProps/usePropsResolution';\n\n// Add breadcrumbIcon as child of breadcrumbItem for implementaion of isCurrent prop\nconst BreadcrumbIcon = (props: IBreadcrumbIconProps, ref?: any) => {\n  const { isCurrent }: IBreadcrumbItemContext = React.useContext(\n    BreadcrumbItemContext\n  );\n\n  let { children, _current, ...resolvedProps } = usePropsResolution(\n    'BreadcrumbIcon',\n    props\n  );\n  return (\n    <Icon ref={ref} {...(isCurrent && _current)} {...resolvedProps}>\n      {children}\n    </Icon>\n  );\n};\n\nexport default memo(forwardRef(BreadcrumbIcon));\n"]}