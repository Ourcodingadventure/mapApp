{"version":3,"sources":["AlertDialogCloseButton.tsx"],"names":["AlertDialogCloseButton","props","ref","newProps","_icon","rest","React","useContext","AlertDialogContext","handleClose"],"mappings":"wbAAA,qDACA,kCACA,qCACA,8EACA,kDAEA,2E,sIAEA,GAAMA,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,KAAD,CAAsBC,GAAtB,CAAoC,CACjE,GAAMC,CAAAA,QAAQ,CAAG,8BAAmB,wBAAnB,CAA6CF,KAA7C,CAAjB,CADiE,GAEzDG,CAAAA,KAFyD,CAEtCD,QAFsC,CAEzDC,KAFyD,CAE/CC,IAF+C,uCAEtCF,QAFsC,kCAGzCG,eAAMC,UAAN,CAAiBC,2BAAjB,CAHyC,CAGzDC,WAHyD,mBAGzDA,WAHyD,CAKjE,GAAI,iDAAsBR,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,8BAAC,eAAD,wBACE,OAAO,CAAC,OADV,EAEMI,IAFN,EAGE,OAAO,CAAEI,WAHX,CAIE,kBAAkB,CAAC,cAJrB,CAKE,GAAG,CAAEP,GALP,8EAOE,6BAAC,gBAAD,0BAAeE,KAAf,+EAPF,CADF,CAWD,CAnBD,C,aAqBe,gBAAK,sBAAWJ,sBAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { AlertDialogContext } from './Context';\nimport { usePropsResolution } from '../../../hooks';\nimport Button from '../../primitives/Button/Button';\nimport { CloseIcon } from '../../primitives/Icon/Icons';\nimport type { IButtonProps } from '../../primitives/Button';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AlertDialogCloseButton = (props: IButtonProps, ref?: any) => {\n  const newProps = usePropsResolution('AlertDialogCloseButton', props);\n  const { _icon, ...rest } = newProps;\n  const { handleClose } = React.useContext(AlertDialogContext);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Button\n      variant=\"ghost\"\n      {...rest}\n      onPress={handleClose}\n      accessibilityLabel=\"Close dialog\"\n      ref={ref}\n    >\n      <CloseIcon {..._icon} />\n    </Button>\n  );\n};\n\nexport default memo(forwardRef(AlertDialogCloseButton));\n"]}