{"version":3,"sources":["index.tsx"],"names":["Kbd","ref","children","props","newProps","React","memo","forwardRef"],"mappings":"mWAAA,oDACA,4CACA,qCAEA,2E,6GAEA,GAAMA,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAAoCC,GAApC,CAAkD,IAA/CC,CAAAA,QAA+C,MAA/CA,QAA+C,CAAlCC,KAAkC,0DAC5D,GAAMC,CAAAA,QAAQ,CAAG,yBAAc,KAAd,CAAqBD,KAArB,CAAjB,CAEA,GAAI,iDAAsBA,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,8BAAC,eAAD,0BAASC,QAAT,EAAmB,GAAG,CAAEH,GAAxB,8EACGC,QADH,CADF,CAKD,CAXD,C,aAaeG,eAAMC,IAAN,CAAWD,eAAME,UAAN,CAAiBP,GAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { Box } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport type { IKbdProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Kbd = ({ children, ...props }: IKbdProps, ref?: any) => {\n  const newProps = useThemeProps('Kbd', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...newProps} ref={ref}>\n      {children}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(Kbd));\nexport type { IKbdProps };\n"]}