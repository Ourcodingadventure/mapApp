{"version":3,"sources":["useBreakpointValue.ts"],"names":["useBreakpointValue","values","windowWidth","width","theme","breakpoints","currentBreakpoint"],"mappings":"uGAAA,yCACA,qCAKA,6CAEO,QAASA,CAAAA,kBAAT,CACLC,MADK,CAEL,0BACA,GAAIC,CAAAA,WAAW,uBAAG,sCAAH,eAAG,qBAAuBC,KAAzC,CACA,GAAMC,CAAAA,KAAK,CAAG,wBAAd,CAEA,GAAI,oCAAyBH,MAAzB,CAAiCG,KAAK,CAACC,WAAvC,CAAJ,CAAyD,CACvD,GAAIC,CAAAA,iBAAiB,CAAG,gCACtBF,KAAK,CAACC,WADgB,CAEtBH,WAFsB,CAAxB,CAIA,MAAO,mCACLD,MADK,CAELG,KAAK,CAACC,WAFD,CAGLC,iBAHK,CAAP,CAKD,CAVD,IAUO,CACL,MAAOL,CAAAA,MAAP,CACD,CACF","sourcesContent":["import { useWindowDimensions } from 'react-native';\nimport {\n  getClosestBreakpoint,\n  hasValidBreakpointFormat,\n  findLastValidBreakpoint,\n} from '../theme/tools';\nimport { useTheme } from './../hooks/useTheme';\n\nexport function useBreakpointValue(\n  values: Object | Array<string | number | Object>\n) {\n  let windowWidth = useWindowDimensions()?.width;\n  const theme = useTheme();\n\n  if (hasValidBreakpointFormat(values, theme.breakpoints)) {\n    let currentBreakpoint = getClosestBreakpoint(\n      theme.breakpoints,\n      windowWidth\n    );\n    return findLastValidBreakpoint(\n      values,\n      theme.breakpoints,\n      currentBreakpoint\n    );\n  } else {\n    return values;\n  }\n}\n"]}