{"version":3,"sources":["useBreakpointResolvedProps.ts"],"names":["useBreakpointResolvedProps","props","currentBreakpoint","theme","newProps","React","useMemo","key","rawValue","value","breakpoints"],"mappings":"sLAAA,oDAEA,4DACA,4CACA,6CAUO,GAAMA,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,CAACC,KAAD,CAAmB,CAC3D,GAAMC,CAAAA,iBAAiB,CAAG,2CAAoB,4BAApB,EACvBA,iBADH,CAEA,GAAMC,CAAAA,KAAK,CAAG,wBAAd,CACA,GAAMC,CAAAA,QAAmB,CAAGC,eAAMC,OAAN,CAAc,UAAM,CAC9C,GAAIF,CAAAA,QAAmB,CAAG,EAA1B,CACA,IAAK,GAAIG,CAAAA,IAAT,GAAgBN,CAAAA,KAAhB,CAAuB,CACrB,GAAMO,CAAAA,QAAQ,CAAGP,KAAK,CAACM,IAAD,CAAtB,CACA,GAAME,CAAAA,KAAK,CAAG,sCACZD,QADY,CAEZL,KAAK,CAACO,WAFM,CAGZR,iBAHY,CAIZK,IAJY,CAAd,CAMAH,QAAQ,CAACG,IAAD,CAAR,CAAgBE,KAAhB,CACD,CACD,MAAOL,CAAAA,QAAP,CACD,CAb2B,CAazB,CAACH,KAAD,CAAQC,iBAAR,CAA2BC,KAAK,CAACO,WAAjC,CAbyB,CAA5B,CAeA,MAAON,CAAAA,QAAP,CACD,CApBM,C","sourcesContent":["import React from 'react';\nimport type { ResponsiveValue } from '../components/types';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { resolveValueWithBreakpoint } from './useThemeProps/utils';\nimport { useTheme } from './../hooks/useTheme';\n\ntype IProps = {\n  [key: string]: ResponsiveValue<number | string>;\n};\n\ntype INewProps = {\n  [key: string]: number | string;\n};\n\nexport const useBreakpointResolvedProps = (props: IProps) => {\n  const currentBreakpoint = useNativeBaseConfig('useBreakpointResolvedProps')\n    .currentBreakpoint;\n  const theme = useTheme();\n  const newProps: INewProps = React.useMemo(() => {\n    let newProps: INewProps = {};\n    for (let key in props) {\n      const rawValue = props[key];\n      const value = resolveValueWithBreakpoint(\n        rawValue,\n        theme.breakpoints,\n        currentBreakpoint,\n        key\n      );\n      newProps[key] = value;\n    }\n    return newProps;\n  }, [props, currentBreakpoint, theme.breakpoints]);\n\n  return newProps;\n};\n"]}