{"version":3,"sources":["usePropsResolution.test.tsx"],"names":["inset","frame","x","y","width","height","insets","top","left","right","bottom","Provider","children","theme","defaultTheme","CheckBoxGroup","React","useState","groupValue","setGroupValue","values","describe","it","getByTestId","box","expect","props","style","paddingLeft","toBe","space","paddingRight","paddingTop","paddingBottom","base","sm","lg","box2","Platform","OS","p","newTheme","components","Box","baseStyle","py","bg","toEqual","backgroundColor","colors","cyan","variants","myBox","mt","marginTop","sizes","xs","uri","image","spinner","maxWidth","undefined","defaultProps","size","opacity","marginRight","marginBottom","marginLeft","shadows","borderLeftWidth","px","pl","borderColor","formControl","gray","triggerProps","triggerElement","fireEvent","press","menuItem","disabledMenuItem","blue","pink","color","testID","buttonElement","buttonText","config","initialColorMode","_dark","source","imageElement","inputElement","placeholderTextColor","blueGray","fontSize","borderBottomWidth","variant","disabled","required","getAllByRole","checkbox","length","accessibilityState","checked","sliderElement","minValue","maxValue","step","thumbSize","sliderSize","colorScheme","text","lineHeight","letterSpacing","hstackElement","flexDirection","pressableElement","red","direction","responsiveLineHeight","heading"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from '@testing-library/react-native';\nimport { theme as defaultTheme } from '../../theme';\nimport { NativeBaseProvider } from '../../core/NativeBaseProvider';\nimport {\n  Box,\n  Button,\n  Pressable,\n  // Select,\n  Image,\n  Spinner,\n  Text,\n  Input,\n  Checkbox,\n  Slider,\n  // Icon,\n  HStack,\n  Heading,\n} from '../../components/primitives';\n// import { Ionicons } from '@expo/vector-icons';\nimport { FormControl, Menu } from '../../components/composites';\nimport { Platform } from 'react-native';\nimport { extendTheme } from '../../core/extendTheme';\nimport { fireEvent } from '@testing-library/react-native';\n// import { InfoIcon } from '../../components/primitives/Icon/Icons';\n\nconst inset = {\n  frame: { x: 0, y: 0, width: 0, height: 0 },\n  insets: { top: 0, left: 0, right: 0, bottom: 0 },\n};\n\nconst Provider = ({ children, theme = defaultTheme }: any) => {\n  return (\n    <NativeBaseProvider initialWindowMetrics={inset} theme={theme}>\n      {children}\n    </NativeBaseProvider>\n  );\n};\n\nfunction CheckBoxGroup() {\n  const [groupValue, setGroupValue] = React.useState(['Item 1 ', 'Item 3 ']);\n  return (\n    <Checkbox.Group\n      colorScheme=\"green\"\n      defaultValue={groupValue}\n      onChange={(values) => {\n        setGroupValue(values || []);\n      }}\n    >\n      <Checkbox value=\"Item 1 \">\n        <Text mx={2}>Item 1</Text>\n      </Checkbox>\n      <Checkbox value=\"Item 2 \">\n        <Text mx={2}>Item 2</Text>\n      </Checkbox>\n      <Checkbox value=\"Item 3 \">\n        <Text mx={2}>Item 3</Text>\n      </Checkbox>\n      <Checkbox colorScheme=\"orange\" value=\"Indeterminate Item \">\n        <Text mx={2}>Indeterminate Item</Text>\n      </Checkbox>\n    </Checkbox.Group>\n  );\n}\n\ndescribe('props resolution', () => {\n  it('tests simple resolution', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box p={2} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style.paddingLeft).toBe(defaultTheme.space['2']);\n    expect(box.props.style.paddingRight).toBe(defaultTheme.space['2']);\n    expect(box.props.style.paddingTop).toBe(defaultTheme.space['2']);\n    expect(box.props.style.paddingBottom).toBe(defaultTheme.space['2']);\n  });\n\n  it('tests simple resolution with responsive props', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box p={[2, 4, 5]} testID=\"test\">\n          hello world\n        </Box>\n        <Box p={{ base: 1, sm: 5, lg: 10 }} testID=\"test2\">\n          hello world\n        </Box>\n      </Provider>\n    );\n\n    const box = getByTestId('test');\n    expect(box.props.style.paddingLeft).toBe(defaultTheme.space['4']);\n    expect(box.props.style.paddingRight).toBe(defaultTheme.space['4']);\n    expect(box.props.style.paddingTop).toBe(defaultTheme.space['4']);\n    expect(box.props.style.paddingBottom).toBe(defaultTheme.space['4']);\n    const box2 = getByTestId('test2');\n    expect(box2.props.style.paddingLeft).toBe(defaultTheme.space['5']);\n    expect(box2.props.style.paddingRight).toBe(defaultTheme.space['5']);\n    expect(box2.props.style.paddingTop).toBe(defaultTheme.space['5']);\n    expect(box2.props.style.paddingBottom).toBe(defaultTheme.space['5']);\n  });\n\n  it('resolves platform props', () => {\n    Platform.OS = 'android';\n    const { getByTestId } = render(\n      <Provider>\n        <Box p={5} _android={{ p: 10 }} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style.paddingLeft).toBe(defaultTheme.space['10']);\n    expect(box.props.style.paddingRight).toBe(defaultTheme.space['10']);\n    expect(box.props.style.paddingTop).toBe(defaultTheme.space['10']);\n    expect(box.props.style.paddingBottom).toBe(defaultTheme.space['10']);\n  });\n\n  it('resolves base style with props', () => {\n    const newTheme = extendTheme({\n      components: {\n        Box: {\n          baseStyle: {\n            py: 10,\n            bg: 'cyan.500',\n          },\n        },\n      },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box p={5} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      paddingTop: newTheme.space['5'],\n      paddingBottom: newTheme.space['5'],\n      paddingLeft: newTheme.space['5'],\n      paddingRight: newTheme.space['5'],\n      backgroundColor: newTheme.colors.cyan['500'],\n    });\n  });\n\n  it('resolves base style and variants with props', () => {\n    const newTheme = extendTheme({\n      components: {\n        Box: {\n          baseStyle: {\n            py: 10,\n            bg: 'cyan.500',\n          },\n          variants: {\n            myBox: () => ({\n              mt: 10,\n            }),\n          },\n        },\n      },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box\n          p={5}\n          testID=\"test\"\n          //@ts-ignore\n          variant=\"myBox\"\n        >\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      marginTop: newTheme.space['10'],\n      paddingTop: newTheme.space['5'],\n      paddingBottom: newTheme.space['5'],\n      paddingLeft: newTheme.space['5'],\n      paddingRight: newTheme.space['5'],\n      backgroundColor: newTheme.colors.cyan['500'],\n    });\n  });\n\n  it('resolves base style, variants and sizes with props', () => {\n    const newTheme = extendTheme({\n      components: {\n        Box: {\n          baseStyle: {\n            py: 10,\n            bg: 'cyan.500',\n          },\n          variants: {\n            myBox: () => ({\n              mt: 10,\n            }),\n          },\n          sizes: {\n            xs: {\n              height: 10,\n            },\n          },\n        },\n      },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box\n          p={5}\n          testID=\"test\"\n          //@ts-ignore\n          variant=\"myBox\"\n          size=\"xs\"\n        >\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      marginTop: newTheme.space['10'],\n      paddingTop: newTheme.space['5'],\n      paddingBottom: newTheme.space['5'],\n      paddingLeft: newTheme.space['5'],\n      paddingRight: newTheme.space['5'],\n      height: newTheme.sizes['10'],\n      backgroundColor: newTheme.colors.cyan['500'],\n    });\n  });\n\n  it('tests component sizes resolution', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Image\n          source={{ uri: 'https://nativebase.io/img/nativebase-logo.svg' }}\n          alt=\"test-image\"\n          size=\"md\"\n          testID=\"image\"\n        />\n        <Spinner size=\"sm\" testID=\"spinner\" />\n      </Provider>\n    );\n    const image = getByTestId('image');\n    const spinner = getByTestId('spinner');\n    expect(image.props.style).toEqual({\n      height: defaultTheme.space['20'],\n      maxWidth: '100%',\n      width: defaultTheme.space['20'],\n    });\n\n    expect(spinner.props.style).toEqual(undefined);\n  });\n\n  it('resolves base style and variants, sizes and default props with props', () => {\n    const newTheme = extendTheme({\n      components: {\n        Box: {\n          baseStyle: {\n            py: 10,\n            bg: 'cyan.500',\n          },\n          variants: {\n            myBox: () => ({\n              mt: 10,\n            }),\n          },\n          sizes: {\n            xs: {\n              height: 10,\n            },\n          },\n          defaultProps: {\n            size: 'xs',\n          },\n        },\n      },\n    });\n\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box\n          p={5}\n          testID=\"test\"\n          //@ts-ignore\n          variant=\"myBox\"\n        >\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      marginTop: newTheme.space['10'],\n      paddingTop: newTheme.space['5'],\n      paddingBottom: newTheme.space['5'],\n      paddingLeft: newTheme.space['5'],\n      paddingRight: newTheme.space['5'],\n      height: newTheme.sizes['10'],\n      backgroundColor: newTheme.colors.cyan['500'],\n    });\n  });\n\n  it('tests alpha opacity resolution', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box p={2} bg=\"primary.400:alpha.50\" testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style.backgroundColor).toBe(\n      'rgba(34, 211, 238, ' + defaultTheme.opacity['50'] + ')'\n    );\n  });\n\n  it('resolves negative margins', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box m={-5} mt={'-10'} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual({\n      marginTop: -defaultTheme.space['10'],\n      marginRight: -defaultTheme.space['5'],\n      marginBottom: -defaultTheme.space['5'],\n      marginLeft: -defaultTheme.space['5'],\n    });\n  });\n\n  it('resolves shadow from theme', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Box shadow={9} testID=\"test\">\n          hello world\n        </Box>\n      </Provider>\n    );\n    const box = getByTestId('test');\n    expect(box.props.style).toEqual(defaultTheme.shadows[9]);\n  });\n\n  it('FormControl: pseudo props test ', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <FormControl isDisabled>\n          <FormControl.HelperText\n            testID=\"test\"\n            _disabled={{\n              borderLeftWidth: 1,\n              mt: 1,\n              px: 1,\n              pl: 2,\n              borderColor: 'gray.400',\n            }}\n          />\n        </FormControl>\n      </Provider>\n    );\n    const formControl = getByTestId('test');\n    expect(formControl.props.style).toEqual({\n      borderLeftWidth: 1,\n      marginTop: defaultTheme.space['1'],\n      paddingLeft: defaultTheme.space['2'],\n      paddingRight: defaultTheme.space['1'],\n      borderColor: defaultTheme.colors.gray['400'],\n    });\n  });\n\n  it('Menu: style props test', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Menu\n          trigger={(triggerProps) => {\n            return (\n              <Pressable\n                testID=\"pressableTest\"\n                accessibilityLabel=\"More options menu\"\n                {...triggerProps}\n              >\n                Open menu\n              </Pressable>\n            );\n          }}\n        >\n          <Menu.Item>Arial</Menu.Item>\n          <Menu.Item bg=\"blue.300\" testID=\"test\">\n            Nunito Sans\n          </Menu.Item>\n          <Menu.Item testID=\"test1\" isDisabled _disabled={{ bg: 'pink.300' }}>\n            Tahoma\n          </Menu.Item>\n        </Menu>\n      </Provider>\n    );\n    const triggerElement = getByTestId('pressableTest');\n    fireEvent.press(triggerElement);\n    const menuItem = getByTestId('test');\n    const disabledMenuItem = getByTestId('test1');\n    expect(menuItem.props.style.backgroundColor).toBe(\n      defaultTheme.colors.blue['300']\n    );\n    expect(disabledMenuItem.props.style.backgroundColor).toBe(\n      defaultTheme.colors.pink['300']\n    );\n  });\n\n  it('Button: style props test', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Button\n          testID=\"test\"\n          bg=\"pink.900\"\n          _text={{ color: 'cyan.100', testID: 'test1' }}\n        >\n          PRIMARY\n        </Button>\n      </Provider>\n    );\n    const buttonElement = getByTestId('test');\n    const buttonText = getByTestId('test1');\n    expect(buttonText.props.style.color).toBe(defaultTheme.colors.cyan['100']);\n    expect(buttonElement.props.style.backgroundColor).toBe(\n      defaultTheme.colors.pink['900']\n    );\n  });\n  it('Button: style props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Button\n          testID=\"test\"\n          _ios={{ _dark: { bg: 'pink.900' } }}\n          _text={{ color: 'cyan.100', testID: 'test1' }}\n        >\n          PRIMARY\n        </Button>\n      </Provider>\n    );\n    const buttonElement = getByTestId('test');\n    const buttonText = getByTestId('test1');\n    expect(buttonText.props.style.color).toBe(defaultTheme.colors.cyan['100']);\n    expect(buttonElement.props.style.backgroundColor).toBe(\n      defaultTheme.colors.pink['900']\n    );\n  });\n  it('Button: style responsive props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Button\n          testID=\"test\"\n          _ios={{ _dark: { bg: ['pink.900', 'blue.900', 'cyan.900'] } }}\n          _text={{ color: 'cyan.100', testID: 'test1' }}\n        >\n          PRIMARY\n        </Button>\n      </Provider>\n    );\n    const buttonElement = getByTestId('test');\n    const buttonText = getByTestId('test1');\n    expect(buttonText.props.style.color).toBe(defaultTheme.colors.cyan['100']);\n    expect(buttonElement.props.style.backgroundColor).toBe(\n      defaultTheme.colors.blue['900']\n    );\n  });\n  it('Image: style responsive props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Image\n          testID=\"test\"\n          source={{\n            uri: 'https://wallpaperaccess.com/full/317501jpg',\n          }}\n          alt=\"Alternate Text\"\n          _ios={{\n            _dark: {\n              source: {\n                uri: 'https://www.w3schools.com/css/img_lightsjpg',\n              },\n              size: ['sm', 'md', 'xl'],\n            },\n          }}\n        />\n      </Provider>\n    );\n    const imageElement = getByTestId('test');\n    expect(imageElement.props.style).toEqual({\n      height: defaultTheme.space['20'],\n      maxWidth: '100%',\n      width: defaultTheme.space['20'],\n    });\n  });\n\n  it('Input: Basic check', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Input\n          testID=\"test\"\n          w=\"100%\"\n          mx={3}\n          placeholder=\"Default Input\"\n          placeholderTextColor=\"blueGray.400\"\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.style.width).toBe('100%');\n\n    expect(inputElement.props.placeholderTextColor).toBe(\n      defaultTheme.colors.blueGray['400']\n    );\n    expect(inputElement.props.style.marginLeft).toBe(defaultTheme.space['3']);\n    expect(inputElement.props.style.marginRight).toBe(defaultTheme.space['3']);\n  });\n\n  it('Input: color mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Input\n          testID=\"test\"\n          _light={{\n            placeholderTextColor: 'blueGray.400',\n          }}\n          _dark={{\n            placeholderTextColor: 'blueGray.50',\n          }}\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.placeholderTextColor).toBe(\n      defaultTheme.colors.blueGray['50']\n    );\n  });\n\n  it('Input: size', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Input\n          testID=\"test\"\n          size=\"sm\"\n          variant=\"outline\"\n          _dark={{\n            size: 'md',\n          }}\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.style.fontSize).toBe(16);\n  });\n\n  it('Input: variant', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Input testID=\"test\" variant=\"underlined\" />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.style.borderBottomWidth).toBe(1);\n  });\n\n  // it('Input: inputElements', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <Input\n  //         testID=\"test1\"\n  //         InputLeftElement={<Button testID=\"test2\">leftIcon</Button>}\n  //         placeholder=\"Input\"\n  //       />\n  //     </Provider>\n  //   );\n  //   const inputElement = getByTestId('test1');\n  //   const iconElement = getByTestId('test2');\n  //   console.log(inputElement, '!!!!!');\n  //   console.log('===========');\n  //   console.log(inputElement.props, '!!!!!');\n  //   expect(inputElement.props.InputLeftElement).toBe(iconElement);\n  // });\n  it('Input: style props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Input\n          testID=\"test\"\n          _ios={{ _dark: { variant: 'underlined', size: 'sm' } }}\n          variant=\"outline\"\n          size=\"lg\"\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.style.borderBottomWidth).toBe(1);\n    expect(inputElement.props.style.fontSize).toBe(14);\n  });\n\n  // it('Input: inputElemets', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <Input\n  //         testID=\"test1\"\n  //         InputLeftElement={<Button testID=\"test2\">leftIcon</Button>}\n  //         placeholder=\"Input\"\n  //       />\n  //     </Provider>\n  //   );\n  //   const inputElement = getByTestId('test1');\n  //   const iconElement = getByTestId('test2');\n  //   console.log(inputElement, '!!!!!');\n  //   console.log('===========');\n  //   console.log(inputElement.props, '!!!!!');\n  //   expect(inputElement.props.InputLeftElement).toBe(iconElement);\n  // });\n\n  it('Input: disabled', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Input\n          testID=\"test\"\n          type=\"password\"\n          isDisabled={true}\n          isRequired={true}\n        />\n      </Provider>\n    );\n    const inputElement = getByTestId('test');\n    expect(inputElement.props.disabled).toBe(true);\n    expect(inputElement.props.required).toBe(true);\n  });\n\n  // ==========================================\n\n  it('handles defaults and onChange on checkBoxGroup', () => {\n    const { getAllByRole } = render(\n      <Provider\n        initialWindowMetrics={{\n          frame: { x: 0, y: 0, width: 0, height: 0 },\n          insets: { top: 0, left: 0, right: 0, bottom: 0 },\n        }}\n      >\n        <CheckBoxGroup />\n      </Provider>\n    );\n    const checkbox = getAllByRole('checkbox');\n    expect(checkbox.length).toBe(4);\n    expect(checkbox[0].props.accessibilityState.checked).toBe(true);\n    expect(checkbox[1].props.accessibilityState.checked).toBe(false);\n    expect(checkbox[2].props.accessibilityState.checked).toBe(true);\n    expect(checkbox[3].props.accessibilityState.checked).toBe(false);\n    fireEvent.press(checkbox[1]);\n    expect(checkbox[1].props.accessibilityState.checked).toBe(true);\n  });\n\n  it('checkBox: disabled, checked', () => {\n    const { getAllByRole } = render(\n      <Provider\n        initialWindowMetrics={{\n          frame: { x: 0, y: 0, width: 0, height: 0 },\n          insets: { top: 0, left: 0, right: 0, bottom: 0 },\n        }}\n      >\n        <Checkbox value=\"Item 1 \">\n          <Text mx={2}>Item 1</Text>\n        </Checkbox>\n        <Checkbox value=\"Item 2 \" isDisabled>\n          <Text mx={2}>Item 2</Text>\n        </Checkbox>\n        <Checkbox value=\"Item 3\" isChecked>\n          <Text mx={2}>Item 3</Text>\n        </Checkbox>\n        <Checkbox colorScheme=\"orange\" value=\"Indeterminate Item\" isInvalid>\n          <Text mx={2}>Indeterminate Item</Text>\n        </Checkbox>\n      </Provider>\n    );\n    const checkbox = getAllByRole('checkbox');\n    expect(checkbox.length).toBe(4);\n    expect(checkbox[1].props.accessibilityState.disabled).toBe(true);\n    expect(checkbox[2].props.accessibilityState.checked).toBe(true);\n    // expect(checkbox[3].props.accessibilityState.invalid).toBe(true);\n  });\n\n  // it('Checkbox: style props test with dark mode', () => {\n  //   const newTheme = extendTheme({\n  //     config: { initialColorMode: 'dark' },\n  //   });\n  //   const { getAllByRole } = render(\n  //     <Provider theme={newTheme}>\n  //       <Checkbox\n  //         value=\"Item 1\"\n  //         isChecked={true}\n  //         isDisabled={false}\n  //         _dark={{\n  //           isChecked: false,\n  //           isDisabled: true,\n  //         }}\n  //       >\n  //         <Text mx={2}>Item 1</Text>\n  //       </Checkbox>\n  //     </Provider>\n  //   );\n\n  //   let checkbox = getAllByRole('checkbox');\n  //   console.log(checkbox[0].props.accessibilityState, '@@@@');\n  //   expect(checkbox[0].props.accessibilityState.checked).toBe(false);\n  //   expect(checkbox[0].props.accessibilityState.disabled).toBe(true);\n  // });\n\n  // it('Checkbox: style props test on ios with dark mode', () => {\n  //   const newTheme = extendTheme({\n  //     config: { initialColorMode: 'dark' },\n  //   });\n  //   Platform.OS = 'ios';\n  //   const { getAllByRole } = render(\n  //     <Provider theme={newTheme}>\n  //       <Checkbox\n  //         value=\"Item 1\"\n  //         isChecked={true}\n  //         isDisabled={false}\n  //         _ios={{\n  //           _dark: {\n  //             isChecked: false,\n  //             isDisabled: true,\n  //           },\n  //         }}\n  //       >\n  //         <Text mx={2}>Item 1</Text>\n  //       </Checkbox>\n  //     </Provider>\n  //   );\n\n  //   let checkbox = getAllByRole('checkbox');\n  //   console.log(checkbox[0].props.accessibilityState, '@@@@');\n  //   expect(checkbox[0].props.accessibilityState.checked).toBe(false);\n  //   expect(checkbox[0].props.accessibilityState.disabled).toBe(true);\n  // });\n\n  it('onChange on checkBox', () => {\n    const { getAllByRole } = render(\n      <Provider\n        initialWindowMetrics={{\n          frame: { x: 0, y: 0, width: 0, height: 0 },\n          insets: { top: 0, left: 0, right: 0, bottom: 0 },\n        }}\n      >\n        <Checkbox value=\"item 1\" />\n      </Provider>\n    );\n    const checkbox = getAllByRole('checkbox');\n    expect(checkbox.length).toBe(1);\n    fireEvent.press(checkbox[0]);\n    expect(checkbox[0].props.accessibilityState.checked).toBe(true);\n  });\n\n  // it('CustomIcon checkBox', () => {\n  //   let { getAllByRole, getByTestId } = render(\n  //     <Provider>\n  //       <Checkbox\n  //         value=\"orange\"\n  //         colorScheme=\"orange\"\n  //         size=\"md\"\n  //         icon={<Icon testID=\"icon\" as={<InfoIcon />} />}\n  //         defaultIsChecked\n  //       >\n  //         Info\n  //       </Checkbox>\n  //     </Provider>\n  //   );\n  //   let checkbox = getAllByRole('checkbox');\n  //   let nestedIcon = getByTestId('icon');\n\n  //   expect(checkbox[0].props.icon).toBe(nestedIcon);\n  // });\n\n  //  ==========================================\n  it('Slider: basic', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Slider\n          testID=\"slider\"\n          // Need to test\n          // defaultValue={70}\n          minValue={0}\n          maxValue={100}\n          accessibilityLabel=\"hello world\"\n          step={10}\n          colorScheme=\"red\"\n          size=\"sm\"\n        >\n          <Slider.Track>\n            <Slider.FilledTrack />\n          </Slider.Track>\n          <Slider.Thumb />\n        </Slider>\n      </Provider>\n    );\n    const sliderElement = getByTestId('slider');\n    expect(sliderElement.props.minValue).toBe(0);\n    expect(sliderElement.props.maxValue).toBe(100);\n    expect(sliderElement.props.step).toBe(10);\n    expect(sliderElement.props.thumbSize).toBe(4);\n    expect(sliderElement.props.sliderSize).toBe(4);\n    expect(sliderElement.props.colorScheme).toBe('red');\n  });\n\n  //  ==========================================\n  // it('Modal: size', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <Modal isOpen={true} size=\"sm\">\n  //         <Modal.Content testID=\"size\">\n  //           <Modal.Header>Modal Title</Modal.Header>\n  //           <Modal.Body>\n  //             Sit nulla est ex deserunt exercitation anim occaecat. Nostrud\n  //             ullamco deserunt aute id consequat veniam incididunt duis in sint\n  //             irure nisi. Mollit officia cillum Lorem ullamco minim nostrud elit\n  //             officia tempor esse quis. Sunt ad dolore quis aute consequat.\n  //             Magna exercitation reprehenderit magna aute tempor cupidatat\n  //             consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex\n  //             incididunt cillum quis. Velit duis sit officia eiusmod Lorem\n  //             aliqua enim laboris do dolor eiusmod. Et mollit incididunt nisi\n  //             consectetur esse laborum eiusmod pariatur\n  //           </Modal.Body>\n  //         </Modal.Content>\n  //       </Modal>\n  //     </Provider>\n  //   );\n  //   const modalElement = getByTestId('size');\n  //   // console.log(modalElement, 'jdj');\n  //   expect(modalElement.props.style.width).toBe('60%');\n  // });\n  it('Slider: style props test with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Slider\n          testID=\"test\"\n          _dark={{\n            minValue: 20,\n            maxValue: 120,\n            step: 25,\n            colorScheme: 'blue',\n            size: 'md',\n          }}\n          minValue={0}\n          maxValue={100}\n          accessibilityLabel=\"hello world\"\n          step={10}\n          colorScheme=\"red\"\n          size=\"sm\"\n        >\n          <Slider.Track>\n            <Slider.FilledTrack />\n          </Slider.Track>\n          <Slider.Thumb />\n        </Slider>\n      </Provider>\n    );\n\n    const sliderElement = getByTestId('test');\n    expect(sliderElement.props.minValue).toBe(20);\n    expect(sliderElement.props.maxValue).toBe(120);\n    expect(sliderElement.props.step).toBe(25);\n    expect(sliderElement.props.thumbSize).toBe(5);\n    expect(sliderElement.props.sliderSize).toBe(5);\n    expect(sliderElement.props.colorScheme).toBe('blue');\n  });\n  it('tests lineHeight & letterspacing in text ', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Text\n          /* @ts-ignore */\n          fontSize=\"20px\"\n          lineHeight=\"5xl\"\n          letterSpacing=\"xl\"\n          testID=\"test\"\n        >\n          This is a text\n        </Text>\n      </Provider>\n    );\n\n    const text = getByTestId('test');\n    expect(text.props.style.lineHeight).toBe(80);\n    expect(text.props.style.letterSpacing).toBe(1);\n  });\n\n  it('Slider: style props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Slider\n          testID=\"test\"\n          _ios={{\n            _dark: {\n              minValue: 10,\n              maxValue: 110,\n              step: 15,\n              colorScheme: 'green',\n              size: 'md',\n            },\n          }}\n          minValue={0}\n          maxValue={100}\n          accessibilityLabel=\"hello world\"\n          step={10}\n          colorScheme=\"red\"\n          size=\"sm\"\n        >\n          <Slider.Track>\n            <Slider.FilledTrack />\n          </Slider.Track>\n          <Slider.Thumb />\n        </Slider>\n      </Provider>\n    );\n\n    const sliderElement = getByTestId('test');\n    expect(sliderElement.props.minValue).toBe(10);\n    expect(sliderElement.props.maxValue).toBe(110);\n    expect(sliderElement.props.step).toBe(15);\n    expect(sliderElement.props.thumbSize).toBe(5);\n    expect(sliderElement.props.sliderSize).toBe(5);\n    expect(sliderElement.props.colorScheme).toBe('green');\n  });\n\n  it('HStack: basic', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <HStack testID=\"hstack\">\n          <Box>1</Box>\n          <Box>2</Box>\n          <Box>3</Box>\n        </HStack>\n      </Provider>\n    );\n    const hstackElement = getByTestId('hstack');\n    expect(hstackElement.props.style.flexDirection).toBe('row');\n  });\n\n  it('HStack: direction', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <HStack testID=\"test\" direction=\"column\">\n          <Box>1</Box>\n          <Box>2</Box>\n          <Box>3</Box>\n        </HStack>\n      </Provider>\n    );\n    const hstackElement = getByTestId('test');\n    expect(hstackElement.props.style.flexDirection).toBe('column');\n  });\n\n  // it('Icon: basic', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <Icon as={<Ionicons name=\"md-checkmark-circle\" />} />\n  //     </Provider>\n  //   );\n  //   const iconElement = getByTestId('test123');\n  //   expect(iconElement.props.style.backgroundColor).toBe(\n  //     defaultTheme.colors.red['200']\n  //   );\n  // });\n\n  // it('Icon: Nativebase icons', () => {\n  //   const { getByTestId } = render(\n  //     <Provider>\n  //       <MoonIcon testId=\"test\" />\n  //     </Provider>\n  //   );\n  //   const iconElement = getByTestId('test');\n  //   expect(pressableElement.props.style.backgroundColor).toBe(\n  //     defaultTheme.colors.red['200']\n  //   );\n  // });\n\n  it('Pressable: style props test', () => {\n    const { getByTestId } = render(\n      <Provider>\n        <Pressable testID=\"test\" bg=\"red.200\" _hover={{ bg: 'teal.300' }}>\n          <Text>hello world</Text>\n        </Pressable>\n      </Provider>\n    );\n    const pressableElement = getByTestId('test');\n    expect(pressableElement.props.style.backgroundColor).toBe(\n      defaultTheme.colors.red['200']\n    );\n  });\n\n  // it('Pressable: style props test on ios with dark mode', () => {\n  //   const newTheme = extendTheme({\n  //     config: { initialColorMode: 'dark' },\n  //   });\n\n  //   Platform.OS = 'ios';\n  //   const { getByTestId } = render(\n  //     <Provider theme={newTheme}>\n  //       <Pressable testID=\"test\" _ios={{ _dark: { bg: 'pink.900' } }}>\n  //         PRIMARY\n  //       </Pressable>\n  //     </Provider>\n  //   );\n  //   const buttonElement = getByTestId('test');\n  //   expect(buttonElement.props.style.backgroundColor).toBe(\n  //     defaultTheme.colors.pink['900']\n  //   );\n  // });\n\n  // it('Pressable: style responsive props test on ios with dark mode', () => {\n  //   const newTheme = extendTheme({\n  //     config: { initialColorMode: 'dark' },\n  //   });\n  //   Platform.OS = 'ios';\n  //   const { getByTestId } = render(\n  //     <Provider theme={newTheme}>\n  //       <Pressable\n  //         testID=\"test\"\n  //         _ios={{ _dark: { bg: ['pink.900', 'blue.900', 'cyan.900'] } }}\n  //       >\n  //         PRIMARY\n  //       </Pressable>\n  //     </Provider>\n  //   );\n  //   const buttonElement = getByTestId('test');\n  //   expect(buttonElement.props.style.backgroundColor).toBe(\n  //     defaultTheme.colors.blue['900']\n  //   );\n  // });\n  // });\n  it('HStack: style props test with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <HStack\n          testID=\"test\"\n          direction=\"column\"\n          _dark={{\n            direction: 'row',\n          }}\n        >\n          <Box>1</Box>\n          <Box>2</Box>\n          <Box>3</Box>\n        </HStack>\n      </Provider>\n    );\n\n    const hstackElement = getByTestId('test');\n    expect(hstackElement.props.style.flexDirection).toBe('row');\n  });\n\n  it('HStack: style props test on ios & dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box>\n          <Text\n            // @ts-ignore\n            fontSize=\"12px\"\n            testID=\"test\"\n            lineHeight=\"4xl\"\n            letterSpacing=\"xl\"\n            _ios={{\n              _dark: {\n                fontSize: '15px',\n                letterSpacing: 'lg',\n                lineHeight: '3xl',\n              },\n            }}\n          >\n            This is a text\n          </Text>\n          <Text\n            testID=\"responsiveLineHeight\"\n            lineHeight=\"3xl\"\n            fontSize={['12px', '13px']}\n          >\n            hello world\n          </Text>\n        </Box>\n      </Provider>\n    );\n    const text = getByTestId('test');\n    const responsiveLineHeight = getByTestId('responsiveLineHeight');\n    expect(text.props.style.lineHeight).toBe(37.5);\n    expect(text.props.style.letterSpacing).toBe(0.375);\n    expect(responsiveLineHeight.props.style.lineHeight).toBe(32.5);\n  });\n\n  it('Heading: style props test on ios with dark mode', () => {\n    const newTheme = extendTheme({\n      config: { initialColorMode: 'dark' },\n    });\n    Platform.OS = 'ios';\n    const { getByTestId } = render(\n      <Provider theme={newTheme}>\n        <Box>\n          <Heading\n            // @ts-ignore\n            fontSize=\"12px\"\n            testID=\"test\"\n            lineHeight=\"4xl\"\n            letterSpacing=\"xl\"\n            _ios={{\n              _dark: {\n                fontSize: '15px',\n                letterSpacing: 'lg',\n                lineHeight: '3xl',\n              },\n            }}\n          >\n            This is a Heading\n          </Heading>\n        </Box>\n      </Provider>\n    );\n    const heading = getByTestId('test');\n    expect(heading.props.style.lineHeight).toBe(37.5);\n    expect(heading.props.style.letterSpacing).toBe(0.375);\n  });\n});\n\n// =========================================================\n// it('Modal: size', () => {\n//   const { getByTestId } = render(\n//     <Provider>\n//       <Modal isOpen={true} size=\"sm\">\n//         <Modal.Content testID=\"size\">\n//           <Modal.Header>Modal Title</Modal.Header>\n//           <Modal.Body>\n//             Sit nulla est ex deserunt exercitation anim occaecat. Nostrud\n//             ullamco deserunt aute id consequat veniam incididunt duis in sint\n//             irure nisi. Mollit officia cillum Lorem ullamco minim nostrud elit\n//             officia tempor esse quis. Sunt ad dolore quis aute consequat.\n//             Magna exercitation reprehenderit magna aute tempor cupidatat\n//             consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex\n//             incididunt cillum quis. Velit duis sit officia eiusmod Lorem\n//             aliqua enim laboris do dolor eiusmod. Et mollit incididunt nisi\n//             consectetur esse laborum eiusmod pariatur\n//           </Modal.Body>\n//         </Modal.Content>\n//       </Modal>\n//     </Provider>\n//   );\n//   const modalElement = getByTestId('size');\n\n//   expect(modalElement.props.style.width).toBe('60%');\n// });\n"]}