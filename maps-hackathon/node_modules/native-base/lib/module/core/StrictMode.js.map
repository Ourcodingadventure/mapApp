{"version":3,"sources":["StrictMode.ts"],"names":["tokenNotString","tokenNotFound","strictModeLogger","token","scale","mode","type","log","console"],"mappings":"yFAEA,GAAMA,CAAAA,cAAc,CAAG,gBAAvB,CACA,GAAMC,CAAAA,aAAa,CAAG,eAAtB,CAEO,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAU1B,IATJC,CAAAA,KASI,MATJA,KASI,CARJC,KAQI,MARJA,KAQI,CAPJC,IAOI,MAPJA,IAOI,CANJC,IAMI,MANJA,IAMI,CACJ,GAAI,CAACD,IAAL,CAAW,CACTA,IAAI,CAAG,KAAP,CACD,CAED,GAAIA,IAAI,GAAK,KAAb,CAAoB,OAGpB,GAAME,CAAAA,GAAG,CAAGC,OAAO,CAACH,IAAD,CAAnB,CAEA,OAAQC,IAAR,EACE,IAAKL,CAAAA,aAAL,CACEM,GAAG,UACQJ,KADR,iCAC6CC,KAD7C,qEAAH,CAGA,OACF,IAAKJ,CAAAA,cAAL,CACEO,GAAG,UAAUJ,KAAV,kCAAH,CACA,OACF,QACE,OAVJ,CAYD,CAhCM,C","sourcesContent":["export type IModeType = 'off' | 'warn' | 'error';\n\nconst tokenNotString = 'tokenNotString';\nconst tokenNotFound = 'tokenNotFound';\n\nexport const strictModeLogger = ({\n  token,\n  scale,\n  mode,\n  type,\n}: {\n  token: string;\n  scale: string;\n  mode: IModeType;\n  type: typeof tokenNotString | typeof tokenNotFound;\n}) => {\n  if (!mode) {\n    mode = 'off';\n  }\n\n  if (mode === 'off') return;\n\n  // eslint-disable-next-line no-console\n  const log = console[mode];\n\n  switch (type) {\n    case tokenNotFound:\n      log(\n        `Token ${token} not found in theme scale of ${scale}. Please use extendTheme function to add this token in your theme`\n      );\n      return;\n    case tokenNotString:\n      log(`Token ${token} should be passed as a string.`);\n      return;\n    default:\n      return;\n  }\n};\n"]}