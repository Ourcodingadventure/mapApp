{"version":3,"sources":["component.tsx"],"names":["Component","componentTheme","React","forwardRef","ref","children","props","StyledComponent","calculatedProps"],"mappings":"qWAAA,oDAEA,6FAGA,uC,oFAEe,kBACbA,SADa,CAEbC,cAFa,CAGb,gBACA,MAAOC,gBAAMC,UAAN,CACL,cAAoDC,GAApD,CAAiE,IAA9DC,CAAAA,QAA8D,MAA9DA,QAA8D,CAAjDC,KAAiD,0DAC/D,GAAMC,CAAAA,eAAe,CAAG,gCACtBP,SADsB,CAAxB,CAGA,GAAMQ,CAAAA,eAAe,CAAG,2DAA2BP,cAA3B,CAA2CK,KAA3C,CAAxB,CACA,MACE,8BAAC,eAAD,0BAAsBE,eAAtB,EAA6C,GAAG,CAAEJ,GAAlD,8EACGC,QADH,CADF,CAKD,CAXI,CAAP,CAaD","sourcesContent":["import React from 'react';\nimport type { AnyStyledComponent } from 'styled-components';\nimport { usePropsWithComponentTheme } from '../hooks/useThemeProps/usePropsWithComponentTheme';\nimport type { ComponentTheme } from '../theme';\nimport type { FactoryComponentProps } from './types';\nimport { makeStyledComponent } from '../utils/styled';\n\nexport default function <P>(\n  Component: React.ComponentType<P>,\n  componentTheme?: ComponentTheme\n) {\n  return React.forwardRef(\n    ({ children, ...props }: P & FactoryComponentProps, ref: any) => {\n      const StyledComponent = makeStyledComponent(\n        Component as AnyStyledComponent\n      );\n      const calculatedProps = usePropsWithComponentTheme(componentTheme, props);\n      return (\n        <StyledComponent {...(calculatedProps as P)} ref={ref}>\n          {children}\n        </StyledComponent>\n      );\n    }\n  );\n}\n"]}