import React from 'react';
import type { ICheckboxProps } from './types';
declare const _default: React.MemoExoticComponent<React.ForwardRefExoticComponent<Pick<ICheckboxProps, "children" | "value" | "p" | "style" | "margin" | "m" | "marginTop" | "mt" | "marginRight" | "mr" | "marginBottom" | "mb" | "marginLeft" | "ml" | "marginX" | "mx" | "marginY" | "my" | "padding" | "paddingTop" | "pt" | "paddingRight" | "pr" | "paddingBottom" | "pb" | "paddingLeft" | "pl" | "paddingX" | "px" | "paddingY" | "py" | "border" | "borderWidth" | "borderStyle" | "borderColor" | "borderRadius" | "borderTop" | "borderTopWidth" | "borderTopStyle" | "borderTopColor" | "borderTopLeftRadius" | "borderTopRightRadius" | "borderRight" | "borderRightWidth" | "borderRightStyle" | "borderRightColor" | "borderBottom" | "borderBottomWidth" | "borderBottomStyle" | "borderBottomColor" | "borderBottomLeftRadius" | "borderBottomRightRadius" | "borderLeft" | "borderLeftWidth" | "borderLeftStyle" | "borderLeftColor" | "borderX" | "borderY" | "width" | "w" | "height" | "h" | "display" | "minWidth" | "minW" | "minH" | "minHeight" | "maxWidth" | "maxW" | "maxHeight" | "maxH" | "size" | "verticalAlign" | "overflow" | "overflowX" | "overflowY" | "alignItems" | "alignContent" | "justifyItems" | "justifyContent" | "flexWrap" | "flexDirection" | "flex" | "flexGrow" | "flexShrink" | "flexBasis" | "justifySelf" | "alignSelf" | "order" | "position" | "zIndex" | "top" | "right" | "bottom" | "left" | "bg" | "backgroundColor" | "colorScheme" | "isDisabled" | "opacity" | "outline" | "name" | "shadow" | "backgroundImage" | "backgroundBlendMode" | "backgroundSize" | "backgroundPosition" | "backgroundRepeat" | "backgroundAttachment" | "outlineWidth" | "bgImage" | "bgImg" | "bgBlendMode" | "bgSize" | "bgPosition" | "bgPos" | "bgRepeat" | "bgAttachment" | "borderTopRadius" | "borderLeftRadius" | "borderRightRadius" | "rounded" | "roundedTopLeft" | "roundedTopRight" | "roundedBottomLeft" | "roundedBottomRight" | "roundedTop" | "borderBottomRadius" | "roundedBottom" | "roundedLeft" | "roundedRight" | "flexDir" | "boxSize" | "bgColor" | "icon" | "inset" | "testID" | "transform" | "isIndeterminate" | "isChecked" | "isReadOnly" | "isInvalid" | "_dark" | "_light" | "_web" | "_ios" | "_android" | "background" | "textColor" | "appearance" | "boxSizing" | "cursor" | "float" | "objectFit" | "objectPosition" | "outlineColor" | "outlineOffset" | "outlineStyle" | "pointerEvents" | "resize" | "transformOrigin" | "userSelect" | "visibility" | "willChange" | "animation" | "onChange" | "safeArea" | "safeAreaY" | "safeAreaTop" | "safeAreaBottom" | "safeAreaLeft" | "safeAreaX" | "safeAreaRight" | "insetX" | "insetY" | "pos" | "d" | "onLayout" | "nativeID" | "accessible" | "accessibilityActions" | "accessibilityLabel" | "accessibilityRole" | "accessibilityState" | "accessibilityHint" | "accessibilityValue" | "onAccessibilityAction" | "accessibilityLiveRegion" | "importantForAccessibility" | "accessibilityElementsHidden" | "accessibilityViewIsModal" | "onAccessibilityEscape" | "onAccessibilityTap" | "onMagicTap" | "accessibilityIgnoresInvertColors" | "_hover" | "_text" | "hitSlop" | "removeClippedSubviews" | "collapsable" | "needsOffscreenAlphaCompositing" | "renderToHardwareTextureAndroid" | "focusable" | "shouldRasterizeIOS" | "isTVSelectable" | "hasTVPreferredFocus" | "tvParallaxProperties" | "tvParallaxShiftDistanceX" | "tvParallaxShiftDistanceY" | "tvParallaxTiltAngle" | "tvParallaxMagnification" | "onStartShouldSetResponder" | "onMoveShouldSetResponder" | "onResponderEnd" | "onResponderGrant" | "onResponderReject" | "onResponderMove" | "onResponderRelease" | "onResponderStart" | "onResponderTerminationRequest" | "onResponderTerminate" | "onStartShouldSetResponderCapture" | "onMoveShouldSetResponderCapture" | "onTouchStart" | "onTouchMove" | "onTouchEnd" | "onTouchCancel" | "onTouchEndCapture" | "wrapperRef" | "_focus" | "_disabled" | "_readOnly" | "_invalid" | "_pressed" | "id" | "defaultIsChecked" | "_checked" | "_unchecked" | "_icon" | "_interactionBox"> & React.RefAttributes<unknown>>>;
export default _default;
