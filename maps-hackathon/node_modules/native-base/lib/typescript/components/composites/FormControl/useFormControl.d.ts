import React from 'react';
import type { IFormControlProps } from './types';
export declare type IFormControlContext = Omit<ReturnType<typeof useFormControlProvider>, 'htmlProps'>;
export declare const FormControlContext: React.Context<{}>;
export declare function useFormControlProvider(props: IFormControlProps): {
    isRequired: boolean;
    isInvalid: boolean;
    isReadOnly: boolean;
    isDisabled: boolean;
    hasFeedbackText: boolean;
    setHasFeedbackText: React.Dispatch<React.SetStateAction<boolean>>;
    hasHelpText: boolean;
    setHasHelpText: React.Dispatch<React.SetStateAction<boolean>>;
    nativeID: string;
    labelId: string;
    feedbackId: string;
    helpTextId: string;
    htmlProps: {
        children?: any;
        _text?: import("../../primitives").ITextProps | undefined;
        bg?: import("../../types").ResponsiveValue<"contrastThreshold" | "white" | "black" | "lightText" | "darkText" | "dark.50" | "dark.100" | "dark.200" | "dark.300" | "dark.400" | "dark.500" | "dark.600" | "dark.700" | "dark.800" | "dark.900" | "rose.50" | "rose.100" | "rose.200" | "rose.300" | "rose.400" | "rose.500" | "rose.600" | "rose.700" | "rose.800" | "rose.900" | "pink.50" | "pink.100" | "pink.200" | "pink.300" | "pink.400" | "pink.500" | "pink.600" | "pink.700" | "pink.800" | "pink.900" | "fuchsia.50" | "fuchsia.100" | "fuchsia.200" | "fuchsia.300" | "fuchsia.400" | "fuchsia.500" | "fuchsia.600" | "fuchsia.700" | "fuchsia.800" | "fuchsia.900" | "purple.50" | "purple.100" | "purple.200" | "purple.300" | "purple.400" | "purple.500" | "purple.600" | "purple.700" | "purple.800" | "purple.900" | "violet.50" | "violet.100" | "violet.200" | "violet.300" | "violet.400" | "violet.500" | "violet.600" | "violet.700" | "violet.800" | "violet.900" | "indigo.50" | "indigo.100" | "indigo.200" | "indigo.300" | "indigo.400" | "indigo.500" | "indigo.600" | "indigo.700" | "indigo.800" | "indigo.900" | "blue.50" | "blue.100" | "blue.200" | "blue.300" | "blue.400" | "blue.500" | "blue.600" | "blue.700" | "blue.800" | "blue.900" | "lightBlue.50" | "lightBlue.100" | "lightBlue.200" | "lightBlue.300" | "lightBlue.400" | "lightBlue.500" | "lightBlue.600" | "lightBlue.700" | "lightBlue.800" | "lightBlue.900" | "darkBlue.50" | "darkBlue.100" | "darkBlue.200" | "darkBlue.300" | "darkBlue.400" | "darkBlue.500" | "darkBlue.600" | "darkBlue.700" | "darkBlue.800" | "darkBlue.900" | "cyan.50" | "cyan.100" | "cyan.200" | "cyan.300" | "cyan.400" | "cyan.500" | "cyan.600" | "cyan.700" | "cyan.800" | "cyan.900" | "teal.50" | "teal.100" | "teal.200" | "teal.300" | "teal.400" | "teal.500" | "teal.600" | "teal.700" | "teal.800" | "teal.900" | "emerald.50" | "emerald.100" | "emerald.200" | "emerald.300" | "emerald.400" | "emerald.500" | "emerald.600" | "emerald.700" | "emerald.800" | "emerald.900" | "green.50" | "green.100" | "green.200" | "green.300" | "green.400" | "green.500" | "green.600" | "green.700" | "green.800" | "green.900" | "lime.50" | "lime.100" | "lime.200" | "lime.300" | "lime.400" | "lime.500" | "lime.600" | "lime.700" | "lime.800" | "lime.900" | "yellow.50" | "yellow.100" | "yellow.200" | "yellow.300" | "yellow.400" | "yellow.500" | "yellow.600" | "yellow.700" | "yellow.800" | "yellow.900" | "amber.50" | "amber.100" | "amber.200" | "amber.300" | "amber.400" | "amber.500" | "amber.600" | "amber.700" | "amber.800" | "amber.900" | "orange.50" | "orange.100" | "orange.200" | "orange.300" | "orange.400" | "orange.500" | "orange.600" | "orange.700" | "orange.800" | "orange.900" | "red.50" | "red.100" | "red.200" | "red.300" | "red.400" | "red.500" | "red.600" | "red.700" | "red.800" | "red.900" | "warmGray.50" | "warmGray.100" | "warmGray.200" | "warmGray.300" | "warmGray.400" | "warmGray.500" | "warmGray.600" | "warmGray.700" | "warmGray.800" | "warmGray.900" | "trueGray.50" | "trueGray.100" | "trueGray.200" | "trueGray.300" | "trueGray.400" | "trueGray.500" | "trueGray.600" | "trueGray.700" | "trueGray.800" | "trueGray.900" | "gray.50" | "gray.100" | "gray.200" | "gray.300" | "gray.400" | "gray.500" | "gray.600" | "gray.700" | "gray.800" | "gray.900" | "coolGray.50" | "coolGray.100" | "coolGray.200" | "coolGray.300" | "coolGray.400" | "coolGray.500" | "coolGray.600" | "coolGray.700" | "coolGray.800" | "coolGray.900" | "blueGray.50" | "blueGray.100" | "blueGray.200" | "blueGray.300" | "blueGray.400" | "blueGray.500" | "blueGray.600" | "blueGray.700" | "blueGray.800" | "blueGray.900" | (string & {}) | import("../../primitives/Box/types").ILinearGradientProps>;
        background?: import("../../types").ResponsiveValue<"contrastThreshold" | "white" | "black" | "lightText" | "darkText" | "dark.50" | "dark.100" | "dark.200" | "dark.300" | "dark.400" | "dark.500" | "dark.600" | "dark.700" | "dark.800" | "dark.900" | "rose.50" | "rose.100" | "rose.200" | "rose.300" | "rose.400" | "rose.500" | "rose.600" | "rose.700" | "rose.800" | "rose.900" | "pink.50" | "pink.100" | "pink.200" | "pink.300" | "pink.400" | "pink.500" | "pink.600" | "pink.700" | "pink.800" | "pink.900" | "fuchsia.50" | "fuchsia.100" | "fuchsia.200" | "fuchsia.300" | "fuchsia.400" | "fuchsia.500" | "fuchsia.600" | "fuchsia.700" | "fuchsia.800" | "fuchsia.900" | "purple.50" | "purple.100" | "purple.200" | "purple.300" | "purple.400" | "purple.500" | "purple.600" | "purple.700" | "purple.800" | "purple.900" | "violet.50" | "violet.100" | "violet.200" | "violet.300" | "violet.400" | "violet.500" | "violet.600" | "violet.700" | "violet.800" | "violet.900" | "indigo.50" | "indigo.100" | "indigo.200" | "indigo.300" | "indigo.400" | "indigo.500" | "indigo.600" | "indigo.700" | "indigo.800" | "indigo.900" | "blue.50" | "blue.100" | "blue.200" | "blue.300" | "blue.400" | "blue.500" | "blue.600" | "blue.700" | "blue.800" | "blue.900" | "lightBlue.50" | "lightBlue.100" | "lightBlue.200" | "lightBlue.300" | "lightBlue.400" | "lightBlue.500" | "lightBlue.600" | "lightBlue.700" | "lightBlue.800" | "lightBlue.900" | "darkBlue.50" | "darkBlue.100" | "darkBlue.200" | "darkBlue.300" | "darkBlue.400" | "darkBlue.500" | "darkBlue.600" | "darkBlue.700" | "darkBlue.800" | "darkBlue.900" | "cyan.50" | "cyan.100" | "cyan.200" | "cyan.300" | "cyan.400" | "cyan.500" | "cyan.600" | "cyan.700" | "cyan.800" | "cyan.900" | "teal.50" | "teal.100" | "teal.200" | "teal.300" | "teal.400" | "teal.500" | "teal.600" | "teal.700" | "teal.800" | "teal.900" | "emerald.50" | "emerald.100" | "emerald.200" | "emerald.300" | "emerald.400" | "emerald.500" | "emerald.600" | "emerald.700" | "emerald.800" | "emerald.900" | "green.50" | "green.100" | "green.200" | "green.300" | "green.400" | "green.500" | "green.600" | "green.700" | "green.800" | "green.900" | "lime.50" | "lime.100" | "lime.200" | "lime.300" | "lime.400" | "lime.500" | "lime.600" | "lime.700" | "lime.800" | "lime.900" | "yellow.50" | "yellow.100" | "yellow.200" | "yellow.300" | "yellow.400" | "yellow.500" | "yellow.600" | "yellow.700" | "yellow.800" | "yellow.900" | "amber.50" | "amber.100" | "amber.200" | "amber.300" | "amber.400" | "amber.500" | "amber.600" | "amber.700" | "amber.800" | "amber.900" | "orange.50" | "orange.100" | "orange.200" | "orange.300" | "orange.400" | "orange.500" | "orange.600" | "orange.700" | "orange.800" | "orange.900" | "red.50" | "red.100" | "red.200" | "red.300" | "red.400" | "red.500" | "red.600" | "red.700" | "red.800" | "red.900" | "warmGray.50" | "warmGray.100" | "warmGray.200" | "warmGray.300" | "warmGray.400" | "warmGray.500" | "warmGray.600" | "warmGray.700" | "warmGray.800" | "warmGray.900" | "trueGray.50" | "trueGray.100" | "trueGray.200" | "trueGray.300" | "trueGray.400" | "trueGray.500" | "trueGray.600" | "trueGray.700" | "trueGray.800" | "trueGray.900" | "gray.50" | "gray.100" | "gray.200" | "gray.300" | "gray.400" | "gray.500" | "gray.600" | "gray.700" | "gray.800" | "gray.900" | "coolGray.50" | "coolGray.100" | "coolGray.200" | "coolGray.300" | "coolGray.400" | "coolGray.500" | "coolGray.600" | "coolGray.700" | "coolGray.800" | "coolGray.900" | "blueGray.50" | "blueGray.100" | "blueGray.200" | "blueGray.300" | "blueGray.400" | "blueGray.500" | "blueGray.600" | "blueGray.700" | "blueGray.800" | "blueGray.900" | (string & {}) | import("../../primitives/Box/types").ILinearGradientProps>;
        bgColor?: import("../../types").ResponsiveValue<"contrastThreshold" | "white" | "black" | "lightText" | "darkText" | "dark.50" | "dark.100" | "dark.200" | "dark.300" | "dark.400" | "dark.500" | "dark.600" | "dark.700" | "dark.800" | "dark.900" | "rose.50" | "rose.100" | "rose.200" | "rose.300" | "rose.400" | "rose.500" | "rose.600" | "rose.700" | "rose.800" | "rose.900" | "pink.50" | "pink.100" | "pink.200" | "pink.300" | "pink.400" | "pink.500" | "pink.600" | "pink.700" | "pink.800" | "pink.900" | "fuchsia.50" | "fuchsia.100" | "fuchsia.200" | "fuchsia.300" | "fuchsia.400" | "fuchsia.500" | "fuchsia.600" | "fuchsia.700" | "fuchsia.800" | "fuchsia.900" | "purple.50" | "purple.100" | "purple.200" | "purple.300" | "purple.400" | "purple.500" | "purple.600" | "purple.700" | "purple.800" | "purple.900" | "violet.50" | "violet.100" | "violet.200" | "violet.300" | "violet.400" | "violet.500" | "violet.600" | "violet.700" | "violet.800" | "violet.900" | "indigo.50" | "indigo.100" | "indigo.200" | "indigo.300" | "indigo.400" | "indigo.500" | "indigo.600" | "indigo.700" | "indigo.800" | "indigo.900" | "blue.50" | "blue.100" | "blue.200" | "blue.300" | "blue.400" | "blue.500" | "blue.600" | "blue.700" | "blue.800" | "blue.900" | "lightBlue.50" | "lightBlue.100" | "lightBlue.200" | "lightBlue.300" | "lightBlue.400" | "lightBlue.500" | "lightBlue.600" | "lightBlue.700" | "lightBlue.800" | "lightBlue.900" | "darkBlue.50" | "darkBlue.100" | "darkBlue.200" | "darkBlue.300" | "darkBlue.400" | "darkBlue.500" | "darkBlue.600" | "darkBlue.700" | "darkBlue.800" | "darkBlue.900" | "cyan.50" | "cyan.100" | "cyan.200" | "cyan.300" | "cyan.400" | "cyan.500" | "cyan.600" | "cyan.700" | "cyan.800" | "cyan.900" | "teal.50" | "teal.100" | "teal.200" | "teal.300" | "teal.400" | "teal.500" | "teal.600" | "teal.700" | "teal.800" | "teal.900" | "emerald.50" | "emerald.100" | "emerald.200" | "emerald.300" | "emerald.400" | "emerald.500" | "emerald.600" | "emerald.700" | "emerald.800" | "emerald.900" | "green.50" | "green.100" | "green.200" | "green.300" | "green.400" | "green.500" | "green.600" | "green.700" | "green.800" | "green.900" | "lime.50" | "lime.100" | "lime.200" | "lime.300" | "lime.400" | "lime.500" | "lime.600" | "lime.700" | "lime.800" | "lime.900" | "yellow.50" | "yellow.100" | "yellow.200" | "yellow.300" | "yellow.400" | "yellow.500" | "yellow.600" | "yellow.700" | "yellow.800" | "yellow.900" | "amber.50" | "amber.100" | "amber.200" | "amber.300" | "amber.400" | "amber.500" | "amber.600" | "amber.700" | "amber.800" | "amber.900" | "orange.50" | "orange.100" | "orange.200" | "orange.300" | "orange.400" | "orange.500" | "orange.600" | "orange.700" | "orange.800" | "orange.900" | "red.50" | "red.100" | "red.200" | "red.300" | "red.400" | "red.500" | "red.600" | "red.700" | "red.800" | "red.900" | "warmGray.50" | "warmGray.100" | "warmGray.200" | "warmGray.300" | "warmGray.400" | "warmGray.500" | "warmGray.600" | "warmGray.700" | "warmGray.800" | "warmGray.900" | "trueGray.50" | "trueGray.100" | "trueGray.200" | "trueGray.300" | "trueGray.400" | "trueGray.500" | "trueGray.600" | "trueGray.700" | "trueGray.800" | "trueGray.900" | "gray.50" | "gray.100" | "gray.200" | "gray.300" | "gray.400" | "gray.500" | "gray.600" | "gray.700" | "gray.800" | "gray.900" | "coolGray.50" | "coolGray.100" | "coolGray.200" | "coolGray.300" | "coolGray.400" | "coolGray.500" | "coolGray.600" | "coolGray.700" | "coolGray.800" | "coolGray.900" | "blueGray.50" | "blueGray.100" | "blueGray.200" | "blueGray.300" | "blueGray.400" | "blueGray.500" | "blueGray.600" | "blueGray.700" | "blueGray.800" | "blueGray.900" | (string & {}) | import("../../primitives/Box/types").ILinearGradientProps>;
        backgroundColor?: import("../../types").ResponsiveValue<"contrastThreshold" | "white" | "black" | "lightText" | "darkText" | "dark.50" | "dark.100" | "dark.200" | "dark.300" | "dark.400" | "dark.500" | "dark.600" | "dark.700" | "dark.800" | "dark.900" | "rose.50" | "rose.100" | "rose.200" | "rose.300" | "rose.400" | "rose.500" | "rose.600" | "rose.700" | "rose.800" | "rose.900" | "pink.50" | "pink.100" | "pink.200" | "pink.300" | "pink.400" | "pink.500" | "pink.600" | "pink.700" | "pink.800" | "pink.900" | "fuchsia.50" | "fuchsia.100" | "fuchsia.200" | "fuchsia.300" | "fuchsia.400" | "fuchsia.500" | "fuchsia.600" | "fuchsia.700" | "fuchsia.800" | "fuchsia.900" | "purple.50" | "purple.100" | "purple.200" | "purple.300" | "purple.400" | "purple.500" | "purple.600" | "purple.700" | "purple.800" | "purple.900" | "violet.50" | "violet.100" | "violet.200" | "violet.300" | "violet.400" | "violet.500" | "violet.600" | "violet.700" | "violet.800" | "violet.900" | "indigo.50" | "indigo.100" | "indigo.200" | "indigo.300" | "indigo.400" | "indigo.500" | "indigo.600" | "indigo.700" | "indigo.800" | "indigo.900" | "blue.50" | "blue.100" | "blue.200" | "blue.300" | "blue.400" | "blue.500" | "blue.600" | "blue.700" | "blue.800" | "blue.900" | "lightBlue.50" | "lightBlue.100" | "lightBlue.200" | "lightBlue.300" | "lightBlue.400" | "lightBlue.500" | "lightBlue.600" | "lightBlue.700" | "lightBlue.800" | "lightBlue.900" | "darkBlue.50" | "darkBlue.100" | "darkBlue.200" | "darkBlue.300" | "darkBlue.400" | "darkBlue.500" | "darkBlue.600" | "darkBlue.700" | "darkBlue.800" | "darkBlue.900" | "cyan.50" | "cyan.100" | "cyan.200" | "cyan.300" | "cyan.400" | "cyan.500" | "cyan.600" | "cyan.700" | "cyan.800" | "cyan.900" | "teal.50" | "teal.100" | "teal.200" | "teal.300" | "teal.400" | "teal.500" | "teal.600" | "teal.700" | "teal.800" | "teal.900" | "emerald.50" | "emerald.100" | "emerald.200" | "emerald.300" | "emerald.400" | "emerald.500" | "emerald.600" | "emerald.700" | "emerald.800" | "emerald.900" | "green.50" | "green.100" | "green.200" | "green.300" | "green.400" | "green.500" | "green.600" | "green.700" | "green.800" | "green.900" | "lime.50" | "lime.100" | "lime.200" | "lime.300" | "lime.400" | "lime.500" | "lime.600" | "lime.700" | "lime.800" | "lime.900" | "yellow.50" | "yellow.100" | "yellow.200" | "yellow.300" | "yellow.400" | "yellow.500" | "yellow.600" | "yellow.700" | "yellow.800" | "yellow.900" | "amber.50" | "amber.100" | "amber.200" | "amber.300" | "amber.400" | "amber.500" | "amber.600" | "amber.700" | "amber.800" | "amber.900" | "orange.50" | "orange.100" | "orange.200" | "orange.300" | "orange.400" | "orange.500" | "orange.600" | "orange.700" | "orange.800" | "orange.900" | "red.50" | "red.100" | "red.200" | "red.300" | "red.400" | "red.500" | "red.600" | "red.700" | "red.800" | "red.900" | "warmGray.50" | "warmGray.100" | "warmGray.200" | "warmGray.300" | "warmGray.400" | "warmGray.500" | "warmGray.600" | "warmGray.700" | "warmGray.800" | "warmGray.900" | "trueGray.50" | "trueGray.100" | "trueGray.200" | "trueGray.300" | "trueGray.400" | "trueGray.500" | "trueGray.600" | "trueGray.700" | "trueGray.800" | "trueGray.900" | "gray.50" | "gray.100" | "gray.200" | "gray.300" | "gray.400" | "gray.500" | "gray.600" | "gray.700" | "gray.800" | "gray.900" | "coolGray.50" | "coolGray.100" | "coolGray.200" | "coolGray.300" | "coolGray.400" | "coolGray.500" | "coolGray.600" | "coolGray.700" | "coolGray.800" | "coolGray.900" | "blueGray.50" | "blueGray.100" | "blueGray.200" | "blueGray.300" | "blueGray.400" | "blueGray.500" | "blueGray.600" | "blueGray.700" | "blueGray.800" | "blueGray.900" | (string & {}) | import("../../primitives/Box/types").ILinearGradientProps>;
        hitSlop?: import("react-native").Insets | undefined;
        onLayout?: ((event: import("react-native").LayoutChangeEvent) => void) | undefined;
        pointerEvents?: "none" | "auto" | "box-none" | "box-only" | undefined;
        removeClippedSubviews?: boolean | undefined;
        style?: import("react-native").StyleProp<import("react-native").ViewStyle>;
        testID?: string | undefined;
        collapsable?: boolean | undefined;
        needsOffscreenAlphaCompositing?: boolean | undefined;
        renderToHardwareTextureAndroid?: boolean | undefined;
        focusable?: boolean | undefined;
        shouldRasterizeIOS?: boolean | undefined;
        isTVSelectable?: boolean | undefined;
        hasTVPreferredFocus?: boolean | undefined;
        tvParallaxProperties?: import("react-native").TVParallaxProperties | undefined;
        tvParallaxShiftDistanceX?: number | undefined;
        tvParallaxShiftDistanceY?: number | undefined;
        tvParallaxTiltAngle?: number | undefined;
        tvParallaxMagnification?: number | undefined;
        onStartShouldSetResponder?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onMoveShouldSetResponder?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onResponderEnd?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderGrant?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderReject?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderMove?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderRelease?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderStart?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onResponderTerminationRequest?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onResponderTerminate?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onStartShouldSetResponderCapture?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onMoveShouldSetResponderCapture?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
        onTouchStart?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onTouchMove?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onTouchEnd?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onTouchCancel?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        onTouchEndCapture?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
        accessible?: boolean | undefined;
        accessibilityActions?: readonly Readonly<{
            name: string;
            label?: string | undefined;
        }>[] | undefined;
        accessibilityLabel?: string | undefined;
        accessibilityRole?: import("react-native").AccessibilityRole | undefined;
        accessibilityState?: import("react-native").AccessibilityState | undefined;
        accessibilityHint?: string | undefined;
        accessibilityValue?: import("react-native").AccessibilityValue | undefined;
        onAccessibilityAction?: ((event: import("react-native").AccessibilityActionEvent) => void) | undefined;
        accessibilityLiveRegion?: "none" | "polite" | "assertive" | undefined;
        importantForAccessibility?: "auto" | "no" | "yes" | "no-hide-descendants" | undefined;
        accessibilityElementsHidden?: boolean | undefined;
        accessibilityViewIsModal?: boolean | undefined;
        onAccessibilityEscape?: (() => void) | undefined;
        onAccessibilityTap?: (() => void) | undefined;
        onMagicTap?: (() => void) | undefined;
        accessibilityIgnoresInvertColors?: boolean | undefined;
        opacity?: import("styled-system").ResponsiveValue<import("csstype").Property.Opacity, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        textColor?: import("../../types").ResponsiveValue<"contrastThreshold" | "lightText" | "darkText" | "dark.50" | "dark.100" | "dark.200" | "dark.300" | "dark.400" | "dark.500" | "dark.600" | "dark.700" | "dark.800" | "dark.900" | "rose.50" | "rose.100" | "rose.200" | "rose.300" | "rose.400" | "rose.500" | "rose.600" | "rose.700" | "rose.800" | "rose.900" | "pink.50" | "pink.100" | "pink.200" | "pink.300" | "pink.400" | "pink.500" | "pink.600" | "pink.700" | "pink.800" | "pink.900" | "fuchsia.50" | "fuchsia.100" | "fuchsia.200" | "fuchsia.300" | "fuchsia.400" | "fuchsia.500" | "fuchsia.600" | "fuchsia.700" | "fuchsia.800" | "fuchsia.900" | "purple.50" | "purple.100" | "purple.200" | "purple.300" | "purple.400" | "purple.500" | "purple.600" | "purple.700" | "purple.800" | "purple.900" | "violet.50" | "violet.100" | "violet.200" | "violet.300" | "violet.400" | "violet.500" | "violet.600" | "violet.700" | "violet.800" | "violet.900" | "indigo.50" | "indigo.100" | "indigo.200" | "indigo.300" | "indigo.400" | "indigo.500" | "indigo.600" | "indigo.700" | "indigo.800" | "indigo.900" | "blue.50" | "blue.100" | "blue.200" | "blue.300" | "blue.400" | "blue.500" | "blue.600" | "blue.700" | "blue.800" | "blue.900" | "lightBlue.50" | "lightBlue.100" | "lightBlue.200" | "lightBlue.300" | "lightBlue.400" | "lightBlue.500" | "lightBlue.600" | "lightBlue.700" | "lightBlue.800" | "lightBlue.900" | "darkBlue.50" | "darkBlue.100" | "darkBlue.200" | "darkBlue.300" | "darkBlue.400" | "darkBlue.500" | "darkBlue.600" | "darkBlue.700" | "darkBlue.800" | "darkBlue.900" | "cyan.50" | "cyan.100" | "cyan.200" | "cyan.300" | "cyan.400" | "cyan.500" | "cyan.600" | "cyan.700" | "cyan.800" | "cyan.900" | "teal.50" | "teal.100" | "teal.200" | "teal.300" | "teal.400" | "teal.500" | "teal.600" | "teal.700" | "teal.800" | "teal.900" | "emerald.50" | "emerald.100" | "emerald.200" | "emerald.300" | "emerald.400" | "emerald.500" | "emerald.600" | "emerald.700" | "emerald.800" | "emerald.900" | "green.50" | "green.100" | "green.200" | "green.300" | "green.400" | "green.500" | "green.600" | "green.700" | "green.800" | "green.900" | "lime.50" | "lime.100" | "lime.200" | "lime.300" | "lime.400" | "lime.500" | "lime.600" | "lime.700" | "lime.800" | "lime.900" | "yellow.50" | "yellow.100" | "yellow.200" | "yellow.300" | "yellow.400" | "yellow.500" | "yellow.600" | "yellow.700" | "yellow.800" | "yellow.900" | "amber.50" | "amber.100" | "amber.200" | "amber.300" | "amber.400" | "amber.500" | "amber.600" | "amber.700" | "amber.800" | "amber.900" | "orange.50" | "orange.100" | "orange.200" | "orange.300" | "orange.400" | "orange.500" | "orange.600" | "orange.700" | "orange.800" | "orange.900" | "red.50" | "red.100" | "red.200" | "red.300" | "red.400" | "red.500" | "red.600" | "red.700" | "red.800" | "red.900" | "warmGray.50" | "warmGray.100" | "warmGray.200" | "warmGray.300" | "warmGray.400" | "warmGray.500" | "warmGray.600" | "warmGray.700" | "warmGray.800" | "warmGray.900" | "trueGray.50" | "trueGray.100" | "trueGray.200" | "trueGray.300" | "trueGray.400" | "trueGray.500" | "trueGray.600" | "trueGray.700" | "trueGray.800" | "trueGray.900" | "gray.50" | "gray.100" | "gray.200" | "gray.300" | "gray.400" | "gray.500" | "gray.600" | "gray.700" | "gray.800" | "gray.900" | "coolGray.50" | "coolGray.100" | "coolGray.200" | "coolGray.300" | "coolGray.400" | "coolGray.500" | "coolGray.600" | "coolGray.700" | "coolGray.800" | "coolGray.900" | "blueGray.50" | "blueGray.100" | "blueGray.200" | "blueGray.300" | "blueGray.400" | "blueGray.500" | "blueGray.600" | "blueGray.700" | "blueGray.800" | "blueGray.900" | import("csstype").Property.Color>;
        m?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        margin?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        mt?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        marginTop?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        mr?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        marginRight?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        mb?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>; /**
         * Track whether the `FormErrorMessage` has been rendered.
         * We use this to append its id the the `aria-describedby` of the `input`.
         */
        marginBottom?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        ml?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        marginLeft?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        mx?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        marginX?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        my?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        marginY?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        p?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        padding?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        pt?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        paddingTop?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        pr?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        paddingRight?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        pb?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        paddingBottom?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        pl?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        paddingLeft?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        px?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        paddingX?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        py?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        paddingY?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
        d?: import("../../types").ResponsiveValue<import("csstype").Property.Display>;
        w?: import("../../types").ResponsiveValue<import("csstype").Property.Width<string | number>>;
        boxSize?: import("../../types").ResponsiveValue<import("csstype").Property.Width<string | number>>;
        maxW?: import("../../types").ResponsiveValue<import("csstype").Property.MaxWidth<string | number>>;
        minW?: import("../../types").ResponsiveValue<import("csstype").Property.MinWidth<string | number>>;
        h?: import("../../types").ResponsiveValue<import("csstype").Property.Height<string | number>>;
        maxH?: import("../../types").ResponsiveValue<import("csstype").Property.MaxHeight<string | number>>;
        minH?: import("../../types").ResponsiveValue<import("csstype").Property.MinHeight<string | number>>;
        boxSizing?: import("../../types").ResponsiveValue<import("csstype").Property.BoxSizing>;
        width?: import("styled-system").ResponsiveValue<import("csstype").Property.Width<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        height?: import("styled-system").ResponsiveValue<import("csstype").Property.Height<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        minWidth?: import("styled-system").ResponsiveValue<import("csstype").Property.MinWidth<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        minHeight?: import("styled-system").ResponsiveValue<import("csstype").Property.MinHeight<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        maxWidth?: import("styled-system").ResponsiveValue<import("csstype").Property.MaxWidth<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        maxHeight?: import("styled-system").ResponsiveValue<import("csstype").Property.MaxHeight<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        display?: import("styled-system").ResponsiveValue<import("csstype").Property.Display, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        verticalAlign?: import("styled-system").ResponsiveValue<import("csstype").Property.VerticalAlign<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        size?: import("styled-system").ResponsiveValue<import("csstype").Property.Height<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        overflow?: import("styled-system").ResponsiveValue<import("csstype").Property.Overflow, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        overflowX?: import("styled-system").ResponsiveValue<import("csstype").Property.OverflowX, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        overflowY?: import("styled-system").ResponsiveValue<import("csstype").Property.OverflowY, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        flexDir?: import("../../types").ResponsiveValue<import("csstype").Property.FlexDirection>;
        alignItems?: import("styled-system").ResponsiveValue<import("csstype").Property.AlignItems, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        alignContent?: import("styled-system").ResponsiveValue<import("csstype").Property.AlignContent, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        justifyItems?: import("styled-system").ResponsiveValue<import("csstype").Property.JustifyItems, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        justifyContent?: import("styled-system").ResponsiveValue<import("csstype").Property.JustifyContent, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        flexWrap?: import("styled-system").ResponsiveValue<import("csstype").Property.FlexWrap, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        flexDirection?: import("styled-system").ResponsiveValue<import("csstype").Property.FlexDirection, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        flex?: import("styled-system").ResponsiveValue<import("csstype").Property.Flex<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        flexGrow?: import("styled-system").ResponsiveValue<import("csstype").Property.FlexGrow, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        flexShrink?: import("styled-system").ResponsiveValue<import("csstype").Property.FlexShrink, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        flexBasis?: import("styled-system").ResponsiveValue<import("csstype").Property.FlexBasis<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        justifySelf?: import("styled-system").ResponsiveValue<import("csstype").Property.JustifySelf, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        alignSelf?: import("styled-system").ResponsiveValue<import("csstype").Property.AlignSelf, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        order?: import("styled-system").ResponsiveValue<import("csstype").Property.Order, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        inset?: import("../../types").ResponsiveValue<import("csstype").Property.Left<string | number>>;
        insetX?: import("../../types").ResponsiveValue<import("csstype").Property.Left<string | number>>;
        insetY?: import("../../types").ResponsiveValue<import("csstype").Property.Left<string | number>>;
        pos?: import("../../types").ResponsiveValue<import("csstype").Property.Position>;
        position?: import("styled-system").ResponsiveValue<import("csstype").Property.Position, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        zIndex?: import("styled-system").ResponsiveValue<import("csstype").Property.ZIndex, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        top?: import("styled-system").ResponsiveValue<import("csstype").Property.Top<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        right?: import("styled-system").ResponsiveValue<import("csstype").Property.Right<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        bottom?: import("styled-system").ResponsiveValue<import("csstype").Property.Bottom<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        left?: import("styled-system").ResponsiveValue<import("csstype").Property.Left<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        rounded?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        roundedTopLeft?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        roundedTopRight?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        borderTopLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        borderTopRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        roundedBottomLeft?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        roundedBottomRight?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        borderBottomLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        borderBottomRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        borderTopRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        roundedTop?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        borderBottomRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        roundedBottom?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        borderLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        roundedLeft?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        borderRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        roundedRight?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
        borderWidth?: import("../../types").ResponsiveValue<"0" | "1" | "2" | "4" | "8" | import("csstype").Property.BorderWidth<number | (string & {})>>;
        borderTopWidth?: import("../../types").ResponsiveValue<"0" | "1" | "2" | "4" | "8" | import("csstype").Property.BorderWidth<number | (string & {})>>;
        borderBottomWidth?: import("../../types").ResponsiveValue<"0" | "1" | "2" | "4" | "8" | import("csstype").Property.BorderWidth<number | (string & {})>>;
        borderLeftWidth?: import("../../types").ResponsiveValue<"0" | "1" | "2" | "4" | "8" | import("csstype").Property.BorderWidth<number | (string & {})>>;
        borderRightWidth?: import("../../types").ResponsiveValue<"0" | "1" | "2" | "4" | "8" | import("csstype").Property.BorderWidth<number | (string & {})>>;
        border?: import("styled-system").ResponsiveValue<import("csstype").Property.Border<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderX?: import("styled-system").ResponsiveValue<import("csstype").Property.Border<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderY?: import("styled-system").ResponsiveValue<import("csstype").Property.Border<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderTopStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderTopStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderBottomStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderBottomStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderLeftStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderLeftStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderRightStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderRightStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderTopColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderBottomColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderLeftColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderRightColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderRadius?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderTop?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderTop<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderRight?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderRight<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderBottom?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderBottom<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        borderLeft?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderLeft<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
        animation?: import("../../types").ResponsiveValue<import("csstype").Property.Animation<string & {}>>;
        appearance?: import("../../types").ResponsiveValue<import("csstype").Property.Appearance>;
        visibility?: import("../../types").ResponsiveValue<import("csstype").Property.Visibility>;
        userSelect?: import("../../types").ResponsiveValue<import("csstype").Property.UserSelect>;
        cursor?: import("../../types").ResponsiveValue<import("csstype").Property.Cursor>;
        resize?: import("../../types").ResponsiveValue<import("csstype").Property.Resize>;
        objectFit?: import("../../types").ResponsiveValue<import("csstype").Property.ObjectFit>;
        objectPosition?: import("../../types").ResponsiveValue<import("csstype").Property.ObjectPosition<0 | (string & {})>>;
        float?: import("../../types").ResponsiveValue<import("csstype").Property.Float>;
        willChange?: import("../../types").ResponsiveValue<import("csstype").Property.WillChange>;
        outline?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<string | number>>;
        outlineOffset?: import("../../types").ResponsiveValue<import("csstype").Property.OutlineOffset<string | number>>;
        outlineColor?: import("../../types").ResponsiveValue<import("csstype").Property.OutlineColor>;
        outlineWidth?: import("../../types").ResponsiveValue<import("csstype").Property.OutlineWidth<string | number>>;
        outlineStyle?: import("../../types").ResponsiveValue<import("csstype").Property.OutlineStyle>;
        shadow?: import("../../types").ResponsiveValue<number | "0" | "1" | "2" | "4" | "8" | "3" | "5" | "6" | "7" | "9" | import("csstype").Property.BoxShadow>;
        backgroundImage?: import("csstype").Property.BackgroundImage | undefined;
        backgroundBlendMode?: import("csstype").Property.BackgroundBlendMode | undefined;
        backgroundSize?: import("csstype").Property.BackgroundSize<0 | (string & {})> | undefined;
        backgroundPosition?: import("csstype").Property.BackgroundPosition<0 | (string & {})> | undefined;
        backgroundRepeat?: import("csstype").Property.BackgroundRepeat | undefined;
        backgroundAttachment?: import("csstype").Property.BackgroundAttachment | undefined;
        bgImage?: import("csstype").Property.BackgroundImage | undefined;
        bgImg?: import("csstype").Property.BackgroundImage | undefined;
        bgBlendMode?: import("csstype").Property.BackgroundBlendMode | undefined;
        bgSize?: import("csstype").Property.BackgroundSize<0 | (string & {})> | undefined;
        bgPosition?: import("csstype").Property.BackgroundPosition<0 | (string & {})> | undefined;
        bgPos?: import("csstype").Property.BackgroundPosition<0 | (string & {})> | undefined;
        bgRepeat?: import("csstype").Property.BackgroundRepeat | undefined;
        bgAttachment?: import("csstype").Property.BackgroundAttachment | undefined;
        safeArea?: number | boolean | undefined;
        safeAreaX?: number | boolean | undefined;
        safeAreaY?: number | boolean | undefined;
        safeAreaTop?: number | boolean | undefined;
        safeAreaBottom?: number | boolean | undefined;
        safeAreaLeft?: number | boolean | undefined;
        safeAreaRight?: number | boolean | undefined;
        transform?: import("csstype").Property.Transform | undefined;
        transformOrigin?: import("csstype").Property.TransformOrigin<0 | (string & {})> | undefined;
        _web?: IFormControlProps | undefined;
        _ios?: IFormControlProps | undefined;
        _android?: IFormControlProps | undefined;
        _light?: IFormControlProps | undefined;
        _dark?: IFormControlProps | undefined;
    };
};
/**
 * React hook that provides the props that should be spread on to
 * input fields (`input`, `select`, `textarea`, etc.).
 *
 * It provides a convenient way to control a form fields, validation
 * and helper text.
 */
export declare function useFormControl(props: IFormControlProps): {
    nativeID: string;
    disabled: boolean;
    readOnly: boolean;
    required: boolean;
    accessibilityInvalid: boolean | undefined;
    accessibilityRequired: boolean | undefined;
    accessibilityReadOnly: boolean | undefined;
    accessibilityDescribedBy: string | undefined;
    children?: any;
    p?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    style?: import("react-native").StyleProp<import("react-native").ViewStyle>;
    margin?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    m?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    marginTop?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    mt?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    marginRight?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    mr?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    marginBottom?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    mb?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    marginLeft?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    ml?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    marginX?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    mx?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    marginY?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    my?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    padding?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    paddingTop?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    pt?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    paddingRight?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    pr?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    paddingBottom?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    pb?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    paddingLeft?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    pl?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    paddingX?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    px?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    paddingY?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    py?: import("../../types").ResponsiveValue<number | "px" | "0" | "1" | "2" | "4" | "8" | "full" | "3" | "5" | "6" | "7" | "9" | "0.5" | "1.5" | "2.5" | "3.5" | "10" | "12" | "16" | "20" | "24" | "32" | "40" | "48" | "56" | "64" | "72" | "80" | "96" | "1/2" | "1/3" | "2/3" | "1/4" | "2/4" | "3/4" | "1/5" | "2/5" | "3/5" | "4/5" | "1/6" | "2/6" | "3/6" | "4/6" | "5/6" | (string & {})>;
    border?: import("styled-system").ResponsiveValue<import("csstype").Property.Border<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderWidth?: import("../../types").ResponsiveValue<"0" | "1" | "2" | "4" | "8" | import("csstype").Property.BorderWidth<number | (string & {})>>;
    borderStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderRadius?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderTop?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderTop<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderTopWidth?: import("../../types").ResponsiveValue<"0" | "1" | "2" | "4" | "8" | import("csstype").Property.BorderWidth<number | (string & {})>>;
    borderTopStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderTopStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderTopColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderTopLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    borderTopRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    borderRight?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderRight<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderRightWidth?: import("../../types").ResponsiveValue<"0" | "1" | "2" | "4" | "8" | import("csstype").Property.BorderWidth<number | (string & {})>>;
    borderRightStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderRightStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderRightColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderBottom?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderBottom<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderBottomWidth?: import("../../types").ResponsiveValue<"0" | "1" | "2" | "4" | "8" | import("csstype").Property.BorderWidth<number | (string & {})>>;
    borderBottomStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderBottomStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderBottomColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderBottomLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    borderBottomRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    borderLeft?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderLeft<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderLeftWidth?: import("../../types").ResponsiveValue<"0" | "1" | "2" | "4" | "8" | import("csstype").Property.BorderWidth<number | (string & {})>>;
    borderLeftStyle?: import("styled-system").ResponsiveValue<import("csstype").Property.BorderLeftStyle, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderLeftColor?: import("styled-system").ResponsiveValue<string | number | symbol, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderX?: import("styled-system").ResponsiveValue<import("csstype").Property.Border<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    borderY?: import("styled-system").ResponsiveValue<import("csstype").Property.Border<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    width?: import("styled-system").ResponsiveValue<import("csstype").Property.Width<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    w?: import("../../types").ResponsiveValue<import("csstype").Property.Width<string | number>>;
    height?: import("styled-system").ResponsiveValue<import("csstype").Property.Height<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    h?: import("../../types").ResponsiveValue<import("csstype").Property.Height<string | number>>;
    display?: import("styled-system").ResponsiveValue<import("csstype").Property.Display, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    minWidth?: import("styled-system").ResponsiveValue<import("csstype").Property.MinWidth<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    minW?: import("../../types").ResponsiveValue<import("csstype").Property.MinWidth<string | number>>;
    minH?: import("../../types").ResponsiveValue<import("csstype").Property.MinHeight<string | number>>;
    minHeight?: import("styled-system").ResponsiveValue<import("csstype").Property.MinHeight<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    maxWidth?: import("styled-system").ResponsiveValue<import("csstype").Property.MaxWidth<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    maxW?: import("../../types").ResponsiveValue<import("csstype").Property.MaxWidth<string | number>>;
    maxHeight?: import("styled-system").ResponsiveValue<import("csstype").Property.MaxHeight<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    maxH?: import("../../types").ResponsiveValue<import("csstype").Property.MaxHeight<string | number>>;
    size?: import("styled-system").ResponsiveValue<import("csstype").Property.Height<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    verticalAlign?: import("styled-system").ResponsiveValue<import("csstype").Property.VerticalAlign<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    overflow?: import("styled-system").ResponsiveValue<import("csstype").Property.Overflow, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    overflowX?: import("styled-system").ResponsiveValue<import("csstype").Property.OverflowX, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    overflowY?: import("styled-system").ResponsiveValue<import("csstype").Property.OverflowY, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    alignItems?: import("styled-system").ResponsiveValue<import("csstype").Property.AlignItems, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    alignContent?: import("styled-system").ResponsiveValue<import("csstype").Property.AlignContent, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    justifyItems?: import("styled-system").ResponsiveValue<import("csstype").Property.JustifyItems, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    justifyContent?: import("styled-system").ResponsiveValue<import("csstype").Property.JustifyContent, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    flexWrap?: import("styled-system").ResponsiveValue<import("csstype").Property.FlexWrap, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    flexDirection?: import("styled-system").ResponsiveValue<import("csstype").Property.FlexDirection, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    flex?: import("styled-system").ResponsiveValue<import("csstype").Property.Flex<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    flexGrow?: import("styled-system").ResponsiveValue<import("csstype").Property.FlexGrow, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    flexShrink?: import("styled-system").ResponsiveValue<import("csstype").Property.FlexShrink, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    flexBasis?: import("styled-system").ResponsiveValue<import("csstype").Property.FlexBasis<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    justifySelf?: import("styled-system").ResponsiveValue<import("csstype").Property.JustifySelf, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    alignSelf?: import("styled-system").ResponsiveValue<import("csstype").Property.AlignSelf, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    order?: import("styled-system").ResponsiveValue<import("csstype").Property.Order, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    position?: import("styled-system").ResponsiveValue<import("csstype").Property.Position, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    zIndex?: import("styled-system").ResponsiveValue<import("csstype").Property.ZIndex, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    top?: import("styled-system").ResponsiveValue<import("csstype").Property.Top<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    right?: import("styled-system").ResponsiveValue<import("csstype").Property.Right<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    bottom?: import("styled-system").ResponsiveValue<import("csstype").Property.Bottom<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    left?: import("styled-system").ResponsiveValue<import("csstype").Property.Left<import("styled-system").TLengthStyledSystem>, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    bg?: import("../../types").ResponsiveValue<"contrastThreshold" | "white" | "black" | "lightText" | "darkText" | "dark.50" | "dark.100" | "dark.200" | "dark.300" | "dark.400" | "dark.500" | "dark.600" | "dark.700" | "dark.800" | "dark.900" | "rose.50" | "rose.100" | "rose.200" | "rose.300" | "rose.400" | "rose.500" | "rose.600" | "rose.700" | "rose.800" | "rose.900" | "pink.50" | "pink.100" | "pink.200" | "pink.300" | "pink.400" | "pink.500" | "pink.600" | "pink.700" | "pink.800" | "pink.900" | "fuchsia.50" | "fuchsia.100" | "fuchsia.200" | "fuchsia.300" | "fuchsia.400" | "fuchsia.500" | "fuchsia.600" | "fuchsia.700" | "fuchsia.800" | "fuchsia.900" | "purple.50" | "purple.100" | "purple.200" | "purple.300" | "purple.400" | "purple.500" | "purple.600" | "purple.700" | "purple.800" | "purple.900" | "violet.50" | "violet.100" | "violet.200" | "violet.300" | "violet.400" | "violet.500" | "violet.600" | "violet.700" | "violet.800" | "violet.900" | "indigo.50" | "indigo.100" | "indigo.200" | "indigo.300" | "indigo.400" | "indigo.500" | "indigo.600" | "indigo.700" | "indigo.800" | "indigo.900" | "blue.50" | "blue.100" | "blue.200" | "blue.300" | "blue.400" | "blue.500" | "blue.600" | "blue.700" | "blue.800" | "blue.900" | "lightBlue.50" | "lightBlue.100" | "lightBlue.200" | "lightBlue.300" | "lightBlue.400" | "lightBlue.500" | "lightBlue.600" | "lightBlue.700" | "lightBlue.800" | "lightBlue.900" | "darkBlue.50" | "darkBlue.100" | "darkBlue.200" | "darkBlue.300" | "darkBlue.400" | "darkBlue.500" | "darkBlue.600" | "darkBlue.700" | "darkBlue.800" | "darkBlue.900" | "cyan.50" | "cyan.100" | "cyan.200" | "cyan.300" | "cyan.400" | "cyan.500" | "cyan.600" | "cyan.700" | "cyan.800" | "cyan.900" | "teal.50" | "teal.100" | "teal.200" | "teal.300" | "teal.400" | "teal.500" | "teal.600" | "teal.700" | "teal.800" | "teal.900" | "emerald.50" | "emerald.100" | "emerald.200" | "emerald.300" | "emerald.400" | "emerald.500" | "emerald.600" | "emerald.700" | "emerald.800" | "emerald.900" | "green.50" | "green.100" | "green.200" | "green.300" | "green.400" | "green.500" | "green.600" | "green.700" | "green.800" | "green.900" | "lime.50" | "lime.100" | "lime.200" | "lime.300" | "lime.400" | "lime.500" | "lime.600" | "lime.700" | "lime.800" | "lime.900" | "yellow.50" | "yellow.100" | "yellow.200" | "yellow.300" | "yellow.400" | "yellow.500" | "yellow.600" | "yellow.700" | "yellow.800" | "yellow.900" | "amber.50" | "amber.100" | "amber.200" | "amber.300" | "amber.400" | "amber.500" | "amber.600" | "amber.700" | "amber.800" | "amber.900" | "orange.50" | "orange.100" | "orange.200" | "orange.300" | "orange.400" | "orange.500" | "orange.600" | "orange.700" | "orange.800" | "orange.900" | "red.50" | "red.100" | "red.200" | "red.300" | "red.400" | "red.500" | "red.600" | "red.700" | "red.800" | "red.900" | "warmGray.50" | "warmGray.100" | "warmGray.200" | "warmGray.300" | "warmGray.400" | "warmGray.500" | "warmGray.600" | "warmGray.700" | "warmGray.800" | "warmGray.900" | "trueGray.50" | "trueGray.100" | "trueGray.200" | "trueGray.300" | "trueGray.400" | "trueGray.500" | "trueGray.600" | "trueGray.700" | "trueGray.800" | "trueGray.900" | "gray.50" | "gray.100" | "gray.200" | "gray.300" | "gray.400" | "gray.500" | "gray.600" | "gray.700" | "gray.800" | "gray.900" | "coolGray.50" | "coolGray.100" | "coolGray.200" | "coolGray.300" | "coolGray.400" | "coolGray.500" | "coolGray.600" | "coolGray.700" | "coolGray.800" | "coolGray.900" | "blueGray.50" | "blueGray.100" | "blueGray.200" | "blueGray.300" | "blueGray.400" | "blueGray.500" | "blueGray.600" | "blueGray.700" | "blueGray.800" | "blueGray.900" | (string & {}) | import("../../primitives/Box/types").ILinearGradientProps>;
    backgroundColor?: import("../../types").ResponsiveValue<"contrastThreshold" | "white" | "black" | "lightText" | "darkText" | "dark.50" | "dark.100" | "dark.200" | "dark.300" | "dark.400" | "dark.500" | "dark.600" | "dark.700" | "dark.800" | "dark.900" | "rose.50" | "rose.100" | "rose.200" | "rose.300" | "rose.400" | "rose.500" | "rose.600" | "rose.700" | "rose.800" | "rose.900" | "pink.50" | "pink.100" | "pink.200" | "pink.300" | "pink.400" | "pink.500" | "pink.600" | "pink.700" | "pink.800" | "pink.900" | "fuchsia.50" | "fuchsia.100" | "fuchsia.200" | "fuchsia.300" | "fuchsia.400" | "fuchsia.500" | "fuchsia.600" | "fuchsia.700" | "fuchsia.800" | "fuchsia.900" | "purple.50" | "purple.100" | "purple.200" | "purple.300" | "purple.400" | "purple.500" | "purple.600" | "purple.700" | "purple.800" | "purple.900" | "violet.50" | "violet.100" | "violet.200" | "violet.300" | "violet.400" | "violet.500" | "violet.600" | "violet.700" | "violet.800" | "violet.900" | "indigo.50" | "indigo.100" | "indigo.200" | "indigo.300" | "indigo.400" | "indigo.500" | "indigo.600" | "indigo.700" | "indigo.800" | "indigo.900" | "blue.50" | "blue.100" | "blue.200" | "blue.300" | "blue.400" | "blue.500" | "blue.600" | "blue.700" | "blue.800" | "blue.900" | "lightBlue.50" | "lightBlue.100" | "lightBlue.200" | "lightBlue.300" | "lightBlue.400" | "lightBlue.500" | "lightBlue.600" | "lightBlue.700" | "lightBlue.800" | "lightBlue.900" | "darkBlue.50" | "darkBlue.100" | "darkBlue.200" | "darkBlue.300" | "darkBlue.400" | "darkBlue.500" | "darkBlue.600" | "darkBlue.700" | "darkBlue.800" | "darkBlue.900" | "cyan.50" | "cyan.100" | "cyan.200" | "cyan.300" | "cyan.400" | "cyan.500" | "cyan.600" | "cyan.700" | "cyan.800" | "cyan.900" | "teal.50" | "teal.100" | "teal.200" | "teal.300" | "teal.400" | "teal.500" | "teal.600" | "teal.700" | "teal.800" | "teal.900" | "emerald.50" | "emerald.100" | "emerald.200" | "emerald.300" | "emerald.400" | "emerald.500" | "emerald.600" | "emerald.700" | "emerald.800" | "emerald.900" | "green.50" | "green.100" | "green.200" | "green.300" | "green.400" | "green.500" | "green.600" | "green.700" | "green.800" | "green.900" | "lime.50" | "lime.100" | "lime.200" | "lime.300" | "lime.400" | "lime.500" | "lime.600" | "lime.700" | "lime.800" | "lime.900" | "yellow.50" | "yellow.100" | "yellow.200" | "yellow.300" | "yellow.400" | "yellow.500" | "yellow.600" | "yellow.700" | "yellow.800" | "yellow.900" | "amber.50" | "amber.100" | "amber.200" | "amber.300" | "amber.400" | "amber.500" | "amber.600" | "amber.700" | "amber.800" | "amber.900" | "orange.50" | "orange.100" | "orange.200" | "orange.300" | "orange.400" | "orange.500" | "orange.600" | "orange.700" | "orange.800" | "orange.900" | "red.50" | "red.100" | "red.200" | "red.300" | "red.400" | "red.500" | "red.600" | "red.700" | "red.800" | "red.900" | "warmGray.50" | "warmGray.100" | "warmGray.200" | "warmGray.300" | "warmGray.400" | "warmGray.500" | "warmGray.600" | "warmGray.700" | "warmGray.800" | "warmGray.900" | "trueGray.50" | "trueGray.100" | "trueGray.200" | "trueGray.300" | "trueGray.400" | "trueGray.500" | "trueGray.600" | "trueGray.700" | "trueGray.800" | "trueGray.900" | "gray.50" | "gray.100" | "gray.200" | "gray.300" | "gray.400" | "gray.500" | "gray.600" | "gray.700" | "gray.800" | "gray.900" | "coolGray.50" | "coolGray.100" | "coolGray.200" | "coolGray.300" | "coolGray.400" | "coolGray.500" | "coolGray.600" | "coolGray.700" | "coolGray.800" | "coolGray.900" | "blueGray.50" | "blueGray.100" | "blueGray.200" | "blueGray.300" | "blueGray.400" | "blueGray.500" | "blueGray.600" | "blueGray.700" | "blueGray.800" | "blueGray.900" | (string & {}) | import("../../primitives/Box/types").ILinearGradientProps>;
    opacity?: import("styled-system").ResponsiveValue<import("csstype").Property.Opacity, Required<import("styled-system").Theme<import("styled-system").TLengthStyledSystem>>> | undefined;
    outline?: import("../../types").ResponsiveValue<import("csstype").Property.Outline<string | number>>;
    shadow?: import("../../types").ResponsiveValue<number | "0" | "1" | "2" | "4" | "8" | "3" | "5" | "6" | "7" | "9" | import("csstype").Property.BoxShadow>;
    backgroundImage?: import("csstype").Property.BackgroundImage | undefined;
    backgroundBlendMode?: import("csstype").Property.BackgroundBlendMode | undefined;
    backgroundSize?: import("csstype").Property.BackgroundSize<0 | (string & {})> | undefined;
    backgroundPosition?: import("csstype").Property.BackgroundPosition<0 | (string & {})> | undefined;
    backgroundRepeat?: import("csstype").Property.BackgroundRepeat | undefined;
    backgroundAttachment?: import("csstype").Property.BackgroundAttachment | undefined;
    outlineWidth?: import("../../types").ResponsiveValue<import("csstype").Property.OutlineWidth<string | number>>;
    bgImage?: import("csstype").Property.BackgroundImage | undefined;
    bgImg?: import("csstype").Property.BackgroundImage | undefined;
    bgBlendMode?: import("csstype").Property.BackgroundBlendMode | undefined;
    bgSize?: import("csstype").Property.BackgroundSize<0 | (string & {})> | undefined;
    bgPosition?: import("csstype").Property.BackgroundPosition<0 | (string & {})> | undefined;
    bgPos?: import("csstype").Property.BackgroundPosition<0 | (string & {})> | undefined;
    bgRepeat?: import("csstype").Property.BackgroundRepeat | undefined;
    bgAttachment?: import("csstype").Property.BackgroundAttachment | undefined;
    borderTopRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    borderLeftRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    borderRightRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    rounded?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    roundedTopLeft?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    roundedTopRight?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    roundedBottomLeft?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    roundedBottomRight?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    roundedTop?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    borderBottomRadius?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    roundedBottom?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    roundedLeft?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    roundedRight?: import("../../types").ResponsiveValue<import("csstype").Property.BorderRadius<string | number>>;
    flexDir?: import("../../types").ResponsiveValue<import("csstype").Property.FlexDirection>;
    boxSize?: import("../../types").ResponsiveValue<import("csstype").Property.Width<string | number>>;
    bgColor?: import("../../types").ResponsiveValue<"contrastThreshold" | "white" | "black" | "lightText" | "darkText" | "dark.50" | "dark.100" | "dark.200" | "dark.300" | "dark.400" | "dark.500" | "dark.600" | "dark.700" | "dark.800" | "dark.900" | "rose.50" | "rose.100" | "rose.200" | "rose.300" | "rose.400" | "rose.500" | "rose.600" | "rose.700" | "rose.800" | "rose.900" | "pink.50" | "pink.100" | "pink.200" | "pink.300" | "pink.400" | "pink.500" | "pink.600" | "pink.700" | "pink.800" | "pink.900" | "fuchsia.50" | "fuchsia.100" | "fuchsia.200" | "fuchsia.300" | "fuchsia.400" | "fuchsia.500" | "fuchsia.600" | "fuchsia.700" | "fuchsia.800" | "fuchsia.900" | "purple.50" | "purple.100" | "purple.200" | "purple.300" | "purple.400" | "purple.500" | "purple.600" | "purple.700" | "purple.800" | "purple.900" | "violet.50" | "violet.100" | "violet.200" | "violet.300" | "violet.400" | "violet.500" | "violet.600" | "violet.700" | "violet.800" | "violet.900" | "indigo.50" | "indigo.100" | "indigo.200" | "indigo.300" | "indigo.400" | "indigo.500" | "indigo.600" | "indigo.700" | "indigo.800" | "indigo.900" | "blue.50" | "blue.100" | "blue.200" | "blue.300" | "blue.400" | "blue.500" | "blue.600" | "blue.700" | "blue.800" | "blue.900" | "lightBlue.50" | "lightBlue.100" | "lightBlue.200" | "lightBlue.300" | "lightBlue.400" | "lightBlue.500" | "lightBlue.600" | "lightBlue.700" | "lightBlue.800" | "lightBlue.900" | "darkBlue.50" | "darkBlue.100" | "darkBlue.200" | "darkBlue.300" | "darkBlue.400" | "darkBlue.500" | "darkBlue.600" | "darkBlue.700" | "darkBlue.800" | "darkBlue.900" | "cyan.50" | "cyan.100" | "cyan.200" | "cyan.300" | "cyan.400" | "cyan.500" | "cyan.600" | "cyan.700" | "cyan.800" | "cyan.900" | "teal.50" | "teal.100" | "teal.200" | "teal.300" | "teal.400" | "teal.500" | "teal.600" | "teal.700" | "teal.800" | "teal.900" | "emerald.50" | "emerald.100" | "emerald.200" | "emerald.300" | "emerald.400" | "emerald.500" | "emerald.600" | "emerald.700" | "emerald.800" | "emerald.900" | "green.50" | "green.100" | "green.200" | "green.300" | "green.400" | "green.500" | "green.600" | "green.700" | "green.800" | "green.900" | "lime.50" | "lime.100" | "lime.200" | "lime.300" | "lime.400" | "lime.500" | "lime.600" | "lime.700" | "lime.800" | "lime.900" | "yellow.50" | "yellow.100" | "yellow.200" | "yellow.300" | "yellow.400" | "yellow.500" | "yellow.600" | "yellow.700" | "yellow.800" | "yellow.900" | "amber.50" | "amber.100" | "amber.200" | "amber.300" | "amber.400" | "amber.500" | "amber.600" | "amber.700" | "amber.800" | "amber.900" | "orange.50" | "orange.100" | "orange.200" | "orange.300" | "orange.400" | "orange.500" | "orange.600" | "orange.700" | "orange.800" | "orange.900" | "red.50" | "red.100" | "red.200" | "red.300" | "red.400" | "red.500" | "red.600" | "red.700" | "red.800" | "red.900" | "warmGray.50" | "warmGray.100" | "warmGray.200" | "warmGray.300" | "warmGray.400" | "warmGray.500" | "warmGray.600" | "warmGray.700" | "warmGray.800" | "warmGray.900" | "trueGray.50" | "trueGray.100" | "trueGray.200" | "trueGray.300" | "trueGray.400" | "trueGray.500" | "trueGray.600" | "trueGray.700" | "trueGray.800" | "trueGray.900" | "gray.50" | "gray.100" | "gray.200" | "gray.300" | "gray.400" | "gray.500" | "gray.600" | "gray.700" | "gray.800" | "gray.900" | "coolGray.50" | "coolGray.100" | "coolGray.200" | "coolGray.300" | "coolGray.400" | "coolGray.500" | "coolGray.600" | "coolGray.700" | "coolGray.800" | "coolGray.900" | "blueGray.50" | "blueGray.100" | "blueGray.200" | "blueGray.300" | "blueGray.400" | "blueGray.500" | "blueGray.600" | "blueGray.700" | "blueGray.800" | "blueGray.900" | (string & {}) | import("../../primitives/Box/types").ILinearGradientProps>;
    inset?: import("../../types").ResponsiveValue<import("csstype").Property.Left<string | number>>;
    testID?: string | undefined;
    transform?: import("csstype").Property.Transform | undefined;
    _dark?: IFormControlProps | undefined;
    _light?: IFormControlProps | undefined;
    _web?: IFormControlProps | undefined;
    _ios?: IFormControlProps | undefined;
    _android?: IFormControlProps | undefined;
    background?: import("../../types").ResponsiveValue<"contrastThreshold" | "white" | "black" | "lightText" | "darkText" | "dark.50" | "dark.100" | "dark.200" | "dark.300" | "dark.400" | "dark.500" | "dark.600" | "dark.700" | "dark.800" | "dark.900" | "rose.50" | "rose.100" | "rose.200" | "rose.300" | "rose.400" | "rose.500" | "rose.600" | "rose.700" | "rose.800" | "rose.900" | "pink.50" | "pink.100" | "pink.200" | "pink.300" | "pink.400" | "pink.500" | "pink.600" | "pink.700" | "pink.800" | "pink.900" | "fuchsia.50" | "fuchsia.100" | "fuchsia.200" | "fuchsia.300" | "fuchsia.400" | "fuchsia.500" | "fuchsia.600" | "fuchsia.700" | "fuchsia.800" | "fuchsia.900" | "purple.50" | "purple.100" | "purple.200" | "purple.300" | "purple.400" | "purple.500" | "purple.600" | "purple.700" | "purple.800" | "purple.900" | "violet.50" | "violet.100" | "violet.200" | "violet.300" | "violet.400" | "violet.500" | "violet.600" | "violet.700" | "violet.800" | "violet.900" | "indigo.50" | "indigo.100" | "indigo.200" | "indigo.300" | "indigo.400" | "indigo.500" | "indigo.600" | "indigo.700" | "indigo.800" | "indigo.900" | "blue.50" | "blue.100" | "blue.200" | "blue.300" | "blue.400" | "blue.500" | "blue.600" | "blue.700" | "blue.800" | "blue.900" | "lightBlue.50" | "lightBlue.100" | "lightBlue.200" | "lightBlue.300" | "lightBlue.400" | "lightBlue.500" | "lightBlue.600" | "lightBlue.700" | "lightBlue.800" | "lightBlue.900" | "darkBlue.50" | "darkBlue.100" | "darkBlue.200" | "darkBlue.300" | "darkBlue.400" | "darkBlue.500" | "darkBlue.600" | "darkBlue.700" | "darkBlue.800" | "darkBlue.900" | "cyan.50" | "cyan.100" | "cyan.200" | "cyan.300" | "cyan.400" | "cyan.500" | "cyan.600" | "cyan.700" | "cyan.800" | "cyan.900" | "teal.50" | "teal.100" | "teal.200" | "teal.300" | "teal.400" | "teal.500" | "teal.600" | "teal.700" | "teal.800" | "teal.900" | "emerald.50" | "emerald.100" | "emerald.200" | "emerald.300" | "emerald.400" | "emerald.500" | "emerald.600" | "emerald.700" | "emerald.800" | "emerald.900" | "green.50" | "green.100" | "green.200" | "green.300" | "green.400" | "green.500" | "green.600" | "green.700" | "green.800" | "green.900" | "lime.50" | "lime.100" | "lime.200" | "lime.300" | "lime.400" | "lime.500" | "lime.600" | "lime.700" | "lime.800" | "lime.900" | "yellow.50" | "yellow.100" | "yellow.200" | "yellow.300" | "yellow.400" | "yellow.500" | "yellow.600" | "yellow.700" | "yellow.800" | "yellow.900" | "amber.50" | "amber.100" | "amber.200" | "amber.300" | "amber.400" | "amber.500" | "amber.600" | "amber.700" | "amber.800" | "amber.900" | "orange.50" | "orange.100" | "orange.200" | "orange.300" | "orange.400" | "orange.500" | "orange.600" | "orange.700" | "orange.800" | "orange.900" | "red.50" | "red.100" | "red.200" | "red.300" | "red.400" | "red.500" | "red.600" | "red.700" | "red.800" | "red.900" | "warmGray.50" | "warmGray.100" | "warmGray.200" | "warmGray.300" | "warmGray.400" | "warmGray.500" | "warmGray.600" | "warmGray.700" | "warmGray.800" | "warmGray.900" | "trueGray.50" | "trueGray.100" | "trueGray.200" | "trueGray.300" | "trueGray.400" | "trueGray.500" | "trueGray.600" | "trueGray.700" | "trueGray.800" | "trueGray.900" | "gray.50" | "gray.100" | "gray.200" | "gray.300" | "gray.400" | "gray.500" | "gray.600" | "gray.700" | "gray.800" | "gray.900" | "coolGray.50" | "coolGray.100" | "coolGray.200" | "coolGray.300" | "coolGray.400" | "coolGray.500" | "coolGray.600" | "coolGray.700" | "coolGray.800" | "coolGray.900" | "blueGray.50" | "blueGray.100" | "blueGray.200" | "blueGray.300" | "blueGray.400" | "blueGray.500" | "blueGray.600" | "blueGray.700" | "blueGray.800" | "blueGray.900" | (string & {}) | import("../../primitives/Box/types").ILinearGradientProps>;
    textColor?: import("../../types").ResponsiveValue<"contrastThreshold" | "lightText" | "darkText" | "dark.50" | "dark.100" | "dark.200" | "dark.300" | "dark.400" | "dark.500" | "dark.600" | "dark.700" | "dark.800" | "dark.900" | "rose.50" | "rose.100" | "rose.200" | "rose.300" | "rose.400" | "rose.500" | "rose.600" | "rose.700" | "rose.800" | "rose.900" | "pink.50" | "pink.100" | "pink.200" | "pink.300" | "pink.400" | "pink.500" | "pink.600" | "pink.700" | "pink.800" | "pink.900" | "fuchsia.50" | "fuchsia.100" | "fuchsia.200" | "fuchsia.300" | "fuchsia.400" | "fuchsia.500" | "fuchsia.600" | "fuchsia.700" | "fuchsia.800" | "fuchsia.900" | "purple.50" | "purple.100" | "purple.200" | "purple.300" | "purple.400" | "purple.500" | "purple.600" | "purple.700" | "purple.800" | "purple.900" | "violet.50" | "violet.100" | "violet.200" | "violet.300" | "violet.400" | "violet.500" | "violet.600" | "violet.700" | "violet.800" | "violet.900" | "indigo.50" | "indigo.100" | "indigo.200" | "indigo.300" | "indigo.400" | "indigo.500" | "indigo.600" | "indigo.700" | "indigo.800" | "indigo.900" | "blue.50" | "blue.100" | "blue.200" | "blue.300" | "blue.400" | "blue.500" | "blue.600" | "blue.700" | "blue.800" | "blue.900" | "lightBlue.50" | "lightBlue.100" | "lightBlue.200" | "lightBlue.300" | "lightBlue.400" | "lightBlue.500" | "lightBlue.600" | "lightBlue.700" | "lightBlue.800" | "lightBlue.900" | "darkBlue.50" | "darkBlue.100" | "darkBlue.200" | "darkBlue.300" | "darkBlue.400" | "darkBlue.500" | "darkBlue.600" | "darkBlue.700" | "darkBlue.800" | "darkBlue.900" | "cyan.50" | "cyan.100" | "cyan.200" | "cyan.300" | "cyan.400" | "cyan.500" | "cyan.600" | "cyan.700" | "cyan.800" | "cyan.900" | "teal.50" | "teal.100" | "teal.200" | "teal.300" | "teal.400" | "teal.500" | "teal.600" | "teal.700" | "teal.800" | "teal.900" | "emerald.50" | "emerald.100" | "emerald.200" | "emerald.300" | "emerald.400" | "emerald.500" | "emerald.600" | "emerald.700" | "emerald.800" | "emerald.900" | "green.50" | "green.100" | "green.200" | "green.300" | "green.400" | "green.500" | "green.600" | "green.700" | "green.800" | "green.900" | "lime.50" | "lime.100" | "lime.200" | "lime.300" | "lime.400" | "lime.500" | "lime.600" | "lime.700" | "lime.800" | "lime.900" | "yellow.50" | "yellow.100" | "yellow.200" | "yellow.300" | "yellow.400" | "yellow.500" | "yellow.600" | "yellow.700" | "yellow.800" | "yellow.900" | "amber.50" | "amber.100" | "amber.200" | "amber.300" | "amber.400" | "amber.500" | "amber.600" | "amber.700" | "amber.800" | "amber.900" | "orange.50" | "orange.100" | "orange.200" | "orange.300" | "orange.400" | "orange.500" | "orange.600" | "orange.700" | "orange.800" | "orange.900" | "red.50" | "red.100" | "red.200" | "red.300" | "red.400" | "red.500" | "red.600" | "red.700" | "red.800" | "red.900" | "warmGray.50" | "warmGray.100" | "warmGray.200" | "warmGray.300" | "warmGray.400" | "warmGray.500" | "warmGray.600" | "warmGray.700" | "warmGray.800" | "warmGray.900" | "trueGray.50" | "trueGray.100" | "trueGray.200" | "trueGray.300" | "trueGray.400" | "trueGray.500" | "trueGray.600" | "trueGray.700" | "trueGray.800" | "trueGray.900" | "gray.50" | "gray.100" | "gray.200" | "gray.300" | "gray.400" | "gray.500" | "gray.600" | "gray.700" | "gray.800" | "gray.900" | "coolGray.50" | "coolGray.100" | "coolGray.200" | "coolGray.300" | "coolGray.400" | "coolGray.500" | "coolGray.600" | "coolGray.700" | "coolGray.800" | "coolGray.900" | "blueGray.50" | "blueGray.100" | "blueGray.200" | "blueGray.300" | "blueGray.400" | "blueGray.500" | "blueGray.600" | "blueGray.700" | "blueGray.800" | "blueGray.900" | import("csstype").Property.Color>;
    appearance?: import("../../types").ResponsiveValue<import("csstype").Property.Appearance>;
    boxSizing?: import("../../types").ResponsiveValue<import("csstype").Property.BoxSizing>;
    cursor?: import("../../types").ResponsiveValue<import("csstype").Property.Cursor>;
    float?: import("../../types").ResponsiveValue<import("csstype").Property.Float>;
    objectFit?: import("../../types").ResponsiveValue<import("csstype").Property.ObjectFit>;
    objectPosition?: import("../../types").ResponsiveValue<import("csstype").Property.ObjectPosition<0 | (string & {})>>;
    outlineColor?: import("../../types").ResponsiveValue<import("csstype").Property.OutlineColor>;
    outlineOffset?: import("../../types").ResponsiveValue<import("csstype").Property.OutlineOffset<string | number>>;
    outlineStyle?: import("../../types").ResponsiveValue<import("csstype").Property.OutlineStyle>;
    pointerEvents?: "none" | "auto" | "box-none" | "box-only" | undefined;
    resize?: import("../../types").ResponsiveValue<import("csstype").Property.Resize>;
    transformOrigin?: import("csstype").Property.TransformOrigin<0 | (string & {})> | undefined;
    userSelect?: import("../../types").ResponsiveValue<import("csstype").Property.UserSelect>;
    visibility?: import("../../types").ResponsiveValue<import("csstype").Property.Visibility>;
    willChange?: import("../../types").ResponsiveValue<import("csstype").Property.WillChange>;
    animation?: import("../../types").ResponsiveValue<import("csstype").Property.Animation<string & {}>>;
    safeArea?: number | boolean | undefined;
    safeAreaY?: number | boolean | undefined;
    safeAreaTop?: number | boolean | undefined;
    safeAreaBottom?: number | boolean | undefined;
    safeAreaLeft?: number | boolean | undefined;
    safeAreaX?: number | boolean | undefined;
    safeAreaRight?: number | boolean | undefined;
    insetX?: import("../../types").ResponsiveValue<import("csstype").Property.Left<string | number>>;
    insetY?: import("../../types").ResponsiveValue<import("csstype").Property.Left<string | number>>;
    pos?: import("../../types").ResponsiveValue<import("csstype").Property.Position>;
    d?: import("../../types").ResponsiveValue<import("csstype").Property.Display>;
    onLayout?: ((event: import("react-native").LayoutChangeEvent) => void) | undefined;
    accessible?: boolean | undefined;
    accessibilityActions?: readonly Readonly<{
        name: string;
        label?: string | undefined;
    }>[] | undefined;
    accessibilityLabel?: string | undefined;
    accessibilityRole?: import("react-native").AccessibilityRole | undefined;
    accessibilityState?: import("react-native").AccessibilityState | undefined;
    accessibilityHint?: string | undefined;
    accessibilityValue?: import("react-native").AccessibilityValue | undefined;
    onAccessibilityAction?: ((event: import("react-native").AccessibilityActionEvent) => void) | undefined;
    accessibilityLiveRegion?: "none" | "polite" | "assertive" | undefined;
    importantForAccessibility?: "auto" | "no" | "yes" | "no-hide-descendants" | undefined;
    accessibilityElementsHidden?: boolean | undefined;
    accessibilityViewIsModal?: boolean | undefined;
    onAccessibilityEscape?: (() => void) | undefined;
    onAccessibilityTap?: (() => void) | undefined;
    onMagicTap?: (() => void) | undefined;
    accessibilityIgnoresInvertColors?: boolean | undefined;
    _text?: import("../../primitives").ITextProps | undefined;
    hitSlop?: import("react-native").Insets | undefined;
    removeClippedSubviews?: boolean | undefined;
    collapsable?: boolean | undefined;
    needsOffscreenAlphaCompositing?: boolean | undefined;
    renderToHardwareTextureAndroid?: boolean | undefined;
    focusable?: boolean | undefined;
    shouldRasterizeIOS?: boolean | undefined;
    isTVSelectable?: boolean | undefined;
    hasTVPreferredFocus?: boolean | undefined;
    tvParallaxProperties?: import("react-native").TVParallaxProperties | undefined;
    tvParallaxShiftDistanceX?: number | undefined;
    tvParallaxShiftDistanceY?: number | undefined;
    tvParallaxTiltAngle?: number | undefined;
    tvParallaxMagnification?: number | undefined;
    onStartShouldSetResponder?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
    onMoveShouldSetResponder?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
    onResponderEnd?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onResponderGrant?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onResponderReject?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onResponderMove?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onResponderRelease?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onResponderStart?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onResponderTerminationRequest?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
    onResponderTerminate?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onStartShouldSetResponderCapture?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
    onMoveShouldSetResponderCapture?: ((event: import("react-native").GestureResponderEvent) => boolean) | undefined;
    onTouchStart?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onTouchMove?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onTouchEnd?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onTouchCancel?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
    onTouchEndCapture?: ((event: import("react-native").GestureResponderEvent) => void) | undefined;
};
export declare const useFormControlContext: () => IFormControlContext;
