{"version":3,"sources":["alert.ts"],"names":["getBg","props","theme","colorScheme","status","variant","lightBg","darkBg","variantSubtle","bg","_icon","color","variantOutline","borderWidth","borderColor","variantOutlineLight","variantSolid","variantLeftAccent","borderLeftColor","variantTopAccent","borderTopColor","variants","Alert","baseStyle","alignItems","justifyContent","p","space","borderRadius","defaultProps","AlertIcon","size"],"mappings":"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","sourcesContent":["import { mode, getColor, getColorScheme, transparentize } from '../tools';\n\nfunction getBg(props: Record<string, any>) {\n  let { theme, colorScheme, status, variant } = props;\n\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  const lightBg =\n    variant === 'solid'\n      ? getColor(theme, `${colorScheme}.600`, colorScheme)\n      : getColor(theme, `${colorScheme}.100`, colorScheme);\n\n  const darkBg =\n    variant === 'solid'\n      ? getColor(theme, `${colorScheme}.700`, colorScheme)\n      : getColor(theme, `${colorScheme}.200`, colorScheme);\n  return mode(lightBg, darkBg)(props);\n}\n\nconst variantSubtle = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\n\nconst variantOutline = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 1,\n    borderColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\nconst variantOutlineLight = (props: Record<string, any>) => {\n  let { colorScheme, status, theme } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 1,\n    borderColor: transparentize(\n      mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n      0.2\n    )(theme),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props) },\n  };\n};\n\nconst variantSolid = (props: Record<string, any>) => {\n  return {\n    borderWidth: 6,\n    borderColor: 'transparent',\n    bg: getBg(props),\n    _icon: { color: mode(`coolGray.50`, `warmGray.50`)(props) },\n  };\n};\nconst variantLeftAccent = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 4,\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n    borderColor: 'transparent',\n    borderLeftColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n  };\n};\nconst variantTopAccent = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 4,\n    borderColor: 'transparent',\n    borderTopColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\n\nconst variants = {\n  'subtle': variantSubtle,\n  'solid': variantSolid,\n  'left-accent': variantLeftAccent,\n  'top-accent': variantTopAccent,\n  'outline': variantOutline,\n  'outline-light': variantOutlineLight,\n};\n\nexport const Alert = {\n  baseStyle: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    p: 3,\n    space: 3,\n    borderRadius: 'sm',\n  },\n  variants,\n  defaultProps: {\n    colorScheme: 'primary',\n    variant: 'subtle',\n  },\n};\n\n// AlertIcon\n\nexport const AlertIcon = {\n  baseStyle: {\n    size: 4,\n  },\n};\n"]}