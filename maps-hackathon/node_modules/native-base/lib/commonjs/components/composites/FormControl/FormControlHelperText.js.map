{"version":3,"sources":["FormControlHelperText.tsx"],"names":["FormControlHelperText","ref","children","_disabled","_invalid","props","formControlContext","resolvedProps","React","useEffect","setHasHelpText","feedbackId","isInvalid","isDisabled"],"mappings":"wbAAA,qDACA,iEACA,2DACA,gDAEA,2E,qIAEA,GAAMA,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,MAE5BC,GAF4B,CAGzB,IAFDC,CAAAA,QAEC,MAFDA,QAEC,CAFSC,SAET,MAFSA,SAET,CAFoBC,QAEpB,MAFoBA,QAEpB,CAFiCC,KAEjC,iFACH,GAAMC,CAAAA,kBAAkB,CAAG,2CAA3B,CAEA,GAAMC,CAAAA,aAAa,CAAG,sCAAmB,uBAAnB,CAA4CF,KAA5C,CAAtB,CAEAG,eAAMC,SAAN,CAAgB,UAAM,CACpBH,kBAAkB,MAAlB,QAAAA,kBAAkB,CAAEI,cAApB,CAAmC,IAAnC,EACA,MAAO,WAAM,CACXJ,kBAAkB,MAAlB,QAAAA,kBAAkB,CAAEI,cAApB,CAAmC,KAAnC,EACD,CAFD,CAGD,CALD,EAOA,GAAI,iDAAsBL,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CAED,MACE,8BAAC,YAAD,0BACME,aADN,EAEE,QAAQ,CAAED,kBAAF,cAAEA,kBAAkB,CAAEK,UAFhC,EAGMN,KAHN,EAIE,GAAG,CAAEJ,GAJP,EAKO,CAAAK,kBAAkB,MAAlB,QAAAA,kBAAkB,CAAEM,SAApB,GAAiCR,QALxC,CAMO,CAAAE,kBAAkB,MAAlB,QAAAA,kBAAkB,CAAEO,UAApB,GAAkCV,SANzC,+EAQGD,QARH,CADF,CAYD,CA/BD,C,aAiCe,gBAAK,sBAAWF,qBAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFormControlContext } from './useFormControl';\nimport type { IFormControlHelperTextProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst FormControlHelperText = (\n  { children, _disabled, _invalid, ...props }: IFormControlHelperTextProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n\n  const resolvedProps = usePropsResolution('FormControlHelperText', props);\n\n  React.useEffect(() => {\n    formControlContext?.setHasHelpText(true);\n    return () => {\n      formControlContext?.setHasHelpText(false);\n    };\n  });\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Box\n      {...resolvedProps}\n      nativeID={formControlContext?.feedbackId}\n      {...props}\n      ref={ref}\n      {...(formControlContext?.isInvalid && _invalid)}\n      {...(formControlContext?.isDisabled && _disabled)}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(FormControlHelperText));\n"]}