{"version":3,"sources":["ActionsheetFooter.tsx"],"names":["ActionsheetFooter","props","ref","resolvedProps"],"mappings":"wUAAA,qDACA,6CAEA,qCACA,2E,iIAEA,GAAMA,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAiCC,GAAjC,CAA+C,CACvE,GAAMC,CAAAA,aAAa,CAAG,8BAAmB,mBAAnB,CAAwCF,KAAxC,CAAtB,CAEA,GAAI,iDAAsBA,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAAO,8BAAC,YAAD,CAAO,OAAP,0BAAmBE,aAAnB,EAAkC,GAAG,CAAED,GAAvC,+EAAP,CACD,CAPD,C,aASe,gBAAK,sBAAWF,iBAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Modal } from '../../composites/Modal';\nimport type { IActionsheetFooterProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ActionsheetFooter = (props: IActionsheetFooterProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ActionsheetFooter', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Modal.Content {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(ActionsheetFooter));\n"]}