{"version":3,"sources":["ActionsheetItem.tsx"],"names":["ActionsheetItem","props","ref","resolvedProps"],"mappings":"wUAAA,qDACA,+CAEA,qCACA,2E,+HAEA,GAAMA,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAA+BC,GAA/B,CAA6C,CACnE,GAAMC,CAAAA,aAAa,CAAG,8BAAmB,iBAAnB,CAAsCF,KAAtC,CAAtB,CAEA,GAAI,iDAAsBA,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAAO,8BAAC,cAAD,0BAAYE,aAAZ,EAA2B,GAAG,CAAED,GAAhC,+EAAP,CACD,CAPD,C,aASe,gBAAK,sBAAWF,eAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Button } from '../../primitives/Button';\nimport type { IActionsheetItemProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ActionsheetItem = (props: IActionsheetItemProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ActionsheetItem', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Button {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(ActionsheetItem));\n"]}