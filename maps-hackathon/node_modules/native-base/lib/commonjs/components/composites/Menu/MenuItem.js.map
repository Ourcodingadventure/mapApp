{"version":3,"sources":["MenuItem.tsx"],"names":["MenuItem","ref","children","isDisabled","onPress","style","textValue","props","React","useContext","MenuContext","closeOnSelect","onClose","menuItemRef","useRef","mergedRef","_text","resolvedProps","useState","textContent","setTextContent","useEffect","menuItem","current","trim","menuItemProps","disabled","e","Children","map","child","index"],"mappings":"ohBAAA,qDACA,mEACA,2DACA,qDAEA,0CACA,kCACA,qCACA,2E,iHAEA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAEfC,GAFe,CAGZ,IAFDC,CAAAA,QAEC,MAFDA,QAEC,CAFSC,UAET,MAFSA,UAET,CAFqBC,QAErB,MAFqBA,OAErB,CAF8BC,KAE9B,MAF8BA,KAE9B,CAFqCC,SAErC,MAFqCA,SAErC,CAFmDC,KAEnD,2HACgCC,eAAMC,UAAN,CAAiBC,wBAAjB,CADhC,CACKC,aADL,mBACKA,aADL,CACoBC,OADpB,mBACoBA,OADpB,CAEH,GAAMC,CAAAA,WAAW,CAAGL,eAAMM,MAAN,CAAkB,IAAlB,CAApB,CACA,GAAMC,CAAAA,SAAS,CAAG,qBAAU,CAACF,WAAD,CAAcZ,GAAd,CAAV,CAAlB,CAHG,wBAIiC,sCAAmB,UAAnB,CAA+BM,KAA/B,CAAsC,CACxEJ,UAAU,CAAVA,UADwE,CAAtC,CAJjC,CAIKa,KAJL,qBAIKA,KAJL,CAIeC,aAJf,0FAOmCT,eAAMU,QAAN,CAAe,EAAf,CAPnC,iEAOIC,WAPJ,qBAOiBC,cAPjB,qBAQHZ,eAAMa,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,CAACU,OAA7B,CACA,GAAID,QAAJ,CAAc,2BACZF,cAAc,CAAC,wBAACE,QAAQ,CAACH,WAAV,8BAAyB,EAAzB,EAA6BK,IAA7B,EAAD,CAAd,CACD,CACF,CALD,CAKG,CAACtB,QAAD,CALH,EAOA,GAAMuB,CAAAA,aAAa,CAAG,yBAAY,CAChCnB,SAAS,CAAEA,SAAF,OAAEA,SAAF,CAAea,WADQ,CAEhClB,GAAG,CAAEY,WAF2B,CAAZ,CAAtB,CAMA,GAAI,iDAAsBN,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,8BAAC,oBAAD,0BACMkB,aADN,CAEMR,aAFN,EAGE,GAAG,CAAEF,SAHP,CAIE,KAAK,CAAEV,KAJT,CAKE,QAAQ,CAAEF,UALZ,CAOE,kBAAkB,CAAE,CAClBuB,QAAQ,CAAEvB,UADQ,CAPtB,CAUE,OAAO,CAAE,iBAACwB,CAAD,CAAY,CACnB,GAAI,CAACxB,UAAL,CAAiB,CACfC,QAAO,EAAIA,QAAO,CAACuB,CAAD,CAAlB,CACA,GAAIhB,aAAJ,CAAmB,CACjBC,OAAO,EAAIA,OAAO,EAAlB,CACD,CACF,CACF,CAjBH,8EAmBE,0DACGJ,eAAMoB,QAAN,CAAeC,GAAf,CAAmB3B,QAAnB,CAA6B,SAAC4B,KAAD,CAAQC,KAAR,CAAuB,CACnD,GAAI,MAAOD,CAAAA,KAAP,GAAiB,QAAjB,EAA6B,MAAOA,CAAAA,KAAP,GAAiB,QAAlD,CAA4D,CAC1D,MACE,8BAAC,aAAD,0BAAUd,KAAV,EAAiB,GAAG,cAAee,KAAnC,+EACGD,KADH,CADF,CAKD,CAND,IAMO,CACL,MAAOA,CAAAA,KAAP,CACD,CACF,CAVA,CADH,CAnBF,CADF,CAmCD,CA9DD,C,aAgEe,gBAAK,sBAAW9B,QAAX,CAAL,C","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport Text from '../../primitives/Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Pressable } from '../../primitives/Pressable';\nimport type { IMenuItemProps } from './types';\nimport { MenuContext } from './MenuContext';\nimport { useMenuItem } from './useMenu';\nimport { mergeRefs } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst MenuItem = (\n  { children, isDisabled, onPress, style, textValue, ...props }: IMenuItemProps,\n  ref: any\n) => {\n  const { closeOnSelect, onClose } = React.useContext(MenuContext);\n  const menuItemRef = React.useRef<any>(null);\n  const mergedRef = mergeRefs([menuItemRef, ref]);\n  const { _text, ...resolvedProps } = usePropsResolution('MenuItem', props, {\n    isDisabled,\n  });\n  const [textContent, setTextContent] = React.useState('');\n  React.useEffect(() => {\n    const menuItem = menuItemRef.current;\n    if (menuItem) {\n      setTextContent((menuItem.textContent ?? '').trim());\n    }\n  }, [children]);\n\n  const menuItemProps = useMenuItem({\n    textValue: textValue ?? textContent,\n    ref: menuItemRef,\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Pressable\n      {...menuItemProps}\n      {...resolvedProps}\n      ref={mergedRef}\n      style={style}\n      disabled={isDisabled}\n      // TouchableHighlight doesn't announce disabled, even if disabled prop is set\n      accessibilityState={{\n        disabled: isDisabled,\n      }}\n      onPress={(e: any) => {\n        if (!isDisabled) {\n          onPress && onPress(e);\n          if (closeOnSelect) {\n            onClose && onClose();\n          }\n        }\n      }}\n    >\n      <>\n        {React.Children.map(children, (child, index: any) => {\n          if (typeof child === 'string' || typeof child === 'number') {\n            return (\n              <Text {..._text} key={`menu-item-${index}`}>\n                {child}\n              </Text>\n            );\n          } else {\n            return child;\n          }\n        })}\n      </>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(MenuItem));\n"]}