{"version":3,"sources":["ModalBody.tsx"],"names":["ModalBody","ref","children","props","resolvedProps"],"mappings":"wbAAA,qDACA,iEACA,qCACA,yCACA,2E,mHAEA,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAoCC,GAApC,CAAkD,IAA/CC,CAAAA,QAA+C,MAA/CA,QAA+C,CAAlCC,KAAkC,0DAClE,GAAMC,CAAAA,aAAa,CAAG,8BAAmB,WAAnB,CAAgCD,KAAhC,CAAtB,CAEA,GAAI,iDAAsBA,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,8BAAC,uBAAD,8EACE,6BAAC,YAAD,0BAASC,aAAT,EAAwB,GAAG,CAAEH,GAA7B,8EACGC,QADH,CADF,CADF,CAOD,CAbD,C,aAee,gBAAK,sBAAWF,SAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { ScrollView } from 'react-native';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ModalBody = ({ children, ...props }: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ModalBody', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <ScrollView>\n      <Box {...resolvedProps} ref={ref}>\n        {children}\n      </Box>\n    </ScrollView>\n  );\n};\n\nexport default memo(forwardRef(ModalBody));\n"]}