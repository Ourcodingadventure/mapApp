{"version":3,"sources":["PopoverArrow.tsx"],"names":["PopoverArrow","React","forwardRef","props","ref","resolvedProps","displayName"],"mappings":"mPAAA,oDACA,qCACA,iCAEA,2E,wHAEA,GAAMA,CAAAA,YAAY,CAAGC,eAAMC,UAAN,CAAiB,SAACC,KAAD,CAAmBC,GAAnB,CAAgC,CACpE,GAAMC,CAAAA,aAAa,CAAG,8BAAmB,cAAnB,CAAmCF,KAAnC,CAAtB,CAEA,GAAI,iDAAsBA,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAAO,8BAAC,cAAD,CAAQ,KAAR,0BAAkBA,KAAlB,CAA6BE,aAA7B,EAA4C,GAAG,CAAED,GAAjD,+EAAP,CACD,CAPoB,CAArB,CASAJ,YAAY,CAACM,WAAb,CAA2B,aAA3B,C,aAEeN,Y","sourcesContent":["import React from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { Popper } from '../Popper';\nimport type { IBoxProps } from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverArrow = React.forwardRef((props: IBoxProps, ref: any) => {\n  const resolvedProps = usePropsResolution('PopoverArrow', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Popper.Arrow {...props} {...resolvedProps} ref={ref} />;\n});\n\nPopoverArrow.displayName = 'PopperArrow';\n\nexport default PopoverArrow;\n"]}