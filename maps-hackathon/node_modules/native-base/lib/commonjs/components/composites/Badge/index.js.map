{"version":3,"sources":["index.tsx"],"names":["Badge","ref","children","props","newProps"],"mappings":"wbAAA,qDACA,iEAEA,2DACA,2E,+GAEA,GAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAsCC,GAAtC,CAAmD,IAAhDC,CAAAA,QAAgD,MAAhDA,QAAgD,CAAnCC,KAAmC,0DAC/D,GAAIC,CAAAA,QAAQ,CAAG,sCAAmB,OAAnB,CAA4BD,KAA5B,CAAf,CAEA,GAAI,iDAAsBA,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,8BAAC,YAAD,0BAASC,QAAT,EAAmB,GAAG,CAAEH,GAAxB,8EACGC,QADH,CADF,CAKD,CAXD,C,aAae,gBAAK,sBAAWF,KAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport type { IBadgeProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Badge = ({ children, ...props }: IBadgeProps, ref: any) => {\n  let newProps = usePropsResolution('Badge', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...newProps} ref={ref}>\n      {children}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Badge));\nexport type { IBadgeProps };\n"]}