{"version":3,"sources":["index.tsx"],"names":["Wrap","ref","children","props","space","newProps","React","Children","map","child","cloneElement","style","margin","memo","forwardRef"],"mappings":"mWAAA,4DACA,oDACA,mEAEA,qCACA,2E,8GAEA,GAAMA,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAqCC,GAArC,CAAmD,IAAhDC,CAAAA,QAAgD,MAAhDA,QAAgD,CAAnCC,KAAmC,6EAC/B,yBAAc,MAAd,CAAsBA,KAAtB,CAD+B,CACtDC,KADsD,gBACtDA,KADsD,CAC5CC,QAD4C,iEAI9D,GAAI,iDAAsBF,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CAED,MACE,8BAAC,aAAD,wBAAM,IAAI,CAAC,MAAX,EAAsBE,QAAtB,EAAgC,GAAG,CAAEJ,GAArC,8EACG,oBAAMG,KAAN,EACGF,QADH,CAEGI,eAAMC,QAAN,CAAeC,GAAf,CAAmBN,QAAnB,CAA6B,SAACO,KAAD,CAAgB,CAC3C,MAAOH,gBAAMI,YAAN,CACLD,KADK,0BAEAN,KAFA,EAEOQ,KAAK,CAAE,CAAEC,MAAM,CAAER,KAAV,CAFd,GAGLK,KAAK,CAACN,KAAN,CAAYD,QAHP,CAAP,CAKD,CAND,CAHN,CADF,CAaD,CArBD,C,aAuBeI,eAAMO,IAAN,CAAWP,eAAMQ,UAAN,CAAiBd,IAAjB,CAAX,C","sourcesContent":["import isNil from 'lodash.isnil';\nimport React from 'react';\nimport Flex from '../../primitives/Flex';\nimport type { IWrapProps } from './types';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Wrap = ({ children, ...props }: IWrapProps, ref?: any) => {\n  const { space, ...newProps } = useThemeProps('Wrap', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Flex wrap=\"wrap\" {...newProps} ref={ref}>\n      {isNil(space)\n        ? children\n        : React.Children.map(children, (child: any) => {\n            return React.cloneElement(\n              child,\n              { ...props, style: { margin: space } },\n              child.props.children\n            );\n          })}\n    </Flex>\n  );\n};\n\nexport default React.memo(React.forwardRef(Wrap));\nexport type { IWrapProps };\n"]}