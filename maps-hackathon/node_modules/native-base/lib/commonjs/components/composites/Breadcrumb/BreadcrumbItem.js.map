{"version":3,"sources":["BreadcrumbItem.tsx"],"names":["BreadcrumbItem","props","ref","children","isCurrent","_text","remainingProps","React","Children","map","child","index","cloneElement","fontWeight","isUnderlined","Platform","OS","undefined"],"mappings":"wbAAA,qDACA,yCACA,6CACA,kCAEA,2E,6HAEA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAA8BC,GAA9B,CAA4C,IACzDC,CAAAA,QADyD,CACPF,KADO,CACzDE,QADyD,CAC/CC,SAD+C,CACPH,KADO,CAC/CG,SAD+C,CACpCC,KADoC,CACPJ,KADO,CACpCI,KADoC,CAC1BC,cAD0B,uCACPL,KADO,mCAGjE,GAAI,iDAAsBA,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAEE,8BAAC,8BAAD,CAAuB,QAAvB,EAAgC,KAAK,CAAE,CAAEG,SAAS,CAATA,SAAF,CAAvC,6EACE,6BAAC,aAAD,0BAAYE,cAAZ,EAA4B,GAAG,CAAEJ,GAAjC,8EACGK,eAAMC,QAAN,CAAeC,GAAf,CAAmBN,QAAnB,CAA6B,SAACO,KAAD,CAAaC,KAAb,QAC5BJ,gBAAMK,YAAN,CAAmBF,KAAnB,wBACE,yBAA0BC,KAD5B,CAEE,iCACKN,KADL,EAEEQ,UAAU,CAAE,GAFd,EAFF,EAMK,CACDC,YAAY,CAAE,KADb,CANL,CASKR,cATL,EAUE,eACES,sBAASC,EAAT,GAAgB,KAAhB,EAAyBZ,SAAzB,CAAqC,MAArC,CAA8Ca,SAXlD,GAD4B,EAA7B,CADH,CADF,CAFF,CAsBD,CA5BD,C,aA8Be,gBAAK,sBAAWjB,cAAX,CAAL,C","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Platform } from 'react-native';\nimport { HStack } from '../../primitives/Stack';\nimport { BreadcrumbItemContext } from './Context';\nimport type { IBreadcrumbItemProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst BreadcrumbItem = (props: IBreadcrumbItemProps, ref?: any) => {\n  const { children, isCurrent, _text, ...remainingProps } = props;\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    // Provider wrapped to use isCurrent prop in children of breadcrumb Item\n    <BreadcrumbItemContext.Provider value={{ isCurrent }}>\n      <HStack {...remainingProps} ref={ref}>\n        {React.Children.map(children, (child: any, index: number) =>\n          React.cloneElement(child, {\n            'key': `breadcrumb-item-${index}`,\n            '_text': {\n              ..._text, //taken out empty _text prop from props\n              fontWeight: 700,\n            },\n            ...{\n              isUnderlined: false,\n            },\n            ...remainingProps,\n            'aria-current':\n              Platform.OS === 'web' && isCurrent ? 'page' : undefined,\n          })\n        )}\n      </HStack>\n    </BreadcrumbItemContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(BreadcrumbItem));\n"]}