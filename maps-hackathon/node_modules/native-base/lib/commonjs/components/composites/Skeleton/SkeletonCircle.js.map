{"version":3,"sources":["SkeletonCircle.tsx"],"names":["SkeletonCircle","children","props","resolvedProps","isLoaded"],"mappings":"wbAAA,qDACA,qCAEA,4D,2HAEA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAA4C,IAAzCC,CAAAA,QAAyC,MAAzCA,QAAyC,CAA5BC,KAA4B,0DACjE,GAAMC,CAAAA,aAAa,CAAG,8BAAmB,gBAAnB,CAAqCD,KAArC,CAAtB,CAEA,MAAOC,CAAAA,aAAa,CAACC,QAAd,CAAyBH,QAAzB,CAAoC,6BAAC,iBAAD,0BAAcE,aAAd,+EAA3C,CACD,CAJD,C,aAMe,gBAAK,sBAAWH,cAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport type { ISkeletonProps } from './types';\nimport Skeleton from './Skeleton';\n\nconst SkeletonCircle = ({ children, ...props }: ISkeletonProps) => {\n  const resolvedProps = usePropsResolution('SkeletonCircle', props);\n  // Skeleton component with border Radius 999\n  return resolvedProps.isLoaded ? children : <Skeleton {...resolvedProps} />;\n};\n\nexport default memo(forwardRef(SkeletonCircle));\n"]}