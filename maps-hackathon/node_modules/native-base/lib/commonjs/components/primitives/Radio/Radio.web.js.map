{"version":3,"sources":["Radio.web.tsx"],"names":["Radio","ref","icon","children","wrapperRef","props","contextState","React","useContext","RadioContext","isInvalid","isReadOnly","isIndeterminate","combinedProps","inputRef","useRef","accessibilityLabel","state","inputProps","isDisabled","disabled","isChecked","checked","_ref","isHovered","mergedRefs","focusProps","isFocusVisible","sizedIcon","cloneElement","_icon","_interactionBox","resolvedProps","stylingProps","margin","layout","flexbox","position","layoutProps","nonLayoutProps","component","transition"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../Box';\nimport { Center } from '../../composites/Center';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IRadioProps } from './types';\nimport { mergeRefs } from './../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useRadio } from '@react-native-aria/radio';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { RadioContext } from './RadioGroup';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { CircleIcon } from '../Icon/Icons';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { combineContextAndProps } from '../../../utils';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\n\nconst Radio = (\n  { icon, children, wrapperRef, ...props }: IRadioProps,\n  ref: any\n) => {\n  const contextState = React.useContext(RadioContext);\n\n  const {\n    isInvalid,\n    isReadOnly,\n    isIndeterminate,\n    ...combinedProps\n  } = combineContextAndProps(contextState, props);\n\n  const inputRef = React.useRef(null);\n  const { inputProps } = useRadio(\n    { ...props, 'aria-label': props.accessibilityLabel, children },\n    contextState.state,\n    inputRef\n  );\n  const { disabled: isDisabled, checked: isChecked } = inputProps;\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  const mergedRefs = mergeRefs([_ref, wrapperRef]);\n  const { focusProps, isFocusVisible } = useFocusRing();\n\n  // only calling below function when icon exist.\n  const sizedIcon = () =>\n    //@ts-ignore\n    React.cloneElement(icon, {\n      ..._icon,\n    });\n\n  const { _interactionBox, _icon, ...resolvedProps } = usePropsResolution(\n    'Radio',\n    combinedProps,\n    {\n      isInvalid,\n      isReadOnly,\n      isFocusVisible,\n      isDisabled,\n      isIndeterminate,\n      isChecked,\n      isHovered,\n    }\n  );\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    '_text',\n  ]);\n\n  const component = (\n    <Box\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      {...layoutProps}\n      opacity={isDisabled ? 0.4 : 1}\n      cursor={isDisabled ? 'not-allowed' : 'pointer'}\n    >\n      <Center>\n        {/* Interaction Box */}\n        <Box\n          {..._interactionBox}\n          style={{\n            // @ts-ignore - only for web\"\n            transition: 'height 200ms, width 200ms',\n          }}\n          h={isFocusVisible || isHovered ? '200%' : '100%'}\n          w={isFocusVisible || isHovered ? '200%' : '100%'}\n        />\n        {/* Radio */}\n        <Center {...nonLayoutProps}>\n          {icon && sizedIcon && isChecked ? (\n            sizedIcon()\n          ) : (\n            <CircleIcon {..._icon} opacity={isChecked ? 1 : 0} />\n          )}\n        </Center>\n      </Center>\n      {children}\n    </Box>\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      // @ts-ignore - RN web supports accessibilityRole=\"label\"\n      accessibilityRole=\"label\"\n      ref={mergedRefs}\n    >\n      <VisuallyHidden>\n        <input {...inputProps} ref={ref} {...focusProps} />\n      </VisuallyHidden>\n      {component}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Radio));\n"]}