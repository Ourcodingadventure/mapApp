var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var _react=_interopRequireWildcard(require("react"));var _slider=require("@react-stately/slider");var _hooks=require("../../../hooks");var _Box=_interopRequireDefault(require("../Box"));var _Context=require("./Context");var _slider2=require("@react-native-aria/slider");var _useHasResponsiveProps=require("../../../hooks/useHasResponsiveProps");var _jsxFileName="/Users/suraj/Sites/projects/NativeBase/src/components/primitives/Slider/Slider.tsx";function Slider(_ref,ref){var _props$accessibilityL;var isDisabled=_ref.isDisabled,isReadOnly=_ref.isReadOnly,props=(0,_objectWithoutProperties2.default)(_ref,["isDisabled","isReadOnly"]);var newProps=(0,_extends2.default)({},props,{'aria-label':(_props$accessibilityL=props.accessibilityLabel)!=null?_props$accessibilityL:'Slider'});if(typeof props.value==='number'){newProps.value=[props.value];}if(typeof props.defaultValue==='number'){newProps.defaultValue=[props.defaultValue];}props=newProps;var _useLayout=(0,_hooks.useLayout)(),onLayout=_useLayout.onLayout,trackLayout=_useLayout.layout;var updatedProps=(0,_extends2.default)({},props);if(isReadOnly||isDisabled){updatedProps.isDisabled=true;}var state=(0,_slider.useSliderState)((0,_extends2.default)({},updatedProps,{numberFormatter:{format:function format(e){return e;}},minValue:props.minValue,maxValue:props.maxValue,onChange:function onChange(val){props.onChange&&props.onChange(val[0]);},onChangeEnd:function onChangeEnd(val){props.onChangeEnd&&props.onChangeEnd(val[0]);}}));var resolvedProps=(0,_hooks.usePropsResolution)('Slider',props,{isDisabled:isDisabled,isReadOnly:isReadOnly});var _useSlider=(0,_slider2.useSlider)(props,state,trackLayout),trackProps=_useSlider.trackProps;var wrapperStyle={height:props.orientation==='vertical'?'100%':undefined,width:props.orientation!=='vertical'?'100%':undefined};if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_Context.SliderContext.Provider,{value:{trackLayout:trackLayout,state:state,orientation:props.orientation,isDisabled:isDisabled,isReversed:props.isReversed,colorScheme:props.colorScheme,trackProps:trackProps,isReadOnly:isReadOnly,onTrackLayout:onLayout,thumbSize:resolvedProps.thumbSize,sliderSize:resolvedProps.sliderSize},__self:this,__source:{fileName:_jsxFileName,lineNumber:72,columnNumber:5}},_react.default.createElement(_Box.default,(0,_extends2.default)({},wrapperStyle,{justifyContent:"center",ref:ref,alignItems:"center"},resolvedProps,{__self:this,__source:{fileName:_jsxFileName,lineNumber:87,columnNumber:7}}),_react.default.Children.map(props.children,function(child,index){if(child.displayName==='SliderThumb'){return _react.default.cloneElement(child,{index:index});}return child;})));}var _default=(0,_react.forwardRef)(Slider);exports.default=_default;
//# sourceMappingURL=Slider.js.map