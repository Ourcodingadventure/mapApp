{"version":3,"sources":["Slider.tsx"],"names":["Slider","ref","isDisabled","isReadOnly","props","newProps","accessibilityLabel","value","defaultValue","onLayout","trackLayout","layout","updatedProps","state","numberFormatter","format","e","minValue","maxValue","onChange","val","onChangeEnd","resolvedProps","trackProps","wrapperStyle","height","orientation","undefined","width","isReversed","colorScheme","onTrackLayout","thumbSize","sliderSize","React","Children","map","children","child","index","displayName","cloneElement"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useSliderState } from '@react-stately/slider';\nimport { useLayout } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks';\nimport type { ISliderProps } from './types';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useSlider } from '@react-native-aria/slider';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nfunction Slider({ isDisabled, isReadOnly, ...props }: ISliderProps, ref?: any) {\n  const newProps = {\n    ...props,\n    'aria-label': props.accessibilityLabel ?? 'Slider',\n  };\n\n  if (typeof props.value === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.value = [props.value];\n  }\n\n  if (typeof props.defaultValue === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.defaultValue = [props.defaultValue];\n  }\n\n  props = newProps;\n\n  const { onLayout, layout: trackLayout } = useLayout();\n  const updatedProps: ISliderProps = Object.assign({}, props);\n\n  if (isReadOnly || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n\n  const state = useSliderState({\n    ...updatedProps,\n    //@ts-ignore\n    numberFormatter: { format: (e) => e },\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    onChange: (val: any) => {\n      props.onChange && props.onChange(val[0]);\n    },\n    onChangeEnd: (val: any) => {\n      props.onChangeEnd && props.onChangeEnd(val[0]);\n    },\n  });\n\n  const resolvedProps = usePropsResolution('Slider', props, {\n    isDisabled,\n    isReadOnly,\n  });\n\n  const { trackProps } = useSlider(\n    (props as unknown) as any,\n    state,\n    trackLayout\n  );\n\n  const wrapperStyle = {\n    height: props.orientation === 'vertical' ? '100%' : undefined,\n    width: props.orientation !== 'vertical' ? '100%' : undefined,\n  };\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <SliderContext.Provider\n      value={{\n        trackLayout,\n        state,\n        orientation: props.orientation,\n        isDisabled: isDisabled,\n        isReversed: props.isReversed,\n        colorScheme: props.colorScheme,\n        trackProps,\n        isReadOnly: isReadOnly,\n        onTrackLayout: onLayout,\n        thumbSize: resolvedProps.thumbSize,\n        sliderSize: resolvedProps.sliderSize,\n      }}\n    >\n      <Box\n        {...wrapperStyle}\n        justifyContent=\"center\"\n        ref={ref}\n        alignItems=\"center\"\n        {...resolvedProps}\n      >\n        {React.Children.map(props.children, (child, index) => {\n          if (child.displayName === 'SliderThumb') {\n            return React.cloneElement(child as React.ReactElement, {\n              index,\n            });\n          }\n\n          return child;\n        })}\n      </Box>\n    </SliderContext.Provider>\n  );\n}\n\nexport default forwardRef(Slider);\n"]}