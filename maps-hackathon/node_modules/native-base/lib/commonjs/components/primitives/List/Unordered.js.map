{"version":3,"sources":["Unordered.tsx"],"names":["UnorderedList","ref","children","props","_text","_hover","resolvedProps","React","Children","map","child","ind","cloneElement","index","ul","memo","forwardRef"],"mappings":"mWAAA,oDACA,+BAEA,qCACA,2E,kHAEA,GAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAqCC,GAArC,CAAmD,IAAhDC,CAAAA,QAAgD,MAAhDA,QAAgD,CAAnCC,KAAmC,kFAC3B,8BAAmB,MAAnB,CAA2BA,KAA3B,CAD2B,CAC/DC,KAD+D,qBAC/DA,KAD+D,CACxDC,MADwD,qBACxDA,MADwD,CAC7CC,aAD6C,+EAGvE,GAAI,iDAAsBH,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CAEDD,QAAQ,CAAGK,eAAMC,QAAN,CAAeC,GAAf,CAAmBP,QAAnB,CAA6B,SAACQ,KAAD,CAAaC,GAAb,CAA6B,CACnE,MAAOJ,gBAAMK,YAAN,CACLF,KADK,wBAGHG,KAAK,CAAEF,GAHJ,CAIHG,EAAE,CAAE,IAJD,CAKHV,KAAK,CAAEA,KALJ,CAMHC,MAAM,CAANA,MANG,EAOAK,KAAK,CAACP,KAPN,EASLO,KAAK,CAACP,KAAN,CAAYD,QATP,CAAP,CAWD,CAZU,CAAX,CAcA,MACE,8BAAC,aAAD,0BAAYI,aAAZ,EAA2B,GAAG,CAAEL,GAAhC,8EACGC,QADH,CADF,CAKD,CA1BD,C,aA4BeK,eAAMQ,IAAN,CAAWR,eAAMS,UAAN,CAAiBhB,aAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { VStack } from '../Stack';\nimport type { IListProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst UnorderedList = ({ children, ...props }: IListProps, ref?: any) => {\n  const { _text, _hover, ...resolvedProps } = usePropsResolution('List', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  // add props to children\n  children = React.Children.map(children, (child: any, ind: number) => {\n    return React.cloneElement(\n      child,\n      {\n        index: ind,\n        ul: true,\n        _text: _text,\n        _hover,\n        ...child.props,\n      },\n      child.props.children\n    );\n  });\n\n  return (\n    <VStack {...resolvedProps} ref={ref}>\n      {children}\n    </VStack>\n  );\n};\n\nexport default React.memo(React.forwardRef(UnorderedList));\n"]}