{"version":3,"sources":["index.tsx"],"names":["StyledView","RNView","View","props","ref","viewProps","safeAreaProps","React","memo","forwardRef"],"mappings":"mPAAA,oDACA,6CACA,yCACA,2EACA,2DACA,uD,8GAEA,GAAMA,CAAAA,UAAe,CAAG,gCAAoBC,iBAApB,CAAxB,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAoBC,GAApB,CAAiC,CAC5C,GAAMC,CAAAA,SAAS,CAAG,iCAAc,MAAd,CAAsBF,KAAtB,CAAlB,CACA,GAAMG,CAAAA,aAAa,CAAG,6BAAYD,SAAZ,CAAtB,CAEA,GAAI,iDAAsBF,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAAO,8BAAC,UAAD,0BAAgBG,aAAhB,EAA+B,GAAG,CAAEF,GAApC,+EAAP,CACD,CARD,C,aASeG,eAAMC,IAAN,CAAWD,eAAME,UAAN,CAAiBP,IAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { View as RNView } from 'react-native';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport { useSafeArea } from '../../../hooks/useSafeArea';\nimport type { IViewProps } from './types';\nconst StyledView: any = makeStyledComponent(RNView);\n\nconst View = (props: IViewProps, ref: any) => {\n  const viewProps = useThemeProps('View', props);\n  const safeAreaProps = useSafeArea(viewProps);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StyledView {...safeAreaProps} ref={ref} />;\n};\nexport default React.memo(React.forwardRef(View));\nexport type { IViewProps };\n"]}