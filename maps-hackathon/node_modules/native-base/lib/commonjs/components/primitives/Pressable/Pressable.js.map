{"version":3,"sources":["Pressable.tsx"],"names":["useHover","React","useState","isHovered","setHovered","hoverProps","onHoverIn","onHoverOut","useFocus","isFocused","setFocused","focusProps","onFocus","onBlur","useIsPressed","isPressed","setIsPressed","pressableProps","onPressIn","onPressOut","StyledPressable","RNPressable","Pressable","ref","children","props","isFocusVisible","focusRingProps","resolvedProps"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Pressable as RNPressable } from 'react-native';\nimport { composeEventHandlers } from '../../../utils';\nimport type { IPressableProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFocusRing } from '@react-native-aria/focus';\n\nexport const useHover = () => {\n  const [isHovered, setHovered] = React.useState(false);\n  return {\n    hoverProps: {\n      onHoverIn: () => setHovered(true),\n      onHoverOut: () => setHovered(false),\n    },\n    isHovered,\n  };\n};\n\nexport const useFocus = () => {\n  const [isFocused, setFocused] = React.useState(false);\n  return {\n    focusProps: {\n      onFocus: () => setFocused(true),\n      onBlur: () => setFocused(false),\n    },\n    isFocused,\n  };\n};\n\nexport const useIsPressed = () => {\n  const [isPressed, setIsPressed] = React.useState(false);\n  return {\n    pressableProps: {\n      onPressIn: () => setIsPressed(true),\n      onPressOut: () => setIsPressed(false),\n    },\n    isPressed,\n  };\n};\n\nconst StyledPressable = makeStyledComponent(RNPressable);\n\nconst Pressable = ({ children, ...props }: IPressableProps, ref: any) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n\n  const {\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('Pressable', props, {\n    isPressed,\n    isFocused,\n    isHovered,\n    isFocusVisible,\n  });\n\n  // TODO: Replace Render props with Context Hook\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  // TODO : Replace Render props with Context Hook\n  return (\n    <StyledPressable\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      {...resolvedProps}\n    >\n      {typeof children !== 'function'\n        ? children\n        : children({\n            isPressed,\n            isHovered,\n            isFocused,\n          })}\n    </StyledPressable>\n  );\n};\n\nexport default memo(forwardRef(Pressable));\n"]}