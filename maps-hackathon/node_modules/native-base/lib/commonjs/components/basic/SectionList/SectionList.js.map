{"version":3,"sources":["SectionList.tsx"],"names":["StyledSectionList","RNSectionList","SectionList","props","ref","resolvedProps"],"mappings":"4UAAA,qDACA,yCACA,qCACA,6CAEA,2E,sHAEA,GAAMA,CAAAA,iBAAsB,CAAG,gCAAoBC,wBAApB,CAA/B,CAEO,GAAMC,CAAAA,WAAW,CAAG,sBAAW,SAACC,KAAD,CAA2BC,GAA3B,CAAwC,yBAC/C,8BAAmB,aAAnB,CAAkCD,KAAlC,CAD+C,CACjEE,aADiE,+CAG5E,GAAI,iDAAsBF,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CAED,MAAO,8BAAC,iBAAD,0BAAuBE,aAAvB,EAAsC,GAAG,CAAED,GAA3C,+EAAP,CACD,CAR0B,CAApB,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport { SectionList as RNSectionList } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { ISectionListProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledSectionList: any = makeStyledComponent(RNSectionList);\n\nexport const SectionList = forwardRef((props: ISectionListProps, ref: any) => {\n  const { ...resolvedProps } = usePropsResolution('SectionList', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return <StyledSectionList {...resolvedProps} ref={ref} />;\n});\n"]}