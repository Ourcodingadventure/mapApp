{"version":3,"sources":["View.tsx"],"names":["StyledView","RNView","View","props","ref","resolvedProps"],"mappings":"qUAAA,qDACA,yCACA,qCACA,6CAEA,2E,wGAEA,GAAMA,CAAAA,UAAe,CAAG,gCAAoBC,iBAApB,CAAxB,CAEO,GAAMC,CAAAA,IAAI,CAAG,sBAAW,SAACC,KAAD,CAAoBC,GAApB,CAAiC,yBACjC,8BAAmB,MAAnB,CAA2BD,KAA3B,CADiC,CACnDE,aADmD,+CAG9D,GAAI,iDAAsBF,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MAAO,8BAAC,UAAD,0BAAgBE,aAAhB,EAA+B,GAAG,CAAED,GAApC,+EAAP,CACD,CAPmB,CAAb,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport { View as RNView } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IViewProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledView: any = makeStyledComponent(RNView);\n\nexport const View = forwardRef((props: IViewProps, ref: any) => {\n  const { ...resolvedProps } = usePropsResolution('View', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StyledView {...resolvedProps} ref={ref} />;\n});\n"]}