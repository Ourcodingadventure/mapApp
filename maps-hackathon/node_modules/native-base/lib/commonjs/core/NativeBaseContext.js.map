{"version":3,"sources":["NativeBaseContext.ts"],"names":["defaultConfig","strictMode","NativeBaseConfigProvider","useNativeBaseConfig"],"mappings":"gjBAAA,sDACA,gDAmBO,GAAMA,CAAAA,aAAgC,CAAG,CAC9CC,UAAU,CAAE,KADkC,CAAzC,C,uDAIwD,kCAI5D,0BAJ4D,C,+DAAjDC,wB,oBAA0BC,mB","sourcesContent":["import { createContext } from '../utils/createContext';\nimport { ThemeConsumer, ThemeContext } from 'styled-components/native';\nimport type { ITheme } from './../theme';\nimport type { IModeType } from './StrictMode';\n\nexport {\n  ThemeConsumer as NativeBaseConsumer,\n  ThemeContext as NativeBaseContext,\n};\n\nexport interface INativebaseConfig {\n  theme?: ITheme;\n  suppressColorAccessibilityWarning?: boolean;\n  dependencies?: {\n    'linear-gradient': any;\n  };\n  enableRem?: boolean;\n  strictMode?: IModeType;\n}\n\nexport const defaultConfig: INativebaseConfig = {\n  strictMode: 'off',\n};\n\nexport const [NativeBaseConfigProvider, useNativeBaseConfig] = createContext<{\n  config: INativebaseConfig;\n  currentBreakpoint: number;\n  isSSR?: boolean;\n}>('NativeBaseConfigProvider');\n"]}