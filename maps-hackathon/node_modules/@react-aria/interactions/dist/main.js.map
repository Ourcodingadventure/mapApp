{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-aria/interactions/src/textSelection.ts","./packages/@react-aria/interactions/src/utils.ts","./packages/@react-aria/interactions/src/context.ts","./packages/@react-aria/interactions/src/usePress.ts","./packages/@react-aria/interactions/src/Pressable.tsx","./packages/@react-aria/interactions/src/PressResponder.tsx","./packages/@react-aria/interactions/src/useFocus.ts","./packages/@react-aria/interactions/src/useFocusVisible.ts","./packages/@react-aria/interactions/src/useFocusWithin.ts","./packages/@react-aria/interactions/src/useHover.ts","./packages/@react-aria/interactions/src/useInteractOutside.ts","./packages/@react-aria/interactions/src/createEventHandler.ts","./packages/@react-aria/interactions/src/useKeyboard.ts","./packages/@react-aria/interactions/src/useMove.ts","./packages/@react-aria/interactions/src/useScrollWheel.ts"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {runAfterTransition} from '@react-aria/utils';\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\ntype State = 'default' | 'disabled' | 'restoring';\n\nlet state: State = 'default';\nlet savedUserSelect = '';\n\nexport function disableTextSelection() {\n  if (state === 'default') {\n    savedUserSelect = document.documentElement.style.webkitUserSelect;\n    document.documentElement.style.webkitUserSelect = 'none';\n  }\n\n  state = 'disabled';\n}\n\nexport function restoreTextSelection() {\n  // If the state is already default, there's nothing to do.\n  // If it is restoring, then there's no need to queue a second restore.\n  if (state !== 'disabled') {\n    return;\n  }\n\n  state = 'restoring';\n\n  // There appears to be a delay on iOS where selection still might occur\n  // after pointer up, so wait a bit before removing user-select.\n  setTimeout(() => {\n    // Wait for any CSS transitions to complete so we don't recompute style\n    // for the whole page in the middle of the animation and cause jank.\n    runAfterTransition(() => {\n      // Avoid race conditions\n      if (state === 'restoring') {\n        if (document.documentElement.style.webkitUserSelect === 'none') {\n          document.documentElement.style.webkitUserSelect = savedUserSelect || '';\n        }\n\n        savedUserSelect = '';\n        state = 'default';\n      }\n    });\n  }, 300);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/blob/3c713d513195a53788b3f8bb4b70279d68b15bcc/packages/react-interactions/events/src/dom/shared/index.js#L74-L87\n\n// Keyboards, Assistive Technologies, and element.click() all produce a \"virtual\"\n// click event. This is a method of inferring such clicks. Every browser except\n// IE 11 only sets a zero value of \"detail\" for click events that are \"virtual\".\n// However, IE 11 uses a zero value for all click events. For IE 11 we rely on\n// the quirk that it produces click events that are of type PointerEvent, and\n// where only the \"virtual\" click lacks a pointerType field.\n\nexport function isVirtualClick(event: MouseEvent | PointerEvent): boolean {\n  // JAWS/NVDA with Firefox.\n  if ((event as any).mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n\n  return event.detail === 0 && !(event as PointerEvent).pointerType;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PressProps} from './usePress';\nimport React, {MutableRefObject} from 'react';\n\ninterface IPressResponderContext extends PressProps {\n  register(): void,\n  ref?: MutableRefObject<HTMLElement>\n}\n\nexport const PressResponderContext = React.createContext<IPressResponderContext>(null);\nPressResponderContext.displayName = 'PressResponderContext';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {disableTextSelection, restoreTextSelection} from './textSelection';\nimport {focusWithoutScrolling, mergeProps, useGlobalListeners, useSyncRef} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject, useContext, useEffect, useMemo, useRef, useState} from 'react';\nimport {isVirtualClick} from './utils';\nimport {PointerType, PressEvents} from '@react-types/shared';\nimport {PressResponderContext} from './context';\n\nexport interface PressProps extends PressEvents {\n  /** Whether the target is in a controlled press state (e.g. an overlay it triggers is open). */\n  isPressed?: boolean,\n  /** Whether the press events should be disabled. */\n  isDisabled?: boolean,\n  /** Whether the target should not receive focus on press. */\n  preventFocusOnPress?: boolean,\n  /**\n   * Whether press events should be canceled when the pointer leaves the target while pressed.\n   * By default, this is `false`, which means if the pointer returns back over the target while\n   * still pressed, onPressStart will be fired again. If set to `true`, the press is canceled\n   * when the pointer leaves the target and onPressStart will not be fired if the pointer returns.\n   */\n  shouldCancelOnPointerExit?: boolean\n}\n\nexport interface PressHookProps extends PressProps {\n  /** A ref to the target element. */\n  ref?: RefObject<HTMLElement>\n}\n\ninterface PressState {\n  isPressed: boolean,\n  ignoreEmulatedMouseEvents: boolean,\n  ignoreClickAfterPress: boolean,\n  didFirePressStart: boolean,\n  activePointerId: any,\n  target: HTMLElement | null,\n  isOverTarget: boolean,\n  pointerType: PointerType,\n  userSelect?: string\n}\n\ninterface EventBase {\n  currentTarget: EventTarget,\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\nexport interface PressResult {\n  /** Whether the target is currently pressed. */\n  isPressed: boolean,\n  /** Props to spread on the target element. */\n  pressProps: HTMLAttributes<HTMLElement>\n}\n\nfunction usePressResponderContext(props: PressHookProps): PressHookProps {\n  // Consume context from <PressResponder> and merge with props.\n  let context = useContext(PressResponderContext);\n  if (context) {\n    let {register, ...contextProps} = context;\n    props = mergeProps(contextProps, props) as PressHookProps;\n    register();\n  }\n  useSyncRef(context, props.ref);\n\n  return props;\n}\n\n/**\n * Handles press interactions across mouse, touch, keyboard, and screen readers.\n * It normalizes behavior across browsers and platforms, and handles many nuances\n * of dealing with pointer and keyboard events.\n */\nexport function usePress(props: PressHookProps): PressResult {\n  let {\n    onPress,\n    onPressChange,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    isDisabled,\n    isPressed: isPressedProp,\n    preventFocusOnPress,\n    shouldCancelOnPointerExit,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, // Removing `ref` from `domProps` because TypeScript is dumb,\n    ...domProps\n  } = usePressResponderContext(props);\n  let propsRef = useRef<PressHookProps>(null);\n  propsRef.current = {onPress, onPressChange, onPressStart, onPressEnd, onPressUp, isDisabled, shouldCancelOnPointerExit};\n\n  let [isPressed, setPressed] = useState(false);\n  let ref = useRef<PressState>({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n\n  let {addGlobalListener, removeAllGlobalListeners} = useGlobalListeners();\n\n  let pressProps = useMemo(() => {\n    let state = ref.current;\n    let triggerPressStart = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressStart, onPressChange, isDisabled} = propsRef.current;\n      if (isDisabled || state.didFirePressStart) {\n        return;\n      }\n\n      if (onPressStart) {\n        onPressStart({\n          type: 'pressstart',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(true);\n      }\n\n      state.didFirePressStart = true;\n      setPressed(true);\n    };\n\n    let triggerPressEnd = (originalEvent: EventBase, pointerType: PointerType, wasPressed = true) => {\n      let {onPressEnd, onPressChange, onPress, isDisabled} = propsRef.current;\n      if (!state.didFirePressStart) {\n        return;\n      }\n\n      state.ignoreClickAfterPress = true;\n      state.didFirePressStart = false;\n\n      if (onPressEnd) {\n        onPressEnd({\n          type: 'pressend',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(false);\n      }\n\n      setPressed(false);\n\n      if (onPress && wasPressed && !isDisabled) {\n        onPress({\n          type: 'press',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    let triggerPressUp = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressUp, isDisabled} = propsRef.current;\n      if (isDisabled) {\n        return;\n      }\n\n      if (onPressUp) {\n        onPressUp({\n          type: 'pressup',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    let cancel = (e: EventBase) => {\n      if (state.isPressed) {\n        if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n        state.isPressed = false;\n        state.isOverTarget = false;\n        state.activePointerId = null;\n        state.pointerType = null;\n        removeAllGlobalListeners();\n        restoreTextSelection();\n      }\n    };\n\n    let pressProps: HTMLAttributes<HTMLElement> = {\n      onKeyDown(e) {\n        if (isValidKeyboardEvent(e.nativeEvent) && e.currentTarget.contains(e.target as HTMLElement)) {\n          e.preventDefault();\n          e.stopPropagation();\n\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget as HTMLElement;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred.\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        }\n      },\n      onKeyUp(e) {\n        if (isValidKeyboardEvent(e.nativeEvent) && !e.repeat && e.currentTarget.contains(e.target as HTMLElement)) {\n          triggerPressUp(createEvent(state.target, e), 'keyboard');\n        }\n      },\n      onClick(e) {\n        if (e && !e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) {\n            e.preventDefault();\n          }\n\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && isVirtualClick(e.nativeEvent)) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled && !preventFocusOnPress) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n\n    let onKeyUp = (e: KeyboardEvent) => {\n      if (state.isPressed && isValidKeyboardEvent(e)) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        state.isPressed = false;\n        triggerPressEnd(createEvent(state.target, e), 'keyboard', e.target === state.target);\n        removeAllGlobalListeners();\n\n        // If the target is a link, trigger the click method to open the URL,\n        // but defer triggering pressEnd until onClick event handler.\n        if (e.target === state.target && isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link') {\n          state.target.click();\n        }\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = (e) => {\n        // Only handle left clicks, and ignore events that bubbled through portals.\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.target as Element)) {\n          e.preventDefault();\n        }\n\n        // iOS safari fires pointer events from VoiceOver (but only when outside an iframe...)\n        // https://bugs.webkit.org/show_bug.cgi?id=222627\n        state.pointerType = isVirtualPointerEvent(e.nativeEvent) ? 'virtual' : e.pointerType;\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n\n          if (!isDisabled && !preventFocusOnPress) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n\n          disableTextSelection();\n          triggerPressStart(e, state.pointerType);\n\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n\n      pressProps.onMouseDown = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          if (shouldPreventDefault(e.target as Element)) {\n            e.preventDefault();\n          }\n\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onPointerUp = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType || (isVirtualPointerEvent(e.nativeEvent) ? 'virtual' : e.pointerType));\n        }\n      };\n\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if (isOverTarget(e, state.target)) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType);\n          } else if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          }\n\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          restoreTextSelection();\n        }\n      };\n\n      let onPointerCancel = (e: PointerEvent) => {\n        cancel(e);\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        // Safari does not call onPointerCancel when a drag starts, whereas Chrome and Firefox do.\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.target as Element)) {\n          e.preventDefault();\n        }\n\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) {\n          return;\n        }\n\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse';\n\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n\n      pressProps.onMouseLeave = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      pressProps.onMouseUp = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, state.pointerType);\n        }\n      };\n\n      let onMouseUp = (e: MouseEvent) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        state.isPressed = false;\n        removeAllGlobalListeners();\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        let touch = getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = 'touch';\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        disableTextSelection();\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchMove = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      pressProps.onTouchEnd = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(e, state.pointerType, false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        restoreTextSelection();\n        removeAllGlobalListeners();\n      };\n\n      pressProps.onTouchCancel = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancel(e);\n        }\n      };\n\n      let onScroll = (e: Event) => {\n        if (state.isPressed && (e.target as HTMLElement).contains(state.target)) {\n          cancel({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false,\n            altKey: false\n          });\n        }\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        cancel(e);\n      };\n    }\n\n    return pressProps;\n  }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners]);\n\n  // Remove user-select: none in case component unmounts immediately after pressStart\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => restoreTextSelection();\n  }, []);\n\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\n\nfunction isHTMLAnchorLink(target: HTMLElement): boolean {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\n\nfunction isValidKeyboardEvent(event: KeyboardEvent): boolean {\n  const {key, target} = event;\n  const element = target as HTMLElement;\n  const {tagName, isContentEditable} = element;\n  const role = element.getAttribute('role');\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (\n    (key === 'Enter' || key === ' ' || key === 'Spacebar') &&\n    (tagName !== 'INPUT' &&\n      tagName !== 'TEXTAREA' &&\n      isContentEditable !== true) &&\n    // A link with a valid href should be handled natively,\n    // unless it also has role='button' and was triggered using Space.\n    (!isHTMLAnchorLink(element) || (role === 'button' && key !== 'Enter')) &&\n    // An element with role='link' should only trigger with Enter key\n    !(role === 'link' && key !== 'Enter')\n  );\n}\n\nfunction getTouchFromEvent(event: TouchEvent): Touch | null {\n  const {targetTouches} = event;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\n\nfunction getTouchById(\n  event: TouchEvent,\n  pointerId: null | number\n): null | Touch {\n  const changedTouches = event.changedTouches;\n  for (let i = 0; i < changedTouches.length; i++) {\n    const touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\n\nfunction createEvent(target: HTMLElement, e: EventBase): EventBase {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\n\ninterface Rect {\n  top: number,\n  right: number,\n  bottom: number,\n  left: number\n}\n\ninterface EventPoint {\n  clientX: number,\n  clientY: number,\n  width?: number,\n  height?: number,\n  radiusX?: number,\n  radiusY?: number\n}\n\nfunction getPointClientRect(point: EventPoint): Rect {\n  let offsetX = (point.width / 2) || point.radiusX || 0;\n  let offsetY = (point.height / 2) || point.radiusY || 0;\n\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\n\nfunction areRectanglesOverlapping(a: Rect, b: Rect) {\n  // check if they cannot overlap on x axis\n  if (a.left > b.right || b.left > a.right) {\n    return false;\n  }\n  // check if they cannot overlap on y axis\n  if (a.top > b.bottom || b.top > a.bottom) {\n    return false;\n  }\n  return true;\n}\n\nfunction isOverTarget(point: EventPoint, target: HTMLElement) {\n  let rect = target.getBoundingClientRect();\n  let pointRect = getPointClientRect(point);\n  return areRectanglesOverlapping(rect, pointRect);\n}\n\nfunction shouldPreventDefault(target: Element) {\n  // We cannot prevent default if the target is inside a draggable element.\n  return !target.closest('[draggable=\"true\"]');\n}\n\nfunction isVirtualPointerEvent(event: PointerEvent) {\n  // If the pointer size is zero, then we assume it's from a screen reader.\n  return event.width === 0 && event.height === 0;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps, usePress} from './usePress';\nimport React, {HTMLAttributes, ReactElement, RefObject, useRef} from 'react';\n\ninterface PressableProps extends PressProps {\n  children: ReactElement<HTMLAttributes<HTMLElement>, string>\n}\n\nexport const Pressable = React.forwardRef(({children, ...props}: PressableProps, ref: RefObject<HTMLElement>) => {\n  let newRef = useRef();\n  ref = ref ?? newRef;\n  let {pressProps} = usePress({...props, ref});\n  let child = React.Children.only(children);\n  return React.cloneElement(\n    child,\n    // @ts-ignore\n    {ref, ...mergeProps(child.props, pressProps)}\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: RefObject<HTMLElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref: ref || prevContext?.ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useSyncRef(prevContext, ref);\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      console.warn(\n        'A PressResponder was rendered without a pressable child. ' +\n        'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n      );\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {FocusEvent, HTMLAttributes} from 'react';\nimport {FocusEvents} from '@react-types/shared';\n\ninterface FocusProps extends FocusEvents {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface FocusResult {\n  /** Props to spread onto the target element. */\n  focusProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus(props: FocusProps): FocusResult {\n  if (props.isDisabled) {\n    return {focusProps: {}};\n  }\n\n  let onFocus, onBlur;\n  if (props.onFocus || props.onFocusChange) {\n    onFocus = (e: FocusEvent) => {\n      if (e.target === e.currentTarget) {\n        if (props.onFocus) {\n          props.onFocus(e);\n        }\n\n        if (props.onFocusChange) {\n          props.onFocusChange(true);\n        }\n      }\n    };\n  }\n\n  if (props.onBlur || props.onFocusChange) {\n    onBlur = (e: FocusEvent) => {\n      if (e.target === e.currentTarget) {\n        if (props.onBlur) {\n          props.onBlur(e);\n        }\n\n        if (props.onFocusChange) {\n          props.onFocusChange(false);\n        }\n      }\n    };\n  }\n\n  return {\n    focusProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {isMac} from '@react-aria/utils';\nimport {isVirtualClick} from './utils';\nimport {useEffect, useState} from 'react';\n\ntype Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\ntype FocusVisibleHandler = (isFocusVisible: boolean) => void;\ninterface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\ninterface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality = null;\nlet changeHandlers = new Set<Handler>();\nlet hasSetupGlobalListeners = false;\nlet hasEventBeforeFocus = false;\nlet hasBlurredWindowRecently = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  // Control and Shift keys trigger when navigating back to the tab with keyboard.\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey || e.type === 'keyup' && (e.key === 'Control' || e.key === 'Shift'));\n}\n\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = 'virtual';\n    triggerChangeHandlers('virtual', e);\n  }\n\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners) {\n    return;\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n\n  document.addEventListener('keydown', handleKeyboardEvent, true);\n  document.addEventListener('keyup', handleKeyboardEvent, true);\n  document.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener('focus', handleFocusEvent, true);\n  window.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', handlePointerEvent, true);\n    document.addEventListener('pointermove', handlePointerEvent, true);\n    document.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', handlePointerEvent, true);\n    document.addEventListener('mousemove', handlePointerEvent, true);\n    document.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners = true;\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    setupGlobalFocusEvents();\n  } else {\n    document.addEventListener('DOMContentLoaded', setupGlobalFocusEvents);\n  }\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return modality;\n}\n\n/**\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\n * focus visible style can be properly set.\n */\nfunction isKeyboardFocusEvent(isTextInput: boolean, modality: Modality, e: HandlerEvent) {\n  return !(isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useFocusVisibleListener((isFocusVisible) => {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {isTextInput});\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n\n/**\n * Listens for trigger change and reports if focus is visible (i.e., modality is not pointer).\n */\nexport function useFocusVisibleListener(fn: FocusVisibleHandler, deps: ReadonlyArray<any>, opts?: {isTextInput?: boolean}): void {\n  setupGlobalFocusEvents();\n\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      if (!isKeyboardFocusEvent(opts?.isTextInput, modality, e)) {\n        return;\n      }\n      fn(isFocusVisible());\n    };\n    changeHandlers.add(handler);\n    return () => changeHandlers.delete(handler);\n  }, deps);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {FocusEvent, HTMLAttributes, useRef} from 'react';\n\ninterface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\ninterface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let state = useRef({\n    isFocusWithin: false\n  }).current;\n\n  if (props.isDisabled) {\n    return {focusWithinProps: {}};\n  }\n\n  let onFocus = (e: FocusEvent) => {\n    if (!state.isFocusWithin) {\n      if (props.onFocusWithin) {\n        props.onFocusWithin(e);\n      }\n\n      if (props.onFocusWithinChange) {\n        props.onFocusWithinChange(true);\n      }\n\n      state.isFocusWithin = true;\n    }\n  };\n\n  let onBlur = (e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.isFocusWithin && !e.currentTarget.contains(e.relatedTarget as HTMLElement)) {\n      if (props.onBlurWithin) {\n        props.onBlurWithin(e);\n      }\n\n      if (props.onFocusWithinChange) {\n        props.onFocusWithinChange(false);\n      }\n\n      state.isFocusWithin = false;\n    }\n  };\n\n  return {\n    focusWithinProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {HoverEvents} from '@react-types/shared';\nimport {HTMLAttributes, useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: HTMLAttributes<HTMLElement>,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let {hoverProps, triggerHoverEnd} = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      state.pointerType = pointerType;\n      if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.target;\n      state.target = target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      state.pointerType = '';\n      state.target = null;\n\n      if (pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.target;\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: HTMLAttributes<HTMLElement> = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as HTMLElement)) {\n          triggerHoverEnd(e, e.pointerType);\n        }\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as HTMLElement)) {\n          triggerHoverEnd(e, 'mouse');\n        }\n      };\n    }\n    return {hoverProps, triggerHoverEnd};\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  useEffect(() => {\n    // Call the triggerHoverEnd as soon as isDisabled changes to true\n    // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n    if (isDisabled) {\n      triggerHoverEnd({target: state.target}, state.pointerType);\n    }\n  }, [isDisabled]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {RefObject, SyntheticEvent, useEffect, useRef} from 'react';\n\ninterface InteractOutsideProps {\n  ref: RefObject<Element>,\n  onInteractOutside?: (e: SyntheticEvent) => void,\n  onInteractOutsideStart?: (e: SyntheticEvent) => void,\n  /** Whether the interact outside events should be disabled. */\n  isDisabled?: boolean\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useInteractOutside(props: InteractOutsideProps) {\n  let {ref, onInteractOutside, isDisabled, onInteractOutsideStart} = props;\n  let stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n    onInteractOutside,\n    onInteractOutsideStart\n  });\n  let state = stateRef.current;\n  state.onInteractOutside = onInteractOutside;\n  state.onInteractOutsideStart = onInteractOutsideStart;\n\n  useEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    let onPointerDown = (e) => {\n      if (isValidEvent(e, ref) && state.onInteractOutside) {\n        if (state.onInteractOutsideStart) {\n          state.onInteractOutsideStart(e);\n        }\n        state.isPointerDown = true;\n      }\n    };\n\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = (e) => {\n        if (state.isPointerDown && state.onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      // changing these to capture phase fixed combobox\n      document.addEventListener('pointerdown', onPointerDown, true);\n      document.addEventListener('pointerup', onPointerUp, true);\n\n      return () => {\n        document.removeEventListener('pointerdown', onPointerDown, true);\n        document.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      let onMouseUp = (e) => {\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n        } else if (state.isPointerDown && state.onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      let onTouchEnd = (e) => {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.onInteractOutside && state.isPointerDown && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      document.addEventListener('mousedown', onPointerDown, true);\n      document.addEventListener('mouseup', onMouseUp, true);\n      document.addEventListener('touchstart', onPointerDown, true);\n      document.addEventListener('touchend', onTouchEnd, true);\n\n      return () => {\n        document.removeEventListener('mousedown', onPointerDown, true);\n        document.removeEventListener('mouseup', onMouseUp, true);\n        document.removeEventListener('touchstart', onPointerDown, true);\n        document.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [ref, state, isDisabled]);\n}\n\nfunction isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n\n  // if the event target is no longer in the document\n  if (event.target) {\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) {\n      return false;\n    }\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseEvent} from '@react-types/shared';\nimport {SyntheticEvent} from 'react';\n\n/**\n * This function wraps a React event handler to make stopPropagation the default, and support continuePropagation instead.\n */\nexport function createEventHandler<T extends SyntheticEvent>(handler: (e: BaseEvent<T>) => void): (e: T) => void {\n  if (!handler) {\n    return;\n  }\n\n  let shouldStopPropagation = true;\n  return (e: T) => {\n    let event: BaseEvent<T> = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    };\n\n    handler(event);\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {createEventHandler} from './createEventHandler';\nimport {HTMLAttributes} from 'react';\nimport {KeyboardEvents} from '@react-types/shared';\n\nexport interface KeyboardProps extends KeyboardEvents {\n  /** Whether the keyboard events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface KeyboardResult {\n  /** Props to spread onto the target element. */\n  keyboardProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles keyboard interactions for a focusable element.\n */\nexport function useKeyboard(props: KeyboardProps): KeyboardResult {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: createEventHandler(props.onKeyDown),\n      onKeyUp: createEventHandler(props.onKeyUp)\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {disableTextSelection, restoreTextSelection}  from './textSelection';\nimport {MoveEvents, PointerType} from '@react-types/shared';\nimport React, {HTMLAttributes, useMemo, useRef} from 'react';\nimport {useGlobalListeners} from '@react-aria/utils';\n\ninterface MoveResult {\n  /** Props to spread on the target element. */\n  moveProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles move interactions across mouse, touch, and keyboard, including dragging with\n * the mouse or touch, and using the arrow keys. Normalizes behavior across browsers and\n * platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useMove(props: MoveEvents): MoveResult {\n  let {onMoveStart, onMove, onMoveEnd} = props;\n\n  let state = useRef<{\n    didMove: boolean,\n    lastPosition: {pageX: number, pageY: number} | null,\n    id: number | null\n  }>({didMove: false, lastPosition: null, id: null});\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let moveProps = useMemo(() => {\n    let moveProps: HTMLAttributes<HTMLElement> = {};\n\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n    let move = (pointerType: PointerType, deltaX: number, deltaY: number) => {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart?.({\n          type: 'movestart',\n          pointerType\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY\n      });\n    };\n    let end = (pointerType: PointerType) => {\n      restoreTextSelection();\n      if (state.current.didMove) {\n        onMoveEnd?.({\n          type: 'moveend',\n          pointerType\n        });\n      }\n    };\n\n    if (typeof PointerEvent === 'undefined') {\n      let onMouseMove = (e: MouseEvent) => {\n        if (e.button === 0) {\n          move('mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n      let onMouseUp = (e: MouseEvent) => {\n        if (e.button === 0) {\n          end('mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = (e: React.MouseEvent) => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n\n      let onTouchMove = (e: TouchEvent) => {\n        // @ts-ignore\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          let {pageX, pageY} = e.changedTouches[touch];\n          move('touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX, pageY};\n        }\n      };\n      let onTouchEnd = (e: TouchEvent) => {\n        // @ts-ignore\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          end('touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = (e: React.TouchEvent) => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n\n        let {pageX, pageY, identifier} = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {pageX, pageY};\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          // @ts-ignore\n          let pointerType: PointerType = e.pointerType || 'mouse';\n\n          // Problems with PointerEvent#movementX/movementY:\n          // 1. it is always 0 on macOS Safari.\n          // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n          move(pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n            // @ts-ignore\n          let pointerType: PointerType = e.pointerType || 'mouse';\n          end(pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n\n      moveProps.onPointerDown = (e: React.PointerEvent) => {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n\n    let triggerKeyboardMove = (deltaX: number, deltaY: number) => {\n      start();\n      move('keyboard', deltaX, deltaY);\n      end('keyboard');\n    };\n\n    moveProps.onKeyDown = (e) => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(-1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n\n  return {moveProps};\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useCallback} from 'react';\nimport {ScrollEvents} from '@react-types/shared';\nimport {useEvent} from '@react-aria/utils';\n\nexport interface ScrollWheelProps extends ScrollEvents {\n  /** Whether the scroll listener should be disabled. */\n  isDisabled?: boolean\n}\n\n// scroll wheel needs to be added not passively so it's cancelable, small helper hook to remember that\nexport function useScrollWheel(props: ScrollWheelProps, ref: RefObject<HTMLElement>): void {\n  let {onScroll, isDisabled} = props;\n  let onScrollHandler = useCallback((e) => {\n    // If the ctrlKey is pressed, this is a zoom event, do nothing.\n    if (e.ctrlKey) {\n      return;\n    }\n\n    // stop scrolling the page\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (onScroll) {\n      onScroll({deltaX: e.deltaX, deltaY: e.deltaY});\n    }\n  }, [onScroll]);\n\n  useEvent(ref, 'wheel', isDisabled ? null : onScrollHandler);\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","state","savedUserSelect","disableTextSelection","document","documentElement","style","webkitUserSelect","restoreTextSelection","setTimeout","runAfterTransition","isVirtualClick","event","mozInputSource","isTrusted","detail","pointerType","PressResponderContext","React","createContext","displayName","usePressResponderContext","props","context","useContext","register","contextProps","mergeProps","useSyncRef","ref","usePress","onPress","onPressChange","onPressStart","onPressEnd","onPressUp","isDisabled","isPressed","isPressedProp","preventFocusOnPress","shouldCancelOnPointerExit","domProps","propsRef","useRef","current","setPressed","useState","ignoreEmulatedMouseEvents","ignoreClickAfterPress","didFirePressStart","activePointerId","target","isOverTarget","addGlobalListener","removeAllGlobalListeners","useGlobalListeners","pressProps","useMemo","triggerPressStart","originalEvent","type","currentTarget","shiftKey","metaKey","ctrlKey","altKey","triggerPressEnd","wasPressed","triggerPressUp","cancel","e","createEvent","onKeyDown","isValidKeyboardEvent","nativeEvent","contains","preventDefault","stopPropagation","repeat","onKeyUp","onClick","button","focusWithoutScrolling","isHTMLAnchorLink","getAttribute","click","PointerEvent","onPointerDown","shouldPreventDefault","isVirtualPointerEvent","pointerId","onPointerMove","onPointerUp","onPointerCancel","onMouseDown","onDragStart","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","touch","getTouchFromEvent","identifier","window","onScroll","onTouchMove","getTouchById","onTouchEnd","onTouchCancel","useEffect","tagName","hasAttribute","key","element","isContentEditable","role","targetTouches","length","changedTouches","i","getPointClientRect","point","offsetX","width","radiusX","offsetY","height","radiusY","top","clientY","right","clientX","bottom","left","areRectanglesOverlapping","b","rect","getBoundingClientRect","pointRect","closest","Pressable","forwardRef","children","newRef","child","Children","only","cloneElement","PressResponder","isRegistered","prevContext","console","warn","useFocus","focusProps","onFocus","onBlur","onFocusChange","currentModality","changeHandlers","Set","hasSetupGlobalListeners","hasEventBeforeFocus","hasBlurredWindowRecently","FOCUS_VISIBLE_INPUT_KEYS","Tab","Escape","triggerChangeHandlers","modality","handler","isValidKey","isMac","handleKeyboardEvent","handlePointerEvent","handleClickEvent","handleFocusEvent","handleWindowBlur","setupGlobalFocusEvents","focus","HTMLElement","prototype","apply","arguments","addEventListener","readyState","isFocusVisible","getInteractionModality","setInteractionModality","useInteractionModality","setModality","add","delete","isKeyboardFocusEvent","isTextInput","KeyboardEvent","useFocusVisible","autoFocus","isFocusVisibleState","setFocusVisible","useFocusVisibleListener","fn","deps","opts","useFocusWithin","isFocusWithin","focusWithinProps","onFocusWithin","onFocusWithinChange","relatedTarget","onBlurWithin","globalIgnoreEmulatedMouseEvents","hoverCount","setGlobalIgnoreEmulatedMouseEvents","handleGlobalPointerEvent","setupGlobalTouchEvents","removeEventListener","useHover","onHoverStart","onHoverChange","onHoverEnd","isHovered","setHovered","hoverProps","triggerHoverEnd","triggerHoverStart","onPointerEnter","onPointerLeave","useInteractOutside","onInteractOutside","onInteractOutsideStart","stateRef","isPointerDown","isValidEvent","ownerDocument","createEventHandler","shouldStopPropagation","isDefaultPrevented","error","continuePropagation","useKeyboard","keyboardProps","useMove","onMoveStart","onMove","onMoveEnd","didMove","lastPosition","id","removeGlobalListener","moveProps","start","move","deltaX","deltaY","end","onMouseMove","pageX","pageY","findIndex","triggerKeyboardMove","useScrollWheel","onScrollHandler","useCallback","useEvent"],"version":3,"file":"main.js.map"}